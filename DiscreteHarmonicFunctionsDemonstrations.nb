(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    573502,      10956]
NotebookOptionsPosition[    564460,      10788]
NotebookOutlinePosition[    566587,      10840]
CellTagsIndexPosition[    566243,      10828]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Discrete Harmonic Functions and Dirichlet's Relaxation Method\
\>", "DemoTitle",
 CellChangeTimes->{{3.750634055388907*^9, 3.7506341238144283`*^9}, {
  3.750634227985404*^9, 
  3.750634267018573*^9}},ExpressionUUID->"fca3b871-6391-41c1-a677-\
6dd10825a8ab"],

Cell[CellGroupData[{

Cell["", "InitializationSection",ExpressionUUID->"9c60944b-1fc6-432d-8bf3-698c5a77df14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[IndentingNewLine]", "\t", 
             RowBox[{
             "Function", " ", "the", " ", "apply", " ", "method", " ", "of", 
              " ", "relaxation", " ", "on", " ", "the", " ", "given", " ", 
              "matrix", " ", "to", " ", "generate", " ", "harmonic", " ", 
              RowBox[{"landscape", ".", " ", "This"}], " ", "function", " ", 
              "deal", " ", "with", " ", "the", " ", "landscape", " ", "which",
               " ", "has", " ", "a", " ", "ring", " ", 
              RowBox[{
              "inside", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               "    ", 
               RowBox[{"Input", ":", "           ", "1"}]}]}], ")"}], " ", 
            "inMatirx_:", " ", "the", " ", "matrix", " ", "we", " ", "want", 
            " ", "to", " ", "apply", " ", "method", " ", "of", " ", 
            "relaxation", " ", 
            RowBox[{
            "on", ".", "\[IndentingNewLine]", "\t\t\t\t\t   ", "2"}]}], ")"}],
           " ", "inRingX_:", " ", "the", " ", "x", " ", "index", " ", "of", 
          " ", "the", " ", "top", " ", "right", " ", "corner", " ", "of", " ",
           "the", " ", "ring", "\[IndentingNewLine]", "\t\t\t\t\t\t  ", "3"}],
          ")"}], " ", "inRingY_:", " ", "the", " ", "y", " ", "index", " ", 
        "of", " ", "the", " ", "top", " ", "right", " ", "corner", " ", "of", 
        " ", "the", " ", "ring", "\[IndentingNewLine]", "\t\t\t\t\t\t\t", 
        "4"}], ")"}], " ", "inRingXLen_:", " ", "the", " ", "width", " ", 
      "of", " ", "the", " ", 
      RowBox[{"ring", ".", "\[IndentingNewLine]", "\t\t\t\t\t\t\t ", "5"}]}], 
     ")"}], " ", "inRingYLen_:", " ", "the", " ", "height", " ", "of", " ", 
    "the", " ", 
    RowBox[{"ring", ".", "\[IndentingNewLine]", "\t\t\t  ", 
     RowBox[{"Output", ":", " ", 
      RowBox[{
      "This", " ", "function", " ", "return", " ", "the", " ", "result", " ", 
       "matrix", " ", "after", " ", "one", " ", "iteration", " ", "of", " ", 
       "every", " ", "\[IndentingNewLine]", "lattice", " ", "point", " ", 
       "inside", " ", 
       RowBox[{"it", "."}]}]}]}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"relaxationProcessRing", "[", 
     RowBox[{
     "inMatrix_", ",", " ", "inRingX_", ",", " ", "inRingY_", ",", " ", 
      "inRingXLen_", ",", " ", "inRingYLen_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", " ", "=", " ", 
         RowBox[{"N", "[", "inMatrix", "]"}]}], ",", " ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"l", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
        RowBox[{"x", " ", "=", " ", "inRingX"}], ",", " ", 
        RowBox[{"y", " ", "=", " ", "inRingY"}], ",", " ", 
        RowBox[{"xl", " ", "=", " ", "inRingXLen"}], ",", " ", 
        RowBox[{"yl", " ", "=", " ", "inRingYLen"}]}], "}"}], ",", " ", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", " ", "+", " ", "1"}], ",", "j"}], "]"}], "]"}], 
             " ", "+", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "j"}], "]"}], 
              "]"}], " ", "+", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"j", " ", "+", " ", "1"}]}], "]"}], "]"}], " ", "+", 
             " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"j", " ", "-", " ", "1"}]}], "]"}], "]"}]}], ")"}], 
           "/", "4"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", " ", ",", " ", "2", " ", ",", " ", 
           RowBox[{"l", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", 
           RowBox[{"x", " ", "-", " ", "1"}]}], "}"}]}], "]"}], " ", 
       RowBox[{"(*", 
        RowBox[{"above", " ", "ring"}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", " ", "+", " ", "1"}], ",", "j"}], "]"}], "]"}], 
             " ", "+", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "j"}], "]"}], 
              "]"}], " ", "+", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"j", " ", "+", " ", "1"}]}], "]"}], "]"}], " ", "+", 
             " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"j", " ", "-", " ", "1"}]}], "]"}], "]"}]}], ")"}], 
           "/", "4"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", " ", ",", " ", "2", " ", ",", " ", 
           RowBox[{"l", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", 
           RowBox[{"x", " ", "+", " ", "xl", "+", " ", "1"}], ",", 
           RowBox[{"h", " ", "-", " ", "1"}]}], "}"}]}], "]"}], " ", 
       RowBox[{"(*", 
        RowBox[{"below", " ", "ring"}], "*)"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", " ", "+", " ", "1"}], ",", "j"}], "]"}], "]"}], 
             " ", "+", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "j"}], "]"}], 
              "]"}], " ", "+", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"j", " ", "+", " ", "1"}]}], "]"}], "]"}], " ", "+", 
             " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"j", " ", "-", " ", "1"}]}], "]"}], "]"}]}], ")"}], 
           "/", "4"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", " ", ",", " ", "2", " ", ",", " ", 
           RowBox[{"y", " ", "-", "1"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "x", ",", " ", 
           RowBox[{"x", " ", "+", " ", "xl"}]}], "}"}]}], "]"}], " ", 
       RowBox[{"(*", 
        RowBox[{"left", " ", "of", " ", "ring"}], "*)"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", " ", "+", " ", "1"}], ",", "j"}], "]"}], "]"}], 
             " ", "+", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "j"}], "]"}], 
              "]"}], " ", "+", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"j", " ", "+", " ", "1"}]}], "]"}], "]"}], " ", "+", 
             " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"j", " ", "-", " ", "1"}]}], "]"}], "]"}]}], ")"}], 
           "/", "4"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", " ", ",", " ", 
           RowBox[{"y", " ", "+", " ", "1", " ", "+", " ", "yl"}], ",", " ", 
           RowBox[{"l", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "x", ",", " ", 
           RowBox[{"x", " ", "+", " ", "xl"}]}], "}"}]}], "]"}], " ", 
       RowBox[{"(*", 
        RowBox[{"right", " ", "of", " ", "ring"}], "*)"}], ";", 
       "\[IndentingNewLine]", "m"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "\t", 
    RowBox[{
    "Function", " ", "the", " ", "apply", " ", "method", " ", "of", " ", 
     "relaxation", " ", "on", " ", "the", " ", "given", " ", "matrix", " ", 
     "to", " ", "generate", " ", "harmonic", " ", 
     RowBox[{"landscape", ".", " ", "This"}], " ", "function", " ", "deal", 
     " ", "with", " ", "a", " ", "normal", " ", "matrix", " ", "without", " ",
      "second", " ", "boundary", " ", 
     RowBox[{
     "inside", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "                  ", 
      RowBox[{"Input", ":", " ", 
       RowBox[{
       "the", " ", "matrix", " ", "we", " ", "want", " ", "to", " ", "apply", 
        " ", "method", " ", "of", " ", "relaxation", " ", 
        RowBox[{
        "on", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t\t  ", 
         "Output"}]}], ":", " ", 
       RowBox[{
       "This", " ", "function", " ", "return", " ", "the", " ", "result", " ",
         "matrix", " ", "after", " ", "one", " ", "iteration", " ", "of", " ",
         "every", " ", "\[IndentingNewLine]", "lattice", " ", "point", " ", 
        "inside", " ", 
        RowBox[{"it", "."}]}]}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"relaxationProcess", "[", "inMatrix_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", " ", "=", " ", 
         RowBox[{"N", "[", "inMatrix", "]"}]}], ",", " ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"l", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], " ", "}"}], ",", " ", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", " ", "+", " ", "1"}], ",", "j"}], "]"}], "]"}], 
             " ", "+", " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "j"}], "]"}], 
              "]"}], " ", "+", " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"j", " ", "+", " ", "1"}]}], "]"}], "]"}], " ", "+", 
             " ", 
             RowBox[{"x", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", " ", 
                RowBox[{"j", " ", "-", " ", "1"}]}], "]"}], "]"}]}], ")"}], 
           "/", "4"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", " ", ",", " ", "2", " ", ",", " ", 
           RowBox[{"l", " ", "-", " ", "1"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "2", ",", " ", 
           RowBox[{"h", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], " ", "+", " ", 
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], " ", "/", " ", 
         "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "l"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "l"}], "]"}], "]"}], " ", "+", " ", 
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", 
              RowBox[{"l", "-", "1"}]}], "]"}], "]"}]}], ")"}], " ", "/", " ",
          "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"h", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"h", "-", "1"}], ",", "1"}], "]"}], "]"}], " ", "+", 
           " ", 
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{"h", ",", "2"}], "]"}], "]"}]}], ")"}], " ", "/", " ", 
         "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"[", 
          RowBox[{"h", ",", "l"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"h", " ", "-", " ", "1"}], ",", "l"}], "]"}], "]"}], 
           " ", "+", " ", 
           RowBox[{"x", "[", 
            RowBox[{"[", 
             RowBox[{"h", ",", 
              RowBox[{"l", "-", "1"}]}], "]"}], "]"}]}], ")"}], " ", "/", " ",
          "2"}]}], ";", "\[IndentingNewLine]", "x"}]}], "\[IndentingNewLine]",
      "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", "\t", 
    RowBox[{
    "This", " ", "function", " ", "calculate", " ", "the", " ", "flatness", 
     " ", "of", " ", "the", " ", "given", " ", 
     RowBox[{"landscape", ".", " ", "The"}], " ", "flatness", " ", "is", " ", 
     "calculated", " ", "by", " ", "the", " ", "sum", " ", "of", " ", "the", 
     " ", "square", " ", "of", " ", "the", " ", "distance", " ", "of", " ", 
     "a", " ", "lattice", " ", "point", " ", "to", " ", "its", " ", 
     "surrounding", " ", "lattice", " ", 
     RowBox[{
     "points", ".", "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", 
      "\t\t\t\t", 
      RowBox[{"Input", ":", " ", 
       RowBox[{
       "inMatirx_:", " ", "the", " ", "matrix", " ", "contains", " ", 
        "current", " ", "landscape", " ", "we", " ", "want", " ", "to", " ", 
        "\[IndentingNewLine]", "calculate", " ", "the", " ", "flatness", " ", 
        
        RowBox[{"on", ".", "\[IndentingNewLine]", "\t\t\t ", "Output"}]}], 
       ":", " ", 
       RowBox[{
       "the", " ", "flatness", " ", "of", " ", "the", " ", "given", " ", 
        RowBox[{"landscape", "."}]}]}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"flatnessProcess", "[", "inMatrix_", "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", " ", "=", " ", 
         RowBox[{"N", "[", "inMatrix", "]"}]}], ",", " ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"l", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
        RowBox[{"sum", " ", "=", " ", "0"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", 
                 RowBox[{"y", " ", "-", "1"}]}], "]"}], "]"}]}], ")"}], "^", 
            "2"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"x", " ", "-", " ", "1"}], ",", " ", "y"}], "]"}], 
               "]"}]}], ")"}], "^", "2"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "2", ",", " ", "l"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "2", ",", " ", "h"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"x", " ", ",", " ", "1"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"x", " ", "+", " ", "1"}], ",", " ", "1"}], "]"}], 
              "]"}]}], ")"}], "^", "2"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "1", ",", " ", 
           RowBox[{"h", "-", "1"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", 
                RowBox[{"y", " ", "+", "1"}]}], "]"}], "]"}]}], ")"}], "^", 
           "2"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "1", ",", " ", 
           RowBox[{"l", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "sum"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"\[IndentingNewLine]", "\t", 
              RowBox[{
               RowBox[{
               "This", " ", "function", " ", "calculate", " ", "the", " ", 
                "flatness", " ", "of", " ", "the", " ", "given", " ", 
                RowBox[{"landscape", ".", " ", "The"}], " ", "flatness", " ", 
                "is", " ", "calculated", " ", "by", " ", "the", " ", "sum", 
                " ", "of", " ", "the", " ", "square", " ", "of", " ", "the", 
                " ", "distance", " ", "of", " ", "a", " ", "lattice", " ", 
                "point", " ", "to", " ", "its", " ", "surrounding", " ", 
                "lattice", " ", 
                RowBox[{"points", ".", " ", "In"}], " ", "this", " ", 
                "case"}], ",", " ", 
               RowBox[{
               "we", " ", "deal", " ", "with", " ", "the", " ", "landscape", 
                " ", "with", " ", "a", " ", 
                RowBox[{"ring", ".", " ", "We"}], " ", "need", " ", "to", " ",
                 "avoid", " ", "calculating", " ", "lattice", " ", "point", 
                " ", "inside", " ", "the", " ", 
                RowBox[{
                "ring", ".", " ", "\[IndentingNewLine]", "\t", 
                 "\[IndentingNewLine]", "    ", 
                 RowBox[{"Input", ":", "           ", "1"}]}]}]}], ")"}], 
             "inMatirx_:", " ", "the", " ", "matrix", " ", "contains", " ", 
             "current", " ", "landscape", " ", "we", " ", "want", " ", "to", 
             " ", "\[IndentingNewLine]", "calculate", " ", "the", " ", 
             "flatness", " ", 
             RowBox[{
             "on", ".", "\[IndentingNewLine]", "                       ", 
              "2"}]}], ")"}], " ", "ringXIndex_:", " ", "the", " ", "x", " ", 
           "index", " ", "of", " ", "the", " ", "top", " ", "right", " ", 
           "corner", " ", "of", " ", "the", " ", "ring", 
           "\[IndentingNewLine]", "\t\t\t\t\t\t  ", "3"}], ")"}], " ", 
         "ringYIndex_:", " ", "the", " ", "y", " ", "index", " ", "of", " ", 
         "the", " ", "top", " ", "right", " ", "corner", " ", "of", " ", 
         "the", " ", "ring", "\[IndentingNewLine]", "\t\t\t\t\t\t\t", "4"}], 
        ")"}], " ", "ringXLength_:", " ", "the", " ", "width", " ", "of", " ",
        "the", " ", 
       RowBox[{"ring", ".", "\[IndentingNewLine]", "\t\t\t\t\t\t\t ", "5"}]}],
       ")"}], " ", "ringXLength_:", " ", "the", " ", "height", " ", "of", " ",
      "the", " ", 
     RowBox[{"ring", ".", "\[IndentingNewLine]", "\t\t\t  ", 
      RowBox[{"Output", ":", " ", 
       RowBox[{
       "the", " ", "flatness", " ", "of", " ", "the", " ", "given", " ", 
        RowBox[{"landscape", "."}]}]}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"flatnessProcessRing", "[", 
     RowBox[{
     "inMatrix_", ",", " ", "ringXIndex_", ",", " ", "ringYIndex_", ",", " ", 
      "ringXLength_", ",", " ", "ringYLength_"}], "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", " ", "=", " ", 
         RowBox[{"N", "[", "inMatrix", "]"}]}], ",", " ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"l", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"rX", " ", "=", " ", "ringXIndex"}], ",", 
        RowBox[{"rXL", " ", "=", " ", "ringXLength"}], ",", " ", 
        RowBox[{"rY", " ", "=", " ", "ringYIndex"}], ",", " ", 
        RowBox[{"rYL", " ", "=", "ringYLength"}], ",", " ", 
        RowBox[{"sum", " ", "=", " ", "0"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", 
                 RowBox[{"y", " ", "-", "1"}]}], "]"}], "]"}]}], ")"}], "^", 
            "2"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"x", " ", "-", " ", "1"}], ",", " ", "y"}], "]"}], 
               "]"}]}], ")"}], "^", "2"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "2", ",", " ", "l"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "2", ",", " ", "rX"}], " ", "}"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", 
                 RowBox[{"y", " ", "-", "1"}]}], "]"}], "]"}]}], ")"}], "^", 
            "2"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"x", " ", "-", " ", "1"}], ",", " ", "y"}], "]"}], 
               "]"}]}], ")"}], "^", "2"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "2", ",", " ", "l"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", 
           RowBox[{"rX", " ", "+", " ", "rXL"}], " ", ",", " ", "h"}], 
          "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", 
                 RowBox[{"y", " ", "-", "1"}]}], "]"}], "]"}]}], ")"}], "^", 
            "2"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"x", " ", "-", " ", "1"}], ",", " ", "y"}], "]"}], 
               "]"}]}], ")"}], "^", "2"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "2", ",", " ", "rY"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "rX", ",", " ", 
           RowBox[{"rX", " ", "+", " ", "rXL"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", 
                 RowBox[{"y", " ", "-", "1"}]}], "]"}], "]"}]}], ")"}], "^", 
            "2"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"x", " ", "-", " ", "1"}], ",", " ", "y"}], "]"}], 
               "]"}]}], ")"}], "^", "2"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", 
           RowBox[{"rY", " ", "+", " ", "rYL"}], ",", " ", "l"}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "rX", ",", " ", 
           RowBox[{"rX", " ", "+", " ", "rXL"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"x", " ", ",", " ", "1"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"x", " ", "+", " ", "1"}], ",", " ", "1"}], "]"}], 
              "]"}]}], ")"}], "^", "2"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "1", ",", " ", 
           RowBox[{"h", "-", "1"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", 
                RowBox[{"y", " ", "+", "1"}]}], "]"}], "]"}]}], ")"}], "^", 
           "2"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "1", ",", " ", 
           RowBox[{"l", " ", "-", " ", "1"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"x", " ", ",", " ", "1"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"x", " ", "+", " ", "1"}], ",", " ", "1"}], "]"}], 
              "]"}]}], ")"}], "^", "2"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "rX", ",", " ", 
           RowBox[{"rX", "+", "rXL", " ", "-", " ", "1"}]}], "}"}]}], "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"sum", " ", "+=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", "y"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"m", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", " ", 
                RowBox[{"y", " ", "+", "1"}]}], "]"}], "]"}]}], ")"}], "^", 
           "2"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", " ", "rY", ",", " ", 
           RowBox[{"rY", " ", "+", " ", "rYL", " ", "-", " ", "1"}]}], 
          "}"}]}], "]"}], ";", "\[IndentingNewLine]", "sum"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[IndentingNewLine]", "\t", 
        RowBox[{
        "This", " ", "function", " ", "is", " ", "used", " ", "to", " ", 
         "plot", " ", "the", " ", "given", " ", "landscape", " ", "and", " ", 
         "also", " ", "display", " ", "the", " ", "flatness", " ", "of", " ", 
         "the", " ", 
         RowBox[{"landscape", ".", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"Input", ":", "           ", "1"}]}]}], ")"}], " ", "the", 
       " ", "matirx", " ", "contains", " ", "the", " ", "landscape", " ", 
       "we", " ", "want", " ", "to", " ", 
       RowBox[{
       "plot", ".", "\[IndentingNewLine]", "\t\t\t\t\t\t\t   ", "2"}]}], 
      ")"}], " ", "the", " ", "value", " ", "of", " ", "flatness", " ", "we", 
     " ", "want", " ", "to", " ", "label", " ", "on", " ", "the", " ", 
     RowBox[{"graph", ".", "\[IndentingNewLine]", "adjust"}], " ", "mesh", 
     " ", "and", " ", 
     RowBox[{"scale", "."}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotGraph", "[", 
     RowBox[{
     "inMatrix_", ",", " ", "flatness_", ",", " ", "graphType_", ",", " ", 
      "randomVal_", ",", " ", "a_", ",", " ", "b_", ",", " ", "quaA_", ",", 
      " ", "quaB_", ",", " ", "quaC_", ",", "imageSize_"}], "]"}], ":=", " ", 
    
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", " ", "=", " ", 
         RowBox[{"N", "[", "inMatrix", "]"}]}], ",", " ", 
        RowBox[{"f", " ", "=", " ", "flatness"}], ",", " ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"l", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
        RowBox[{"g", " ", "=", " ", "graphType"}], ",", " ", 
        RowBox[{"r", " ", "=", " ", "randomVal"}], ",", " ", 
        RowBox[{"qa", " ", "=", " ", "quaA"}], ",", " ", 
        RowBox[{"qb", " ", "=", " ", "quaB"}], ",", " ", 
        RowBox[{"qc", " ", "=", " ", "quaC"}], ",", " ", 
        RowBox[{"i", " ", "=", " ", "imageSize"}]}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "g", ",", "\[IndentingNewLine]", "\t\t", "\"\<Random\>\"", ",", "\t", 
        "\[IndentingNewLine]", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                "\"\<Boundary function is random value with range \>\"", ",", 
                 
                 RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                 RowBox[{
                 "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], 
                "]"}], ",", " ", 
               RowBox[{"Style", "[", 
                RowBox[{"0", ",", " ", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", " ", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\< to \>\"", ",", " ", 
                 RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                 RowBox[{
                 "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"r", ",", " ", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"ListPlot3D", "[", 
             RowBox[{"m", ",", " ", 
              RowBox[{"Mesh", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"l", ",", " ", "15"}], "]"}], ",", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"h", ",", " ", "15"}], "]"}]}], "}"}]}], ",", "  ", 
              
              RowBox[{"ColorFunction", "\[Rule]", "\"\<CMYKColors\>\""}], ",",
               " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "i"}], ",", 
              RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
              RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", " ", 
              RowBox[{"PlotRange", "->", "All"}], ",", " ", 
              RowBox[{"ImagePadding", "\[Rule]", "10"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<Energy: \>\"", ",", " ", "Italic", ",", "  ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", 
                    "\"\<Arial Hebrew Scholar\>\""}]}], "]"}], ",", " ", 
                  RowBox[{"Style", "[", 
                   RowBox[{"f", ",", " ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}], 
                "]"}]}], ",", " ", 
              RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t", "\"\<Sin\>\"", ",", "\t", 
        "\[IndentingNewLine]", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Boundary function: \>\"", ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                 RowBox[{
                 "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], 
                "]"}], ",", " ", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringJoin", "[", 
                  RowBox[{
                  "\"\<\!\(\*Cell[\"sin(\", \
\"InlineMath\",ExpressionUUID->\"4407f0a2-3420-4d41-a07c-94a006006741\"]\)\>\"\
", ",", " ", 
                   RowBox[{"ToString", "[", "a", "]"}], ",", " ", 
                   "\"\<\!\(\*Cell[\"x + \", \
\"InlineMath\",ExpressionUUID->\"21a667f4-f87e-469a-82d8-a9434d2c2d46\"]\)\>\"\
", ",", " ", 
                   RowBox[{"ToString", "[", "b", "]"}], ",", " ", 
                   
                   "\"\<\!\(\*Cell[\"y)\", \
\"InlineMath\",ExpressionUUID->\"b77a8960-e73f-4800-a57d-b0095201b5a5\"]\)\>\"\
"}], "]"}], ",", " ", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"ListPlot3D", "[", 
             RowBox[{"m", ",", " ", 
              RowBox[{"Mesh", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"l", ",", " ", "15"}], "]"}], ",", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"h", ",", " ", "15"}], "]"}]}], "}"}]}], ",", "  ", 
              
              RowBox[{"ColorFunction", "\[Rule]", "\"\<BrightBands\>\""}], 
              ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "i"}], ",", 
              RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
              RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", " ", 
              RowBox[{"PlotRange", "->", "All"}], ",", " ", 
              RowBox[{"ImagePadding", "\[Rule]", "10"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<Energy: \>\"", ",", " ", "Italic", ",", "  ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", 
                    "\"\<Arial Hebrew Scholar\>\""}]}], "]"}], ",", " ", 
                  RowBox[{"Style", "[", 
                   RowBox[{"f", ",", " ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}], 
                "]"}]}], ",", " ", 
              RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t", "\"\<Quadratic\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Boundary function: \>\"", ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                 RowBox[{
                 "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], 
                "]"}], ",", 
               RowBox[{"Style", "[", " ", 
                RowBox[{
                 RowBox[{"StringJoin", "[", " ", 
                  RowBox[{
                   RowBox[{"ToString", "[", "qa", "]"}], ",", " ", 
                   "\"\<\!\(\*Cell[TextData[{
Cell[BoxData[FormBox[
SuperscriptBox[\"x\", \"2\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"b4ded9c6-9772-4b8a-a915-d2d6523a8898\"],
\" + \"
}], \"InlineMath\",ExpressionUUID->\"8d766a52-d532-469c-a85b-5ee6f2afeda0\"]\)\
\>\"", ",", " ", 
                   RowBox[{"ToString", "[", "qb", "]"}], ",", " ", 
                   "\"\<\!\(\*Cell[TextData[{
Cell[BoxData[FormBox[
SuperscriptBox[\"y\", \"2\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"0386807b-7531-4f3e-8b20-93d77d2d178b\"],
\" + \"
}], \"InlineMath\",ExpressionUUID->\"36b3c864-5318-436f-aaf3-310380a8b25c\"]\)\
\>\"", ",", " ", 
                   RowBox[{"ToString", "[", "qc", "]"}]}], "]"}], ",", " ", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}], 
             "]"}], ",", 
            RowBox[{"ListPlot3D", "[", 
             RowBox[{"m", ",", " ", 
              RowBox[{"Mesh", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"l", ",", " ", "15"}], "]"}], ",", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"h", ",", " ", "15"}], "]"}]}], "}"}]}], ",", "  ", 
              
              RowBox[{
              "ColorFunction", "\[Rule]", "\"\<LightTemperatureMap\>\""}], 
              ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "i"}], ",", 
              RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
              RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", " ", 
              RowBox[{"PlotRange", "->", "All"}], ",", " ", 
              RowBox[{"ImagePadding", "\[Rule]", "10"}], ",", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<Energy: \>\"", ",", " ", "Italic", ",", "  ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", 
                    "\"\<Arial Hebrew Scholar\>\""}]}], "]"}], ",", " ", 
                  RowBox[{"Style", "[", 
                   RowBox[{"f", ",", "  ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}], 
                "]"}]}], ",", " ", 
              RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{" ", "\[IndentingNewLine]", 
                RowBox[{
                "this", " ", "function", " ", "is", " ", "used", " ", "to", 
                 " ", "plot", " ", "the", " ", "given", " ", "landscape", " ",
                  "and", " ", "also", " ", "display", " ", "the", " ", 
                 "flatness", " ", "of", " ", "the", " ", 
                 RowBox[{"landscape", ".", "This"}], " ", "case", " ", "we", 
                 " ", "need", " ", "to", " ", "plot", " ", "the", " ", 
                 "point", " ", "inside", " ", "the", " ", 
                 RowBox[{"ring", ".", "\[IndentingNewLine]", "\t", 
                  RowBox[{"Input", ":", "           ", "1"}]}]}], ")"}], " ", 
               "the", " ", "matirx", " ", "contains", " ", "the", " ", 
               "landscape", " ", "we", " ", "want", " ", "to", " ", 
               RowBox[{
               "plot", ".", "\[IndentingNewLine]", "\t\t\t\t\t   ", "2"}]}], 
              ")"}], " ", "the", " ", "value", " ", "of", " ", "flatness", 
             " ", "we", " ", "want", " ", "to", " ", "label", " ", "on", " ", 
             "the", " ", 
             RowBox[{
             "graph", ".", "\[IndentingNewLine]", "\t\t\t\t\t     ", "3"}]}], 
            ")"}], " ", "ringXIndex_:", " ", "the", " ", "x", " ", "index", 
           " ", "of", " ", "the", " ", "top", " ", "right", " ", "corner", 
           " ", "of", " ", "the", " ", "ring", "\[IndentingNewLine]", 
           "\t\t\t\t\t\t    ", "4"}], ")"}], " ", "ringYIndex_:", " ", "the", 
         " ", "y", " ", "index", " ", "of", " ", "the", " ", "top", " ", 
         "right", " ", "corner", " ", "of", " ", "the", " ", "ring", 
         "\[IndentingNewLine]", "\t\t\t\t\t\t\t  ", "5"}], ")"}], " ", 
       "ringXLength_:", " ", "the", " ", "width", " ", "of", " ", "the", " ", 
       
       RowBox[{
       "ring", ".", "\[IndentingNewLine]", "\t\t\t\t\t\t\t   ", "6"}]}], 
      ")"}], " ", "ringYLength_:", " ", "the", " ", "height", " ", "of", " ", 
     "the", " ", 
     RowBox[{"ring", ".", "\[IndentingNewLine]", "adjust"}], " ", "mesh", " ",
      "and", " ", 
     RowBox[{"scale", "."}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotGraphRing", "[", 
     RowBox[{
     "inMatrix_", ",", " ", "flatness_", ",", " ", "ringXIndex_", ",", " ", 
      "ringXLength_", ",", " ", "ringYIndex_", ",", " ", "ringYLength_", ",", 
      "graphType_", ",", " ", "randomVal_", ",", " ", "randomValRing_", ",", 
      " ", "a_", ",", " ", "b_", ",", " ", "ringA_", ",", " ", "ringB_", ",", 
      " ", "quaA_", ",", " ", "quaB_", ",", " ", "quaC_", ",", " ", 
      "quaRingA_", ",", " ", "quaRingB_", ",", " ", "quaRingC_", ",", " ", 
      "imageSize_"}], "]"}], ":=", " ", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", " ", "=", " ", "inMatrix"}], ",", 
        RowBox[{"l", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"f", " ", "=", " ", "flatness"}], ",", " ", 
        RowBox[{"rX", " ", "=", " ", "ringXIndex"}], ",", " ", 
        RowBox[{"rXL", " ", "=", " ", "ringXLength"}], ",", " ", 
        RowBox[{"rY", " ", "=", " ", "ringYIndex"}], ",", " ", 
        RowBox[{"rYL", " ", "=", " ", "ringYLength"}], ",", 
        RowBox[{"g", "=", "graphType"}], ",", ",", " ", 
        RowBox[{"r", " ", "=", " ", "randomVal"}], ",", " ", 
        RowBox[{"rr", " ", "=", " ", "randomValRing"}], ",", " ", 
        RowBox[{"ra", "=", " ", "ringA"}], ",", " ", 
        RowBox[{"rb", " ", "=", " ", "ringB"}], ",", " ", 
        RowBox[{"qa", " ", "=", " ", "quaA"}], ",", " ", 
        RowBox[{"qb", " ", "=", " ", "quaB"}], ",", " ", 
        RowBox[{"qc", " ", "=", " ", "quaC"}], ",", " ", 
        RowBox[{"qra", " ", "=", " ", "quaRingA"}], ",", " ", 
        RowBox[{"qrb", " ", "=", " ", "quaRingB"}], ",", " ", 
        RowBox[{"qrc", " ", "=", " ", "quaRingC"}], ",", " ", 
        RowBox[{"i", " ", "=", " ", "imageSize"}]}], "}"}], ",", " ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
       "g", ",", "\[IndentingNewLine]", "\t\t", "\"\<Random\>\"", ",", "\t", 
        "\[IndentingNewLine]", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "Style", "[", "\"\<Outer boundary Function: \>\"", "]"}], ",", 
               " ", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\>\"", ",", 
                 RowBox[{"FontSize", "\[Rule]", "qw"}], ",", " ", 
                 RowBox[{
                 "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], 
                "]"}]}], "}"}], "]"}], ",", 
            RowBox[{"ListPlot3D", "[", 
             RowBox[{"m", ",", " ", 
              RowBox[{"ColorFunction", "\[Rule]", "\"\<CMYKColors\>\""}], ",", 
              RowBox[{"Mesh", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"l", ",", " ", "15"}], "]"}], ",", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"h", ",", " ", "15"}], "]"}]}], "}"}]}], ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", " ", 
              RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", " ", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "i"}], ",", 
              RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
              RowBox[{"ImagePadding", "\[Rule]", "10"}], ",", " ", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<Energy: \>\"", ",", " ", "Italic", ",", "  ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", 
                    "\"\<Arial Hebrew Scholar\>\""}]}], "]"}], ",", " ", 
                  RowBox[{"Style", "[", 
                   RowBox[{"f", ",", "  ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}], 
                "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
              RowBox[{"RegionFunction", "\[Rule]", 
               RowBox[{"Function", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"y", ",", " ", "x"}], "}"}], ",", " ", 
                 "\[IndentingNewLine]", "\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "<=", "x", "\[LessEqual]", "rX"}], " ", "&&",
                     " ", 
                    RowBox[{"1", "<=", "y", " ", "\[LessEqual]", "l"}]}], " ",
                    ")"}], "  ", 
                  RowBox[{"(*", 
                   RowBox[{"ring", " ", "above"}], "*)"}], 
                  "\[IndentingNewLine]", "\t\t\t\t\t", "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"rX", " ", "+", " ", "rXL"}], "<=", "x", " ", 
                    "\[LessEqual]", " ", "h"}], " ", "&&", " ", 
                    RowBox[{"1", "<=", "y", " ", "\[LessEqual]", "l"}]}], " ",
                    ")"}], "  ", 
                  RowBox[{"(*", 
                   RowBox[{"ring", " ", "below"}], "*)"}], 
                  "\[IndentingNewLine]", "\t\t\t\t\t", "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"rX", "<=", "x", "\[LessEqual]", 
                    RowBox[{"rX", " ", "+", " ", "rXL"}]}], " ", "&&", " ", 
                    RowBox[{"1", "<=", "y", " ", "\[LessEqual]", 
                    RowBox[{"rYL", " ", "-", " ", "1"}]}]}], " ", ")"}], "  ", 
                  RowBox[{"(*", 
                   RowBox[{"ring", " ", "left"}], "*)"}], 
                  "\[IndentingNewLine]", "\t\t\t\t\t", "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"rX", "<=", "x", "\[LessEqual]", 
                    RowBox[{"rX", " ", "+", " ", "rXL"}]}], "  ", "&&", " ", 
                    RowBox[{
                    RowBox[{"rY", " ", "+", " ", "rYL"}], "<=", "y", " ", 
                    "\[LessEqual]", "l"}]}], " ", ")"}]}]}], "  ", 
                RowBox[{"(*", 
                 RowBox[{"ring", " ", "right"}], "*)"}], "]"}]}], ",", 
              RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t", "\"\<Sin\>\"", ",", "\t", 
        "\[IndentingNewLine]", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<The outer boundary is sin(\[Alpha]x+\[Beta]y) \\nThe inner \
boundary is sin(\[Alpha]x-\[Beta]y)\>\"", ",", " ", 
              RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
              RowBox[{
              "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], 
             "]"}], ",", 
            RowBox[{"ListPlot3D", "[", 
             RowBox[{"m", ",", " ", 
              RowBox[{"ColorFunction", "\[Rule]", "\"\<BrightBands\>\""}], 
              ",", 
              RowBox[{"Mesh", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"l", ",", " ", "15"}], "]"}], ",", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"h", ",", " ", "15"}], "]"}]}], "}"}]}], ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", " ", 
              RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", " ", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "i"}], ",", 
              RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
              RowBox[{"ImagePadding", "\[Rule]", "10"}], ",", " ", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<Energy: \>\"", ",", " ", "Italic", ",", "  ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", 
                    "\"\<Arial Hebrew Scholar\>\""}]}], "]"}], ",", " ", 
                  RowBox[{"Style", "[", 
                   RowBox[{"f", ",", "  ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}], 
                "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
              RowBox[{"RegionFunction", "\[Rule]", 
               RowBox[{"Function", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"y", ",", " ", "x"}], "}"}], ",", " ", 
                 "\[IndentingNewLine]", "\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "<=", "x", "\[LessEqual]", "rX"}], " ", "&&",
                     " ", 
                    RowBox[{"1", "<=", "y", " ", "\[LessEqual]", "l"}]}], " ",
                    ")"}], "  ", 
                  RowBox[{"(*", 
                   RowBox[{"ring", " ", "above"}], "*)"}], 
                  "\[IndentingNewLine]", "\t\t\t\t\t", "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"rX", " ", "+", " ", "rXL"}], "<=", "x", " ", 
                    "\[LessEqual]", " ", "h"}], " ", "&&", " ", 
                    RowBox[{"1", "<=", "y", " ", "\[LessEqual]", "l"}]}], " ",
                    ")"}], "  ", 
                  RowBox[{"(*", 
                   RowBox[{"ring", " ", "below"}], "*)"}], 
                  "\[IndentingNewLine]", "\t\t\t\t\t", "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"rX", "<=", "x", "\[LessEqual]", 
                    RowBox[{"rX", " ", "+", " ", "rXL"}]}], " ", "&&", " ", 
                    RowBox[{"1", "<=", "y", " ", "\[LessEqual]", 
                    RowBox[{"rYL", " ", "-", " ", "1"}]}]}], " ", ")"}], "  ", 
                  RowBox[{"(*", 
                   RowBox[{"ring", " ", "left"}], "*)"}], 
                  "\[IndentingNewLine]", "\t\t\t\t\t", "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"rX", "<=", "x", "\[LessEqual]", 
                    RowBox[{"rX", " ", "+", " ", "rXL"}]}], "  ", "&&", " ", 
                    RowBox[{
                    RowBox[{"rY", " ", "+", " ", "rYL"}], "<=", "y", " ", 
                    "\[LessEqual]", "l"}]}], " ", ")"}]}]}], "  ", 
                RowBox[{"(*", 
                 RowBox[{"ring", " ", "right"}], "*)"}], "]"}]}], ",", 
              RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t", "\"\<Quadratic\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Column", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<The outer boundary is \!\(\*SuperscriptBox[\(\[Alpha]x\), \
\(2\)]\)+\!\(\*SuperscriptBox[\(\[Beta]y\), \(2\)]\)+c \\nThe inner boundary \
is a \!\(\*SuperscriptBox[\(\[Alpha]x\), \
\(2\)]\)-\!\(\*SuperscriptBox[\(by\), \(2\)]\)+c\>\"", ",", " ", 
              RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
              RowBox[{
              "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], 
             "]"}], ",", 
            RowBox[{"ListPlot3D", "[", 
             RowBox[{"m", ",", " ", 
              RowBox[{
              "ColorFunction", "\[Rule]", "\"\<LightTemperatureMap\>\""}], 
              ",", 
              RowBox[{"Mesh", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"l", ",", " ", "15"}], "]"}], ",", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{"h", ",", " ", "15"}], "]"}]}], "}"}]}], ",", " ", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"Opacity", "[", "0.5", "]"}]}], ",", " ", 
              RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", " ", 
              RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "i"}], ",", 
              RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
              RowBox[{"ImagePadding", "\[Rule]", "10"}], ",", " ", 
              RowBox[{"PlotLabel", "\[Rule]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<Energy: \>\"", ",", " ", "Italic", ",", "  ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                    RowBox[{
                    "FontFamily", "\[Rule]", 
                    "\"\<Arial Hebrew Scholar\>\""}]}], "]"}], ",", " ", 
                  RowBox[{"Style", "[", 
                   RowBox[{"f", ",", "  ", 
                    RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}]}], "}"}], 
                "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t\t", 
              RowBox[{"RegionFunction", "\[Rule]", 
               RowBox[{"Function", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"y", ",", " ", "x"}], "}"}], ",", " ", 
                 "\[IndentingNewLine]", "\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "<=", "x", "\[LessEqual]", "rX"}], " ", "&&",
                     " ", 
                    RowBox[{"1", "<=", "y", " ", "\[LessEqual]", "l"}]}], " ",
                    ")"}], "  ", 
                  RowBox[{"(*", 
                   RowBox[{"ring", " ", "above"}], "*)"}], 
                  "\[IndentingNewLine]", "\t\t\t\t\t", "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"rX", " ", "+", " ", "rXL"}], "<=", "x", " ", 
                    "\[LessEqual]", " ", "h"}], " ", "&&", " ", 
                    RowBox[{"1", "<=", "y", " ", "\[LessEqual]", "l"}]}], " ",
                    ")"}], "  ", 
                  RowBox[{"(*", 
                   RowBox[{"ring", " ", "below"}], "*)"}], 
                  "\[IndentingNewLine]", "\t\t\t\t\t", "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"rX", "<=", "x", "\[LessEqual]", 
                    RowBox[{"rX", " ", "+", " ", "rXL"}]}], " ", "&&", " ", 
                    RowBox[{"1", "<=", "y", " ", "\[LessEqual]", 
                    RowBox[{"rYL", " ", "-", " ", "1"}]}]}], " ", ")"}], "  ", 
                  RowBox[{"(*", 
                   RowBox[{"ring", " ", "left"}], "*)"}], 
                  "\[IndentingNewLine]", "\t\t\t\t\t", "||", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"rX", "<=", "x", "\[LessEqual]", 
                    RowBox[{"rX", " ", "+", " ", "rXL"}]}], "  ", "&&", " ", 
                    RowBox[{
                    RowBox[{"rY", " ", "+", " ", "rYL"}], "<=", "y", " ", 
                    "\[LessEqual]", "l"}]}], " ", ")"}]}]}], "  ", 
                RowBox[{"(*", 
                 RowBox[{"ring", " ", "right"}], "*)"}], "]"}]}], ",", 
              RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], 
             "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"\[IndentingNewLine]", 
                    RowBox[{
                    "This", " ", "function", " ", "is", " ", "to", " ", 
                    "initialize", " ", "the", " ", "boundary", " ", "values", 
                    " ", "of", " ", "the", " ", "given", " ", "matrix", " ", 
                    "to", " ", "generate", " ", "desire", " ", "initial", " ", 
                    RowBox[{
                    "landscape", ".", "\[IndentingNewLine]", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Input", ":", "           ", "1"}]}]}], ")"}], 
                   " ", "inMatrix_:", " ", "a", " ", "zero", " ", "matrix", 
                   "\[IndentingNewLine]", "\t\t\t\t\t", "2"}], ")"}], " ", 
                 "randomVal_:", " ", "the", " ", "cap", " ", "of", " ", "the",
                  " ", "RandomReal", " ", "for", " ", "the", " ", "outter", 
                 " ", "boundary", " ", "values", "\[IndentingNewLine]", 
                 "\t\t\t\t\t  ", "3"}], ")"}], " ", 
               RowBox[{"ringRandomVal", ":", " ", 
                RowBox[{
                "the", " ", "cap", " ", "of", " ", "the", " ", "RandomReal", 
                 " ", "for", " ", "the", " ", "inner", " ", "boundary", " ", 
                 "\[IndentingNewLine]", "values", "\[IndentingNewLine]", 
                 "\t\t\t\t\t  ", "4"}]}]}], ")"}], " ", "isRing_:", " ", 
             "whether", " ", "there", " ", "is", " ", "a", " ", "ring", " ", 
             "in", " ", "the", " ", 
             RowBox[{
             "landscape", ".", "\[IndentingNewLine]", "\t\t\t\t\t\t ", 
              "5"}]}], ")"}], " ", "ringXIndex_:", " ", "the", " ", "x", " ", 
           "index", " ", "of", " ", "the", " ", "top", " ", "right", " ", 
           "corner", " ", "of", " ", "the", " ", "ring", 
           "\[IndentingNewLine]", "\t\t\t\t\t\t    ", "6"}], ")"}], " ", 
         "ringYIndex_:", " ", "the", " ", "y", " ", "index", " ", "of", " ", 
         "the", " ", "top", " ", "right", " ", "corner", " ", "of", " ", 
         "the", " ", "ring", "\[IndentingNewLine]", "\t\t\t\t\t\t\t  ", "7"}],
         ")"}], " ", "ringXLength_:", " ", "the", " ", "width", " ", "of", 
       " ", "the", " ", 
       RowBox[{
       "ring", ".", "\[IndentingNewLine]", "\t\t\t\t\t\t\t   ", "8"}]}], 
      ")"}], " ", "ringYLength_:", " ", "the", " ", "height", " ", "of", " ", 
     "the", " ", 
     RowBox[{"ring", "."}]}], "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t ", 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randomInitilization", "[", 
     RowBox[{
     "inMatrix_", ",", "randomVal_", ",", " ", "ringRandomVal_", ",", 
      "isRing_", ",", " ", "ringXIndex_", ",", " ", "ringYIndex_", ",", 
      "ringXLength_", ",", "ringYLength_"}], "]"}], " ", ":=", " ", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", " ", "=", " ", "inMatrix"}], ",", " ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"l", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
        RowBox[{"r", " ", "=", " ", "isRing"}], ",", " ", 
        RowBox[{"rx", " ", "=", " ", "ringXIndex"}], ",", " ", 
        RowBox[{"ry", "=", " ", "ringYIndex"}], ",", " ", 
        RowBox[{"rxl", " ", "=", " ", "ringXLength"}], ",", " ", 
        RowBox[{"ryl", " ", "=", " ", "ringYLength"}], ",", 
        RowBox[{"rv", "=", "randomVal"}], ",", " ", 
        RowBox[{"rrv", " ", "=", " ", "ringRandomVal"}]}], "}"}], ",", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"rx", " ", "+", " ", "rxl"}], " ", "\[GreaterEqual]", " ", 
          "h"}], ",", " ", 
         RowBox[{"ringXLength", " ", "=", " ", 
          RowBox[{"h", " ", "-", " ", "1", " ", "-", " ", "rx"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ringYIndex", " ", "+", " ", "ringYLength"}], " ", 
          "\[GreaterEqual]", " ", "l"}], ",", " ", 
         RowBox[{"ringYLength", " ", "=", " ", 
          RowBox[{"l", " ", "-", " ", "1", " ", "-", " ", "ry"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{"isRing", ",", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"x", " ", "\[Equal]", " ", "h"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "l"}]}], ",", " ", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "=", " ", 
               RowBox[{"RandomReal", "[", "rv", "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"y", ",", " ", "1", ",", " ", "l"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "1", ",", " ", "h"}], "}"}]}], "]"}], ";",
           "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "\[Equal]", " ", "rx"}], " ", "||", " ", 
               RowBox[{"x", " ", "\[Equal]", " ", 
                RowBox[{"rx", " ", "+", " ", "rxl"}]}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "ry"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", 
                RowBox[{"ry", " ", "+", " ", "ryl"}]}]}], ",", " ", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "=", " ", 
               RowBox[{"RandomReal", "[", "rrv", "]"}]}]}], "]"}], ",", " ", 
            "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "rx", ",", " ", 
              RowBox[{"rx", " ", "+", " ", "rxl"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"y", ",", " ", "ry", ",", " ", 
              RowBox[{"ry", " ", "+", " ", "ryl"}]}], "}"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", "\t\t\t\t", ",", " ", "\[IndentingNewLine]", 
         "\t\t\t", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"x", " ", "\[Equal]", " ", "h"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "l"}]}], ",", " ", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "=", " ", 
               RowBox[{"RandomReal", "[", "rv", "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"y", ",", " ", "1", ",", " ", "l"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "1", ",", " ", "h"}], "}"}]}], "]"}], 
          ";"}]}], "]"}], ";", "\[IndentingNewLine]", "m"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\[IndentingNewLine]", "\t\t", 
      RowBox[{"Since", " ", "I", " ", 
       RowBox[{"don", "'"}], "t", " ", "assign", " ", "any", " ", "value", 
       " ", "to", " ", "the", " ", "four", " ", "corner", " ", "at", " ", 
       "the", " ", 
       RowBox[{"matrix", ".", " ", "I"}], " ", "given", " ", "them", " ", 
       "value", " ", "by", " ", "assign", " ", "the", " ", "mean", " ", 
       "value", " ", "of", " ", "sourrounding", " ", 
       RowBox[{"point", ".", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Input", ":", " ", "1"}]}]}], ")"}], " ", "inMatrix"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initializeCorner", "[", 
     RowBox[{"inMatrix_", ",", " ", "currentState_"}], "]"}], " ", ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", " ", "=", " ", 
         RowBox[{"N", "[", "inMatrix", "]"}]}], ",", " ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", 
           RowBox[{"inMatrix", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"l", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", 
           RowBox[{"inMatrix", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
        RowBox[{"c", " ", "=", " ", "currentState"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"matrixList", "[", 
         RowBox[{"[", 
          RowBox[{"c", ",", "1", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"matrixList", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", " ", "1", ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"matrixList", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", " ", "2", ",", "1"}], "]"}], "]"}]}], ")"}], 
         " ", "/", " ", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrixList", "[", 
         RowBox[{"[", 
          RowBox[{"c", ",", " ", "1", ",", "l"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"matrixList", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", " ", "1", ",", 
              RowBox[{"l", " ", "-", " ", "1"}]}], "]"}], "]"}], "+", 
           RowBox[{"matrixList", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", " ", "2", ",", "l"}], "]"}], "]"}]}], ")"}], 
         " ", "/", " ", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrixList", "[", 
         RowBox[{"[", 
          RowBox[{"c", ",", " ", "h", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"matrixList", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", " ", 
              RowBox[{"h", " ", "-", " ", "1"}], ",", "1"}], "]"}], "]"}], 
           "+", 
           RowBox[{"matrixList", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", " ", "h", ",", "2"}], "]"}], "]"}]}], ")"}], 
         " ", "/", " ", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"matrixList", "[", 
         RowBox[{"[", 
          RowBox[{"c", ",", " ", "h", ",", "l"}], "]"}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"matrixList", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", " ", 
              RowBox[{"h", " ", "-", " ", "1"}], ",", " ", "l"}], "]"}], 
            "]"}], "+", 
           RowBox[{"matrixList", "[", 
            RowBox[{"[", 
             RowBox[{"c", ",", " ", "h", ",", 
              RowBox[{"l", " ", "-", " ", "1"}]}], "]"}], "]"}]}], ")"}], " ",
          "/", " ", "2"}]}], ";", "\[IndentingNewLine]", "m"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    "This", " ", "function", " ", "is", " ", "to", " ", 
                    "initialize", " ", "the", " ", "boundary", " ", "values", 
                    " ", "of", " ", "the", " ", "given", " ", "matrix", " ", 
                    "to", " ", "generate", " ", "desire", " ", "initial", " ", 
                    RowBox[{"landscape", ".", " ", "The"}], " ", "boundary", 
                    " ", "type", " ", "is", " ", "a", " ", "Sin", 
                    RowBox[{"(", 
                    RowBox[{"ax", " ", "+", " ", "bx"}], ")"}]}], ":", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "Input", 
                    ":", "           ", "1"}], ")"}], " ", "inMatrix_:", " ", 
                    "a", " ", "zero", " ", "matrix", "\[IndentingNewLine]", 
                    "\t\t\t\t   ", "2"}], ")"}], " ", "isRing_:", " ", 
                    "whether", " ", "there", " ", "is", " ", "a", " ", "ring",
                     " ", "in", " ", "the", " ", 
                    RowBox[{
                    "landscape", ".", "\[IndentingNewLine]", "\t\t\t\t\t", 
                    "3"}]}], ")"}], " ", "ringXIndex_:", " ", "the", " ", "x",
                    " ", "index", " ", "of", " ", "the", " ", "top", " ", 
                   "right", " ", "corner", " ", "of", " ", "the", " ", "ring",
                    "\[IndentingNewLine]", "\t\t\t\t\t   ", "4"}], ")"}], " ",
                  "ringYIndex_:", " ", "the", " ", "y", " ", "index", " ", 
                 "of", " ", "the", " ", "top", " ", "right", " ", "corner", 
                 " ", "of", " ", "the", " ", "ring", "\[IndentingNewLine]", 
                 "\t\t\t\t\t     ", "5"}], ")"}], " ", "ringXLength_:", " ", 
               "the", " ", "width", " ", "of", " ", "the", " ", 
               RowBox[{
               "ring", ".", "\[IndentingNewLine]", "\t\t\t\t\t\t  ", "6"}]}], 
              ")"}], " ", "ringYLength_:", " ", "the", " ", "height", " ", 
             "of", " ", "the", " ", 
             RowBox[{
             "ring", ".", "\[IndentingNewLine]", "\t\t\t\t\t\t\t", "7"}]}], 
            ")"}], " ", "inA_:", " ", "the", " ", "coefficient", " ", "a", 
           " ", "of", " ", "the", " ", "outter", " ", "boundary", 
           "\[IndentingNewLine]", "\t\t\t\t\t\t\t   ", "8"}], ")"}], " ", 
         "inB_:", " ", "the", " ", "coefficient", " ", "b", " ", "of", " ", 
         "the", " ", "outter", " ", "boundary", "\[IndentingNewLine]", 
         "\t\t\t\t\t\t\t     ", "9"}], ")"}], " ", "ringA_:", " ", "the", " ",
        "coefficient", " ", "a", " ", "of", " ", "the", " ", "inner", " ", 
       "boundary", "\[IndentingNewLine]", "\t\t\t\t\t\t\t       ", "10"}], 
      ")"}], " ", "ringA_:", " ", "the", " ", "coefficient", " ", "a", " ", 
     "of", " ", "the", " ", "inner", " ", "boundary"}], "\[IndentingNewLine]",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sinInitialization", "[", 
     RowBox[{
     "inMatrix_", ",", "isRing_", ",", " ", "ringXIndex_", ",", " ", 
      "ringYIndex_", ",", " ", "ringXLength_", ",", " ", "ringYLength_", ",", 
      " ", "inA_", ",", " ", "inB_", ",", " ", "ringA_", ",", "ringB_"}], 
     "]"}], " ", ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", " ", "=", " ", "inMatrix"}], ",", " ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"l", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
        RowBox[{"r", " ", "=", " ", "isRing"}], ",", " ", 
        RowBox[{"rx", " ", "=", " ", "ringXIndex"}], ",", " ", 
        RowBox[{"ry", "=", " ", "ringYIndex"}], ",", " ", 
        RowBox[{"rxl", " ", "=", " ", "ringXLength"}], ",", " ", 
        RowBox[{"ryl", " ", "=", " ", "ringYLength"}], ",", " ", 
        RowBox[{"a", "=", " ", "inA"}], ",", 
        RowBox[{"b", "=", " ", "inB"}], ",", " ", 
        RowBox[{"ra", " ", "=", " ", "ringA"}], ",", " ", 
        RowBox[{"rb", " ", "=", " ", "ringB"}]}], "}"}], ",", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"m", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "1", " ", ",", " ", "h"}], "}"}], ",", " ", 
          
          RowBox[{"{", 
           RowBox[{"y", ",", " ", "1", ",", " ", "l"}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"rx", " ", "+", " ", "rxl"}], " ", "\[GreaterEqual]", " ", 
          "h"}], ",", " ", 
         RowBox[{"ringXLength", " ", "=", " ", 
          RowBox[{"h", " ", "-", " ", "1", " ", "-", " ", "rx"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ringYIndex", " ", "+", " ", "ringYLength"}], " ", 
          "\[GreaterEqual]", " ", "l"}], ",", " ", 
         RowBox[{"ringYLength", " ", "=", " ", 
          RowBox[{"l", " ", "-", " ", "1", " ", "-", " ", "ry"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{"isRing", ",", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"x", " ", "\[Equal]", " ", "h"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "l"}]}], ",", " ", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "=", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"a", "*", "x"}], " ", "+", " ", 
                 RowBox[{"b", "*", "y"}]}], "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"y", ",", " ", "1", ",", " ", "l"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "1", ",", " ", "h"}], "}"}]}], "]"}], ";",
           "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "\[Equal]", " ", "rx"}], " ", "||", " ", 
               RowBox[{"x", " ", "\[Equal]", " ", 
                RowBox[{"rx", " ", "+", " ", "rxl"}]}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "ry"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", 
                RowBox[{"ry", " ", "+", " ", "ryl"}]}]}], ",", " ", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "=", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"ra", "*", "x"}], " ", "-", " ", 
                 RowBox[{"rb", "*", "y"}]}], "]"}]}]}], "]"}], ",", " ", 
            "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "rx", ",", " ", 
              RowBox[{"rx", " ", "+", " ", "rxl"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"y", ",", " ", "ry", ",", " ", 
              RowBox[{"ry", " ", "+", " ", "ryl"}]}], "}"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", "\t\t\t\t", ",", " ", "\[IndentingNewLine]", 
         "\t\t\t", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"x", " ", "\[Equal]", " ", "h"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "l"}]}], ",", " ", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "=", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"a", "*", "x"}], "+", 
                 RowBox[{"b", "*", "y"}]}], "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"y", ",", " ", "1", ",", " ", "l"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "1", ",", " ", "h"}], "}"}]}], "]"}], 
          ";"}]}], "]"}], ";", "\[IndentingNewLine]", "m"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"quadraticInitialization", "[", 
     RowBox[{
     "inMatrix_", ",", " ", "isRing_", ",", " ", "ringXIndex_", ",", " ", 
      "ringYIndex_", ",", " ", "ringXLength_", ",", " ", "ringYLength_", ",", 
      "inA_", ",", " ", "inB_", ",", " ", "inC_", ",", " ", "ringA_", ",", 
      " ", "ringB_", " ", ",", "ringC_"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"m", " ", "=", " ", 
         RowBox[{"N", "[", "inMatrix", "]"}]}], ",", " ", 
        RowBox[{"h", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
        RowBox[{"l", " ", "=", " ", 
         RowBox[{
          RowBox[{"Dimensions", "[", "inMatrix", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
        RowBox[{"r", " ", "=", " ", "isRing"}], ",", " ", 
        RowBox[{"rx", " ", "=", " ", "ringXIndex"}], ",", " ", 
        RowBox[{"ry", "=", " ", "ringYIndex"}], ",", " ", 
        RowBox[{"rxl", " ", "=", " ", "ringXLength"}], ",", " ", 
        RowBox[{"ryl", " ", "=", " ", "ringYLength"}], ",", " ", 
        RowBox[{"a", "=", " ", "inA"}], ",", 
        RowBox[{"b", "=", " ", "inB"}], ",", 
        RowBox[{"c", "=", "inC"}], ",", " ", 
        RowBox[{"ra", " ", "=", " ", "ringA"}], ",", " ", 
        RowBox[{"rb", " ", "=", " ", "ringB"}], ",", 
        RowBox[{"rc", "=", "ringC"}]}], "}"}], ",", "\[IndentingNewLine]", 
      "\t\t", 
      RowBox[{
       RowBox[{"m", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", " ", "1", " ", ",", " ", "h"}], "}"}], ",", " ", 
          
          RowBox[{"{", 
           RowBox[{"y", ",", " ", "1", ",", " ", "l"}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"rx", " ", "+", " ", "rxl"}], " ", "\[GreaterEqual]", " ", 
          "h"}], ",", " ", 
         RowBox[{"ringXLength", " ", "=", " ", 
          RowBox[{"h", " ", "-", " ", "1", " ", "-", " ", "rx"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ringYIndex", " ", "+", " ", "ringYLength"}], " ", 
          "\[GreaterEqual]", " ", "l"}], ",", " ", 
         RowBox[{"ringYLength", " ", "=", " ", 
          RowBox[{"l", " ", "-", " ", "1", " ", "-", " ", "ry"}]}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{"isRing", ",", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"x", " ", "\[Equal]", " ", "h"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "l"}]}], ",", " ", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "=", " ", 
               RowBox[{"N", "[", 
                RowBox[{
                 RowBox[{"a", "*", 
                  RowBox[{"(", 
                   RowBox[{"x", "^", "2"}], ")"}]}], "  ", "+", 
                 RowBox[{"b", "*", 
                  RowBox[{"(", 
                   RowBox[{"y", "^", "2"}], ")"}]}], " ", "+", 
                 RowBox[{"rc", " ", "*", " ", "x", " ", "*", " ", "y"}]}], 
                "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"y", ",", " ", "1", ",", " ", "l"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "1", ",", " ", "h"}], "}"}]}], "]"}], ";",
           "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "\[Equal]", " ", "rx"}], " ", "||", " ", 
               RowBox[{"x", " ", "\[Equal]", " ", 
                RowBox[{"rx", " ", "+", " ", "rxl"}]}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "ry"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", 
                RowBox[{"ry", " ", "+", " ", "ryl"}]}]}], ",", " ", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "=", 
               RowBox[{
                RowBox[{"ra", "*", 
                 RowBox[{"(", 
                  RowBox[{"x", "^", "2"}], ")"}]}], "  ", "+", 
                RowBox[{"rb", "*", 
                 RowBox[{"(", 
                  RowBox[{"y", "^", "2"}], ")"}]}], " ", "+", 
                RowBox[{"rc", " ", "*", " ", "x", " ", "*", " ", "y"}]}]}]}], 
             "]"}], ",", " ", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "rx", ",", " ", 
              RowBox[{"rx", " ", "+", " ", "rxl"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"y", ",", " ", "ry", ",", " ", 
              RowBox[{"ry", " ", "+", " ", "ryl"}]}], "}"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", "\t\t\t\t", ",", " ", "\[IndentingNewLine]", 
         "\t\t\t", 
         RowBox[{
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"x", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"x", " ", "\[Equal]", " ", "h"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{"y", " ", "\[Equal]", " ", "l"}]}], ",", " ", 
              RowBox[{
               RowBox[{"m", "[", 
                RowBox[{"[", 
                 RowBox[{"x", ",", " ", "y"}], "]"}], "]"}], " ", "=", " ", 
               RowBox[{"N", "[", 
                RowBox[{
                 RowBox[{"a", "*", 
                  RowBox[{"(", 
                   RowBox[{"x", "^", "2"}], ")"}]}], "  ", "+", 
                 RowBox[{"b", "*", 
                  RowBox[{"(", 
                   RowBox[{"y", "^", "2"}], ")"}]}], " ", "+", 
                 RowBox[{"rc", " ", "*", " ", "x", " ", "*", " ", "y"}]}], 
                "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"y", ",", " ", "1", ",", " ", "l"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "1", ",", " ", "h"}], "}"}]}], "]"}], 
          ";"}]}], "]"}], ";", "\[IndentingNewLine]", "m"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7506338825964947`*^9, 3.750633884960099*^9}, {
   3.751154907694188*^9, 3.751154976103137*^9}, {3.7511550145165586`*^9, 
   3.751155035822996*^9}, {3.7511551860691967`*^9, 3.7511552927132397`*^9}, {
   3.751155615900795*^9, 3.751155740993032*^9}, {3.7511557732900867`*^9, 
   3.751155776011492*^9}, {3.7511558857902184`*^9, 3.7511559079597683`*^9}, {
   3.751155938009004*^9, 3.751155992790742*^9}, {3.751156087400652*^9, 
   3.751156149610374*^9}, {3.7511568364275923`*^9, 3.7511568923665*^9}, 
   3.751156962598558*^9, {3.751157001089929*^9, 3.7511570458242693`*^9}, {
   3.7511571558364477`*^9, 3.751157160262438*^9}, {3.751157286062937*^9, 
   3.751157394811554*^9}, {3.75115744276346*^9, 3.751157486678383*^9}, {
   3.751158496120199*^9, 3.7511585503032093`*^9}, {3.751237457605473*^9, 
   3.7512374804915857`*^9}, 3.751237515947299*^9, {3.751238015492722*^9, 
   3.751238071491692*^9}, {3.7512382596576433`*^9, 3.751238443016385*^9}, {
   3.751238583950871*^9, 3.7512385929237547`*^9}, {3.751238626997658*^9, 
   3.751238634636318*^9}, {3.751238687663957*^9, 3.751238696015531*^9}, {
   3.7512387333372107`*^9, 3.7512387338385553`*^9}, {3.7512387784736567`*^9, 
   3.751238852171747*^9}, {3.751238963379915*^9, 3.751239330679985*^9}, {
   3.751239392327263*^9, 3.751239392872003*^9}, {3.751239500572328*^9, 
   3.7512395759983997`*^9}, {3.7512396083614473`*^9, 
   3.7512396097395372`*^9}, {3.751239652570877*^9, 3.751239896903726*^9}, {
   3.751239947678877*^9, 3.7512400826049356`*^9}, {3.751672090150201*^9, 
   3.751672102044441*^9}, {3.751672154349586*^9, 3.7516722836744823`*^9}, {
   3.752020088862547*^9, 3.752020171101832*^9}, {3.7521115659691668`*^9, 
   3.752111621870721*^9}, {3.7521118249082403`*^9, 3.7521118669849854`*^9}, {
   3.752112067167841*^9, 3.7521120768291893`*^9}, {3.752112118965028*^9, 
   3.752112137147881*^9}, {3.752112167226471*^9, 3.752112171381016*^9}, {
   3.752115641858698*^9, 3.752115671066218*^9}, {3.7521159517552013`*^9, 
   3.752116041933094*^9}},
 CellLabel->"In[1]:=",
 CellID->1948118278,ExpressionUUID->"763c3394-1fa3-4b6b-8359-6c0fc0a986b9"]
}, Closed]],

Cell[CellGroupData[{

Cell["", "ManipulateSection",ExpressionUUID->"e6336013-1021-4057-9849-deca4ccb430d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{"matrix", "  ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "1", " ", ",", " ", "matrixHeight"}], "}"}], 
       ",", " ", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "1", ",", " ", "matrixLength"}], "}"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"Switch", "[", 
     RowBox[{
     "graphType", " ", ",", "\[IndentingNewLine]", "\t\t", "\"\<Random\>\"", 
      ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"matrix", " ", "=", " ", 
       RowBox[{"randomInitilization", "[", 
        RowBox[{
        "matrix", ",", "randomVal", ",", "randomValRing", " ", ",", "isRing", 
         ",", " ", "ringXIndex", ",", "ringYIndex", ",", " ", "ringXLength", 
         ",", " ", "ringYLength"}], "]"}]}], ",", "\[IndentingNewLine]", 
      "\t\t", "\"\<Sin\>\"", ",", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"matrix", " ", "=", " ", 
       RowBox[{"sinInitialization", "[", 
        RowBox[{
        "matrix", ",", " ", "isRing", ",", " ", "ringXIndex", ",", " ", 
         "ringYIndex", ",", " ", "ringXLength", ",", "ringYLength", ",", " ", 
         "a", ",", " ", "b", ",", " ", "ringA", ",", " ", "ringB"}], "]"}]}], 
      ",", "\[IndentingNewLine]", "\t\t", "\"\<Quadratic\>\"", ",", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"matrix", " ", "=", " ", 
       RowBox[{"quadraticInitialization", "[", 
        RowBox[{
        "matrix", ",", "isRing", ",", " ", "ringXIndex", ",", "ringYIndex", 
         ",", "ringXLength", ",", "ringYLength", ",", " ", "quadraA", ",", 
         " ", "quadraB", ",", " ", "quadraC", ",", "quaRingA", ",", 
         "quaRingB", ",", "quaRingC"}], " ", "]"}]}]}], "\[IndentingNewLine]",
      "\t", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"isRing", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"matrixList", " ", "=", " ", 
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"relaxationProcessRing", "[", 
            RowBox[{
            "#", ",", " ", "ringXIndex", ",", " ", "ringYIndex", ",", " ", 
             "ringXLength", ",", " ", "ringYLength"}], " ", "]"}], "&"}], ",",
           " ", "matrix", ",", " ", "20"}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", " ", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"matrixList", " ", "=", " ", 
        RowBox[{"NestList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"relaxationProcess", "[", "#", "]"}], "&"}], ",", " ", 
          "matrix", ",", "20"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
     "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"matrixList", " ", "=", " ", 
     RowBox[{"initializeCorner", "[", 
      RowBox[{"matrixList", ",", " ", "currentState"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"flatness", " ", "=", " ", 
     RowBox[{"flatnessProcess", "[", 
      RowBox[{"matrixList", "[", 
       RowBox[{"[", "currentState", "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{"isRing", ",", "\[IndentingNewLine]", 
      RowBox[{"plotGraphRing", "[", 
       RowBox[{
        RowBox[{"matrixList", "[", 
         RowBox[{"[", "currentState", "]"}], "]"}], ",", " ", "flatness", ",",
         " ", "ringXIndex", ",", " ", "ringXLength", ",", " ", "ringYIndex", 
        ",", " ", "ringYLength", ",", " ", "graphType", ",", "randomVal", ",",
         " ", "randomValRing", ",", " ", "a", ",", " ", "b", ",", " ", 
        "ringA", ",", " ", "ringB", ",", " ", "quadraA", ",", " ", "quadraB", 
        ",", " ", "quadraC", ",", " ", "quaRingA", ",", " ", "quaRingB", ",", 
        " ", "quaRingC", ",", "  ", "imageSize"}], "]"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{"plotGraph", "[", 
       RowBox[{
        RowBox[{"matrixList", "[", 
         RowBox[{"[", "currentState", "]"}], "]"}], ",", " ", "flatness", ",",
         "graphType", ",", " ", "randomVal", ",", " ", "a", ",", " ", "b", 
        ",", " ", "quadraA", ",", " ", "quadraB", ",", " ", "quadraC", ",", 
        " ", "imageSize"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "==="}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "==="}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"===", "===", "===", "==="}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Equal]", "\[Equal]", "==", 
        RowBox[{
        "code", " ", "below", " ", "is", " ", "to", " ", "beautify", " ", 
         "the", " ", "graph"}]}], "===", "===", "===", "===", "===", "===", 
       "==="}], "="}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "==="}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "==="}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"PaneSelector", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Random\>\"", "\[Rule]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<random case\>\"", ",", " ", 
                   RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], "]"}], ",",
                 " ", 
                RowBox[{"seed", " ", "=", " ", 
                 RowBox[{"seed", " ", "+", " ", "1"}]}]}], "]"}], ",", 
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Smaller\>\"", ",", " ", "6"}], "]"}], ",", " ", 
                
                RowBox[{"imageSize", "=", 
                 RowBox[{"Ceiling", "[", 
                  RowBox[{"0.75", " ", "imageSize"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Normal\>\"", ",", " ", "8"}], "]"}], ",", " ", 
                RowBox[{"imageSize", "=", 
                 RowBox[{"Ceiling", "[", "320", "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Larger\>\"", ",", "12"}], "]"}], ",", " ", 
                RowBox[{"imageSize", "=", 
                 RowBox[{"Ceiling", "[", 
                  RowBox[{"1.25", " ", "imageSize"}], "]"}]}]}], "]"}]}], 
             "}"}], "]"}], ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"graphType", ",", " ", "\"\<Random\>\"", ",", "  ", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<boundary function\>\"", ",", 
                  RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}],
                  " ", "]"}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Random\>\"", ",", " ", "\"\<Sin\>\"", ",", " ", 
                "\"\<Quadratic\>\""}], "}"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
           ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<outer boundary function Range\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", "   ", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "randomVal", ",", " ", "25", ",", " ", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"x\", \"0\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"49f64243-d933-42ea-96d5-a45ccdf8b210\"]], \
\"InlineMath\",ExpressionUUID->\"05a8c925-d89d-4976-b4f3-6644ffe1c453\"]\)\>\"\
"}], "}"}], " ", ",", " ", "1", ",", " ", "50", ",", " ", "1", ",", " ", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inner boundary range\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", "   ", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "randomValRing", ",", " ", "50", ",", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"x\", \"1\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"58c37d41-fd21-479a-b71a-570d2611a4c4\"]], \
\"InlineMath\",ExpressionUUID->\"22836492-b775-4528-bb0f-8aa73d673f29\"]\)\>\"\
"}], "}"}], ",", "1", ",", " ", "50", ",", " ", "1", ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\"\<\>\"", ",", "\[IndentingNewLine]", " ", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<number of iteration\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "currentState", ",", " ", "2", ",", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"i\", \
TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"b77da3af-b1f6-4a15-8848-129e7d40e82d\"]], \
\"InlineMath\",ExpressionUUID->\"5ba98343-1536-44e6-ad7d-0a4ebbde04c5\"]\)\>\"\
"}], "}"}], ",", "1", ",", "20", ",", " ", "1", ",", " ", 
              RowBox[{"AnimationRate", "\[Rule]", "2"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"isRing", ",", "False", ",", "  ", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<declare a inner boundary \>\"", ",", 
                  RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}],
                  " ", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"False", ",", "True"}], "}"}]}], " ", "}"}]}], ",", 
           "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<matrix dimension\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Control", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"matrixHeight", ",", "13", ",", "\"\<height\>\""}], 
                  "}"}], ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"8", ",", "50"}], "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
              ",", 
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "matrixLength", ",", " ", "13", ",", " ", 
                   "\"\<length\>\""}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"6", ",", "50"}], "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}]}],
              "}"}], "]"}], ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inner matrix start index: \>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", "40", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringXIndex", ",", " ", "5", ",", 
                   "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"x\", \
TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"8c4b3911-9997-40fb-8a07-5bb7c5f413f5\"]], \
\"InlineMath\",ExpressionUUID->\"4763f04b-6187-47b4-889a-15e1d3d80f58\"]\)\>\"\
"}], "}"}], ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"matrixHeight", " ", "-", " ", "1"}]}], "]"}], ",",
                  " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
              ",", 
              RowBox[{"Spacer", "[", "45", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringYIndex", ",", " ", "5", ",", " ", 
                   "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"y\", \
TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"f69efdb6-712d-48fe-b8c1-fcc8c1134176\"]], \
\"InlineMath\",ExpressionUUID->\"8893b917-6929-4a64-b408-605b1af9fbd0\"]\)\>\"\
"}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"matrixLength", " ", "-", " ", "1"}]}], "]"}], ",", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}]}],
              "}"}], "]"}], ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inner matirx dimension\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringXLength", ",", " ", "6", " ", ",", " ", 
                   "\"\<height\>\""}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{
                   "matrixHeight", " ", "-", " ", "1", "-", " ", 
                    "ringXIndex"}]}], " ", "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
              ",", 
              RowBox[{"Spacer", "[", "25", "]"}], ",", "\[IndentingNewLine]", 
              
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringYLength", ",", " ", "6", " ", ",", " ", 
                   "\"\<length\>\""}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", " ", 
                   RowBox[{
                   "matrixLength", " ", "-", " ", "1", "-", " ", 
                    "ringYIndex"}]}], "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}]}],
              "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"\"\<Sin\>\"", "\[Rule]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Smaller\>\"", ",", " ", "6"}], "]"}], ",", " ", 
                
                RowBox[{"imageSize", "=", 
                 RowBox[{"Ceiling", "[", 
                  RowBox[{"0.75", " ", "imageSize"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Normal\>\"", ",", " ", "8"}], "]"}], ",", " ", 
                RowBox[{"imageSize", "=", 
                 RowBox[{"Ceiling", "[", "320", "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Larger\>\"", ",", "12"}], "]"}], ",", " ", 
                RowBox[{"imageSize", "=", 
                 RowBox[{"Ceiling", "[", 
                  RowBox[{"1.25", " ", "imageSize"}], "]"}]}]}], "]"}]}], 
             "}"}], "]"}], ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"graphType", ",", " ", "\"\<Random\>\"", ",", "  ", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<boundary function\>\"", ",", 
                  RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}],
                  " ", "]"}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Random\>\"", ",", " ", "\"\<Sin\>\"", ",", " ", 
                "\"\<Quadratic\>\""}], "}"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
           ",", "\"\<\>\"", ",", "\[IndentingNewLine]", "  ", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<outer boundary coefficent\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "a", ",", " ", ".3", ",", " ", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"a\", \"0\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"216fc544-3aca-412d-b063-7069e8edfffb\"]], \
\"InlineMath\",ExpressionUUID->\"616d48aa-7f32-4053-be3a-ee0cbf26b365\"]\)\>\"\
"}], "}"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "4", ",", " ", "0.1"}], "]"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "b", ",", " ", ".4", ",", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"b\", \"0\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"c562076f-7520-410c-9c75-8ef5e23ed418\"]], \
\"InlineMath\",ExpressionUUID->\"38a197c2-be6b-490f-8f1d-103575f116ae\"]\)\>\"\
"}], "}"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "4", ",", " ", "0.1"}], "]"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\"\<\>\"", ",", "\[IndentingNewLine]", "  ", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inner boundary coefficent\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "ringA", ",", " ", ".2", ",", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"a\", \"1\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"94445d37-b3ea-4027-835f-9cf501354182\"]], \
\"InlineMath\",ExpressionUUID->\"05301c3b-72a7-412d-bf6a-4dedff2bce66\"]\)\>\"\
"}], " ", "}"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "4", ",", " ", "0.1"}], "]"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "ringB", ",", " ", ".4", ",", " ", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"b\", \"1\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"0add8f91-2aa6-4e26-902a-48459084f1bc\"]], \
\"InlineMath\",ExpressionUUID->\"68bd2aff-9814-4eb8-b8ae-1ec588a56d72\"]\)\>\"\
"}], "}"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "4", ",", " ", "0.1"}], "]"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\"\<\>\"", ",", "\[IndentingNewLine]", " ", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<number of iteration\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "currentState", ",", " ", "2", ",", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"i\", \
TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"4ecb08b1-4d44-4bd3-81c9-fe63c9662415\"]], \
\"InlineMath\",ExpressionUUID->\"abba55a8-e457-4531-8747-caf6dcbf30b9\"]\)\>\"\
"}], "}"}], ",", "1", ",", "20", ",", " ", "1", ",", " ", 
              RowBox[{"AnimationRate", "\[Rule]", "2"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"isRing", ",", "False", ",", "  ", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<declare a inner boundary \>\"", ",", 
                  RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}],
                  " ", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"False", ",", "True"}], "}"}]}], " ", "}"}]}], ",", 
           "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<matrix dimension\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Control", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"matrixHeight", ",", "13", ",", "\"\<height\>\""}], 
                  "}"}], ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"8", ",", "50"}], "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
              ",", 
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "matrixLength", ",", " ", "13", ",", " ", 
                   "\"\<length\>\""}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"6", ",", "50"}], "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}]}],
              "}"}], "]"}], ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inner matrix start index: \>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", "40", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringXIndex", ",", " ", "5", ",", 
                   "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"x\", \
TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"fa55a7cc-34e0-4b95-8543-997f439523b0\"]], \
\"InlineMath\",ExpressionUUID->\"1330cb90-0309-48a1-9897-20d7c78837e7\"]\)\>\"\
"}], "}"}], ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"matrixHeight", " ", "-", " ", "1"}]}], "]"}], ",",
                  " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
              ",", 
              RowBox[{"Spacer", "[", "45", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringYIndex", ",", " ", "5", ",", " ", 
                   "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"y\", \
TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"2a45b2a8-0238-4984-b94f-0684b879740e\"]], \
\"InlineMath\",ExpressionUUID->\"802eaeb9-7345-42fb-8472-27b544a1c45b\"]\)\>\"\
"}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"matrixLength", " ", "-", " ", "1"}]}], "]"}], ",", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}]}],
              "}"}], "]"}], ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inner matirx dimension\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringXLength", ",", " ", "6", " ", ",", " ", 
                   "\"\<height\>\""}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{
                   "matrixHeight", " ", "-", " ", "1", "-", " ", 
                    "ringXIndex"}]}], " ", "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
              ",", 
              RowBox[{"Spacer", "[", "25", "]"}], ",", "\[IndentingNewLine]", 
              
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringYLength", ",", " ", "6", " ", ",", " ", 
                   "\"\<length\>\""}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", " ", 
                   RowBox[{
                   "matrixLength", " ", "-", " ", "1", "-", " ", 
                    "ringYIndex"}]}], "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}]}],
              "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Quadratic\>\"", "\[Rule]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Smaller\>\"", ",", " ", "6"}], "]"}], ",", " ", 
                
                RowBox[{"imageSize", "=", 
                 RowBox[{"Ceiling", "[", 
                  RowBox[{"0.75", " ", "imageSize"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Normal\>\"", ",", " ", "8"}], "]"}], ",", " ", 
                RowBox[{"imageSize", "=", 
                 RowBox[{"Ceiling", "[", "320", "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Larger\>\"", ",", "12"}], "]"}], ",", " ", 
                RowBox[{"imageSize", "=", 
                 RowBox[{"Ceiling", "[", 
                  RowBox[{"1.25", " ", "imageSize"}], "]"}]}]}], "]"}]}], 
             "}"}], "]"}], ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"graphType", ",", " ", "\"\<Random\>\"", ",", "  ", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<boundary function\>\"", ",", 
                  RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}],
                  " ", "]"}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Random\>\"", ",", " ", "\"\<Sin\>\"", ",", " ", 
                "\"\<Quadratic\>\""}], "}"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
           ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<outer boundary coefficent\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "quadraA", ",", " ", "4", ",", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"a\", \"0\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"fee22596-00a5-4526-8811-f88c07f4b213\"]], \
\"InlineMath\",ExpressionUUID->\"5de2c029-30bd-4ba9-81f2-71d73e08c881\"]\)\>\"\
"}], "}"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "4", ",", " ", "0.1"}], "]"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "quadraB", ",", " ", "0", ",", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"b\", \"0\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"a1932ff3-0df7-4fdf-a853-b5c0a0bb89f0\"]], \
\"InlineMath\",ExpressionUUID->\"946811e9-a73a-48f5-80fe-8d9b2c3f5675\"]\)\>\"\
"}], "}"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "4", ",", " ", "0.1"}], "]"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "quadraC", ",", " ", ".4", ",", " ", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"c\", \"0\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"d9f362d8-46e2-4035-8da8-b079722936b6\"]], \
\"InlineMath\",ExpressionUUID->\"6127cf13-3f2a-4eda-8971-29bec989f804\"]\)\>\"\
"}], "}"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "4", ",", " ", "0.1"}], "]"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inner boundary coefficent\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "quaRingA", ",", " ", ".2", ",", " ", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"a\", \"1\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"2dbf7e5a-0f53-45b9-9cb8-209a0099fd3b\"]], \
\"InlineMath\",ExpressionUUID->\"e83e108b-03ac-4a34-a73f-caaf1fa0cddc\"]\)\>\"\
"}], "}"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "4", ",", " ", "0.1"}], "]"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "quaRingB", ",", " ", ".4", ",", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"b\", \"1\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"56ce1d8f-1bd5-46d4-8b69-578db3d640aa\"]], \
\"InlineMath\",ExpressionUUID->\"fe29c3c4-fd2f-455a-a98c-03d219610c83\"]\)\>\"\
"}], "}"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "4", ",", " ", "0.1"}], "]"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "quaRingC", ",", " ", ".4", ",", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[
SubscriptBox[\"c\", \"1\"], TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"4e8984d2-48c1-4c2d-8445-79254a58230d\"]], \
\"InlineMath\",ExpressionUUID->\"27848fdf-6dd7-4f9e-b99a-b33808a755fa\"]\)\>\"\
"}], "}"}], ",", " ", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", " ", "4", ",", " ", "0.1"}], "]"}], ",", " ", 
              RowBox[{"ControlType", "\[Rule]", "Slider"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\[IndentingNewLine]", " ", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<number of iteration\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "currentState", ",", " ", "2", ",", 
                "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"i\", \
TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"1360d0f4-b590-43b1-92e9-01d0dc7dbad8\"]], \
\"InlineMath\",ExpressionUUID->\"9f94b4a6-5df6-4482-b37d-ff94b0bfe292\"]\)\>\"\
"}], "}"}], ",", "1", ",", "20", ",", " ", "1", ",", " ", 
              RowBox[{"AnimationRate", "\[Rule]", "2"}], ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"isRing", ",", "False", ",", "  ", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<declare a inner boundary \>\"", ",", 
                  RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
                  RowBox[{
                  "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}],
                  " ", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"False", ",", "True"}], "}"}]}], " ", "}"}]}], ",", 
           "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<matrix dimension\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Control", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"matrixHeight", ",", "13", ",", "\"\<height\>\""}], 
                  "}"}], ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"8", ",", "50"}], "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
              ",", 
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "matrixLength", ",", " ", "13", ",", " ", 
                   "\"\<length\>\""}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"6", ",", "50"}], "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}]}],
              "}"}], "]"}], ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inner matrix start index: \>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", "40", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringXIndex", ",", " ", "5", ",", 
                   "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"x\", \
TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"92fe791f-9588-4530-b26f-a26a08b8fe40\"]], \
\"InlineMath\",ExpressionUUID->\"e807337d-1a80-42e1-a9b8-90778386adc6\"]\)\>\"\
"}], "}"}], ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"matrixHeight", " ", "-", " ", "1"}]}], "]"}], ",",
                  " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
              ",", 
              RowBox[{"Spacer", "[", "45", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringYIndex", ",", " ", "5", ",", " ", 
                   "\"\<\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"y\", \
TraditionalForm]], \
\"InlineMath\",ExpressionUUID->\"7eb987d3-e571-4f51-a6e3-06f1e8ea3862\"]], \
\"InlineMath\",ExpressionUUID->\"eca799c0-5830-4a90-93f6-fd9ef58cbb50\"]\)\>\"\
"}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"matrixLength", " ", "-", " ", "1"}]}], "]"}], ",", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}]}],
              "}"}], "]"}], ",", "\"\<\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<inner matirx dimension\>\"", ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}], ",", " ", 
             RowBox[{
             "FontFamily", "\[Rule]", "\"\<Arial Hebrew Scholar\>\""}]}], " ",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", "20", "]"}], ",", 
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringXLength", ",", " ", "6", " ", ",", " ", 
                   "\"\<height\>\""}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{
                   "matrixHeight", " ", "-", " ", "1", "-", " ", 
                    "ringXIndex"}]}], " ", "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}], 
              ",", 
              RowBox[{"Spacer", "[", "25", "]"}], ",", "\[IndentingNewLine]", 
              
              RowBox[{"Control", "@", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "ringYLength", ",", " ", "6", " ", ",", " ", 
                   "\"\<length\>\""}], "}"}], ",", " ", 
                 RowBox[{"Range", "[", 
                  RowBox[{"0", ",", " ", 
                   RowBox[{
                   "matrixLength", " ", "-", " ", "1", "-", " ", 
                    "ringYIndex"}]}], "]"}], ",", " ", 
                 RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}]}]}],
              "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Dynamic", "@", "graphType"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"seed", ",", "1"}], "}"}], ",", "1", ",", "100", ",", "1", ",", 
     " ", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"graphType", ",", " ", "\"\<Random\>\""}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Random\>\"", ",", " ", "\"\<Sin\>\"", ",", " ", 
       "\"\<Quadratic\>\""}], "}"}], ",", " ", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"imageSize", ",", " ", 
       RowBox[{"{", 
        RowBox[{"400", ",", " ", "400"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"300", ",", " ", "300"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"600", ",", " ", "600"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"800", ",", " ", "800"}], "}"}], ",", " ", 
     RowBox[{"ControlType", "->", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"TrackedSymbols", ":>", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.750633906150549*^9, {3.751153905256456*^9, 3.7511539092680607`*^9}, {
   3.751154038536756*^9, 3.7511540570006857`*^9}, 3.751154251587453*^9, {
   3.751154373046702*^9, 3.7511543741105757`*^9}, {3.751154834820388*^9, 
   3.7511548855642567`*^9}, {3.751157524413216*^9, 3.75115755194223*^9}, {
   3.751157632188493*^9, 3.751157686845476*^9}, {3.751157723753446*^9, 
   3.751157804038539*^9}, {3.7511578399288187`*^9, 3.751158049078842*^9}, {
   3.7511580844718637`*^9, 3.75115843002185*^9}, {3.751238466869626*^9, 
   3.751238470289781*^9}, {3.751238871233032*^9, 3.7512389192915697`*^9}, {
   3.751672390190452*^9, 3.7516724103265963`*^9}, {3.7516724609602423`*^9, 
   3.7516725879387503`*^9}, {3.7516727157805967`*^9, 
   3.7516727704147367`*^9}, {3.751672837450676*^9, 3.751673041702215*^9}, {
   3.75167307179832*^9, 3.751673095167862*^9}, {3.7516740147300987`*^9, 
   3.751674070669385*^9}, {3.751813585902712*^9, 3.7518136584611177`*^9}, {
   3.751813705078969*^9, 3.751813717445374*^9}, {3.751813885594142*^9, 
   3.7518139454819107`*^9}, {3.751814028327731*^9, 3.751814040783123*^9}, {
   3.751814107125709*^9, 3.75181418464186*^9}, {3.7518142188062687`*^9, 
   3.751814315666761*^9}, {3.7518143687111177`*^9, 3.7518144065862503`*^9}, {
   3.751814458499802*^9, 3.7518144904070883`*^9}, {3.751814526695298*^9, 
   3.751814527588284*^9}, {3.751814673346451*^9, 3.7518146761875963`*^9}, {
   3.752020042965444*^9, 3.7520200755684347`*^9}, {3.752020182394473*^9, 
   3.7520201892248163`*^9}, {3.752020227736998*^9, 3.752020232937867*^9}, {
   3.752020287761299*^9, 3.752020301200761*^9}, {3.752111252899193*^9, 
   3.752111343716702*^9}, {3.752111385078026*^9, 3.752111406209882*^9}, {
   3.75211145637289*^9, 3.752111546132419*^9}, {3.7521116547467327`*^9, 
   3.752111657670817*^9}, {3.7521116978697987`*^9, 3.752111701590929*^9}, 
   3.7521118912402143`*^9, {3.752111975074575*^9, 3.752112044193481*^9}, {
   3.752112084260771*^9, 3.752112095290963*^9}, {3.75211242057647*^9, 
   3.75211244981544*^9}, {3.7521124909415417`*^9, 3.7521124934673843`*^9}, {
   3.7521125702215853`*^9, 3.752112719954369*^9}, {3.752112982935532*^9, 
   3.752113030800497*^9}, {3.752113063181862*^9, 3.752113072123373*^9}, {
   3.752113176729414*^9, 3.752113227432589*^9}, {3.7521132835415487`*^9, 
   3.752113466601623*^9}, {3.7521135014646397`*^9, 3.752113591216064*^9}, {
   3.752113651532772*^9, 3.75211366550318*^9}, {3.752113752712163*^9, 
   3.752113831530726*^9}, {3.75211393706726*^9, 3.752113960161992*^9}, {
   3.752113992760663*^9, 3.752114067097879*^9}, {3.7521141067877483`*^9, 
   3.7521143272169857`*^9}, {3.752114357547278*^9, 3.7521147160954514`*^9}, {
   3.752114800653509*^9, 3.752114846492443*^9}, {3.752114896547914*^9, 
   3.75211493032906*^9}, {3.7521149648811913`*^9, 3.752114967491372*^9}, {
   3.7521149990521803`*^9, 3.7521152655591917`*^9}, {3.7521153089186172`*^9, 
   3.752115381202259*^9}, {3.7521154306092052`*^9, 3.752115615692874*^9}, {
   3.752115693628408*^9, 3.752115720575034*^9}, {3.752115773059692*^9, 
   3.752115865393805*^9}, 3.752115937094495*^9, {3.7521725398055964`*^9, 
   3.7521726023331537`*^9}, {3.75217265863724*^9, 3.75217273658223*^9}, {
   3.752172776392355*^9, 3.752172790680374*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"87e8e0d7-1c9d-4616-8085-9b97e2ea08b2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.3, $CellContext`b$$ = 
    0.4, $CellContext`currentState$$ = 2, $CellContext`graphType$$ = 
    "Random", $CellContext`imageSize$$ = {400, 400}, $CellContext`isRing$$ = 
    False, $CellContext`matrixHeight$$ = 13, $CellContext`matrixLength$$ = 
    13, $CellContext`quadraA$$ = 4, $CellContext`quadraB$$ = 
    0, $CellContext`quadraC$$ = 0.4, $CellContext`quaRingA$$ = 
    0.2, $CellContext`quaRingB$$ = 0.4, $CellContext`quaRingC$$ = 
    0.4, $CellContext`randomVal$$ = 25, $CellContext`randomValRing$$ = 
    50, $CellContext`ringA$$ = 0.2, $CellContext`ringB$$ = 
    0.4, $CellContext`ringXIndex$$ = 5, $CellContext`ringXLength$$ = 
    6, $CellContext`ringYIndex$$ = 5, $CellContext`ringYLength$$ = 
    6, $CellContext`seed$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`graphType$$], "Random", 
       Style[
       "boundary function", FontSize -> 12, FontFamily -> 
        "Arial Hebrew Scholar"]}, {"Random", "Sin", "Quadratic"}}, {{
       Hold[$CellContext`randomVal$$], 25, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"x\", \
\"0\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, 1, 50, 1}, {{
       Hold[$CellContext`randomValRing$$], 50, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"x\", \
\"1\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, 1, 50, 1}, {{
       Hold[$CellContext`currentState$$], 2, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"i\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 1, 20, 1}, {{
       Hold[$CellContext`isRing$$], False, 
       Style[
       "declare a inner boundary ", FontSize -> 12, FontFamily -> 
        "Arial Hebrew Scholar"]}, {False, True}}, {{
       Hold[$CellContext`matrixHeight$$], 13, "height"}, {8, 9, 10, 11, 12, 
      13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
      49, 50}}, {{
       Hold[$CellContext`matrixLength$$], 13, "length"}, {6, 7, 8, 9, 10, 11, 
      12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
      30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
      48, 49, 50}}, {{
       Hold[$CellContext`ringXIndex$$], 5, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"x\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
      Dynamic[
       Range[2, $CellContext`matrixHeight$$ - 1]]}, {{
       Hold[$CellContext`ringYIndex$$], 5, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"y\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
      Dynamic[
       Range[2, $CellContext`matrixLength$$ - 1]]}, {{
       Hold[$CellContext`ringXLength$$], 6, "height"}, 
      Dynamic[
       Range[
       0, $CellContext`matrixHeight$$ - 1 - $CellContext`ringXIndex$$]]}, {{
       Hold[$CellContext`ringYLength$$], 6, "length"}, 
      Dynamic[
       Range[
       0, $CellContext`matrixLength$$ - 1 - $CellContext`ringYIndex$$]]}, {{
       Hold[$CellContext`graphType$$], "Random", 
       Style[
       "boundary function", FontSize -> 12, FontFamily -> 
        "Arial Hebrew Scholar"]}, {"Random", "Sin", "Quadratic"}}, {{
       Hold[$CellContext`a$$], 0.3, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"a\", \
\"0\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, \
CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
      "]}, {{
       Hold[$CellContext`b$$], 0.4, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"b\", \
\"0\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, \
CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
      "]}, {{
       Hold[$CellContext`ringA$$], 0.2, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"a\", \
\"1\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, \
CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
      "]}, {{
       Hold[$CellContext`ringB$$], 0.4, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"b\", \
\"1\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, \
CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
      "]}, {{
       Hold[$CellContext`currentState$$], 2, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"i\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 1, 20, 1}, {{
       Hold[$CellContext`isRing$$], False, 
       Style[
       "declare a inner boundary ", FontSize -> 12, FontFamily -> 
        "Arial Hebrew Scholar"]}, {False, True}}, {{
       Hold[$CellContext`matrixHeight$$], 13, "height"}, {8, 9, 10, 11, 12, 
      13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
      49, 50}}, {{
       Hold[$CellContext`matrixLength$$], 13, "length"}, {6, 7, 8, 9, 10, 11, 
      12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
      30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
      48, 49, 50}}, {{
       Hold[$CellContext`ringXIndex$$], 5, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"x\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
      Dynamic[
       Range[2, $CellContext`matrixHeight$$ - 1]]}, {{
       Hold[$CellContext`ringYIndex$$], 5, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"y\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
      Dynamic[
       Range[2, $CellContext`matrixLength$$ - 1]]}, {{
       Hold[$CellContext`ringXLength$$], 6, "height"}, 
      Dynamic[
       Range[
       0, $CellContext`matrixHeight$$ - 1 - $CellContext`ringXIndex$$]]}, {{
       Hold[$CellContext`ringYLength$$], 6, "length"}, 
      Dynamic[
       Range[
       0, $CellContext`matrixLength$$ - 1 - $CellContext`ringYIndex$$]]}, {{
       Hold[$CellContext`graphType$$], "Random", 
       Style[
       "boundary function", FontSize -> 12, FontFamily -> 
        "Arial Hebrew Scholar"]}, {"Random", "Sin", "Quadratic"}}, {{
       Hold[$CellContext`quadraA$$], 4, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"a\", \
\"0\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, \
CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
      "]}, {{
       Hold[$CellContext`quadraB$$], 0, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"b\", \
\"0\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, \
CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
      "]}, {{
       Hold[$CellContext`quadraC$$], 0.4, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"c\", \
\"0\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, \
CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
      "]}, {{
       Hold[$CellContext`quaRingA$$], 0.2, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"a\", \
\"1\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, \
CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
      "]}, {{
       Hold[$CellContext`quaRingB$$], 0.4, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"b\", \
\"1\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, \
CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
      "]}, {{
       Hold[$CellContext`quaRingC$$], 0.4, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"c\", \
\"1\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, \
CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
      "]}, {{
       Hold[$CellContext`currentState$$], 2, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"i\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 1, 20, 1}, {{
       Hold[$CellContext`isRing$$], False, 
       Style[
       "declare a inner boundary ", FontSize -> 12, FontFamily -> 
        "Arial Hebrew Scholar"]}, {False, True}}, {{
       Hold[$CellContext`matrixHeight$$], 13, "height"}, {8, 9, 10, 11, 12, 
      13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
      31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 
      49, 50}}, {{
       Hold[$CellContext`matrixLength$$], 13, "length"}, {6, 7, 8, 9, 10, 11, 
      12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
      30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
      48, 49, 50}}, {{
       Hold[$CellContext`ringXIndex$$], 5, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"x\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
      Dynamic[
       Range[2, $CellContext`matrixHeight$$ - 1]]}, {{
       Hold[$CellContext`ringYIndex$$], 5, 
       "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"y\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
      Dynamic[
       Range[2, $CellContext`matrixLength$$ - 1]]}, {{
       Hold[$CellContext`ringXLength$$], 6, "height"}, 
      Dynamic[
       Range[
       0, $CellContext`matrixHeight$$ - 1 - $CellContext`ringXIndex$$]]}, {{
       Hold[$CellContext`ringYLength$$], 6, "length"}, 
      Dynamic[
       Range[
       0, $CellContext`matrixLength$$ - 1 - $CellContext`ringYIndex$$]]}, {
      Hold[
       PaneSelector[{"Random" -> Column[{
            Row[{
              Button[
               Text[
                Style[
                "random case", FontSize -> 
                 12]], $CellContext`seed$$ = $CellContext`seed$$ + 1], 
              Button[
               Style["Smaller", 6], $CellContext`imageSize$$ = 
               Ceiling[0.75 $CellContext`imageSize$$]], 
              Button[
               Style["Normal", 8], $CellContext`imageSize$$ = Ceiling[320]], 
              Button[
               Style["Larger", 12], $CellContext`imageSize$$ = 
               Ceiling[1.25 $CellContext`imageSize$$]]}], "", 
            Manipulate`Place[1], "", 
            Style[
            "outer boundary function Range", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Manipulate`Place[2], "", 
            Style[
            "inner boundary range", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Manipulate`Place[3], "", 
            Style[
            "number of iteration", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Manipulate`Place[4], "", 
            Manipulate`Place[5], "", 
            Style[
            "matrix dimension", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Row[{
              Spacer[20], 
              Manipulate`Place[6], 
              Spacer[20], 
              Manipulate`Place[7]}], "", 
            Style[
            "inner matrix start index: ", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Row[{
              Spacer[40], 
              Manipulate`Place[8], 
              Spacer[45], 
              Manipulate`Place[9]}], "", 
            Style[
            "inner matirx dimension", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Row[{
              Spacer[20], 
              Manipulate`Place[10], 
              Spacer[25], 
              Manipulate`Place[11]}]}], "Sin" -> Column[{
            Row[{
              Button[
               Style["Smaller", 6], $CellContext`imageSize$$ = 
               Ceiling[0.75 $CellContext`imageSize$$]], 
              Button[
               Style["Normal", 8], $CellContext`imageSize$$ = Ceiling[320]], 
              Button[
               Style["Larger", 12], $CellContext`imageSize$$ = 
               Ceiling[1.25 $CellContext`imageSize$$]]}], "", 
            Manipulate`Place[12], "", 
            Style[
            "outer boundary coefficent", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Manipulate`Place[13], 
            Manipulate`Place[14], "", 
            Style[
            "inner boundary coefficent", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Manipulate`Place[15], 
            Manipulate`Place[16], "", 
            Style[
            "number of iteration", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Manipulate`Place[17], "", 
            Manipulate`Place[18], "", 
            Style[
            "matrix dimension", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Row[{
              Spacer[20], 
              Manipulate`Place[19], 
              Spacer[20], 
              Manipulate`Place[20]}], "", 
            Style[
            "inner matrix start index: ", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Row[{
              Spacer[40], 
              Manipulate`Place[21], 
              Spacer[45], 
              Manipulate`Place[22]}], "", 
            Style[
            "inner matirx dimension", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Row[{
              Spacer[20], 
              Manipulate`Place[23], 
              Spacer[25], 
              Manipulate`Place[24]}]}], "Quadratic" -> Column[{
            Row[{
              Button[
               Style["Smaller", 6], $CellContext`imageSize$$ = 
               Ceiling[0.75 $CellContext`imageSize$$]], 
              Button[
               Style["Normal", 8], $CellContext`imageSize$$ = Ceiling[320]], 
              Button[
               Style["Larger", 12], $CellContext`imageSize$$ = 
               Ceiling[1.25 $CellContext`imageSize$$]]}], "", 
            Manipulate`Place[25], "", 
            Style[
            "outer boundary coefficent", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Manipulate`Place[26], 
            Manipulate`Place[27], 
            Manipulate`Place[28], "", 
            Style[
            "inner boundary coefficent", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Manipulate`Place[29], 
            Manipulate`Place[30], 
            Manipulate`Place[31], 
            Style[
            "number of iteration", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Manipulate`Place[32], "", 
            Manipulate`Place[33], "", 
            Style[
            "matrix dimension", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Row[{
              Spacer[20], 
              Manipulate`Place[34], 
              Spacer[20], 
              Manipulate`Place[35]}], "", 
            Style[
            "inner matrix start index: ", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Row[{
              Spacer[40], 
              Manipulate`Place[36], 
              Spacer[45], 
              Manipulate`Place[37]}], "", 
            Style[
            "inner matirx dimension", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            Row[{
              Spacer[20], 
              Manipulate`Place[38], 
              Spacer[25], 
              Manipulate`Place[39]}]}]}, 
        Dynamic[$CellContext`graphType$$]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`seed$$], 1}, 1, 100, 1}, {{
       Hold[$CellContext`graphType$$], "Random"}, {
      "Random", "Sin", "Quadratic"}}, {{
       Hold[$CellContext`imageSize$$], {400, 400}}, {300, 300}, {600, 600}, {
      800, 800}}}, Typeset`size$$ = {
    600., {308.53173828125, 316.46826171875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`graphType$7021$$ = 0, $CellContext`randomVal$7022$$ = 
    0, $CellContext`randomValRing$7023$$ = 
    0, $CellContext`currentState$7024$$ = 0, $CellContext`isRing$7025$$ = 
    False, $CellContext`matrixHeight$7026$$ = 
    0, $CellContext`matrixLength$7027$$ = 0, $CellContext`a$7028$$ = 
    0, $CellContext`b$7029$$ = 0, $CellContext`imageSize$7030$$ = {0, 0}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.3, $CellContext`b$$ = 
        0.4, $CellContext`currentState$$ = 2, $CellContext`graphType$$ = 
        "Random", $CellContext`imageSize$$ = {400, 
         400}, $CellContext`isRing$$ = False, $CellContext`matrixHeight$$ = 
        13, $CellContext`matrixLength$$ = 13, $CellContext`quadraA$$ = 
        4, $CellContext`quadraB$$ = 0, $CellContext`quadraC$$ = 
        0.4, $CellContext`quaRingA$$ = 0.2, $CellContext`quaRingB$$ = 
        0.4, $CellContext`quaRingC$$ = 0.4, $CellContext`randomVal$$ = 
        25, $CellContext`randomValRing$$ = 50, $CellContext`ringA$$ = 
        0.2, $CellContext`ringB$$ = 0.4, $CellContext`ringXIndex$$ = 
        5, $CellContext`ringXLength$$ = 6, $CellContext`ringYIndex$$ = 
        5, $CellContext`ringYLength$$ = 6, $CellContext`seed$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`graphType$$, $CellContext`graphType$7021$$, 0], 
        Hold[$CellContext`randomVal$$, $CellContext`randomVal$7022$$, 0], 
        Hold[$CellContext`randomValRing$$, $CellContext`randomValRing$7023$$, 
         0], 
        Hold[$CellContext`currentState$$, $CellContext`currentState$7024$$, 
         0], 
        Hold[$CellContext`isRing$$, $CellContext`isRing$7025$$, False], 
        Hold[$CellContext`matrixHeight$$, $CellContext`matrixHeight$7026$$, 
         0], 
        Hold[$CellContext`matrixLength$$, $CellContext`matrixLength$7027$$, 
         0], 
        Hold[$CellContext`a$$, $CellContext`a$7028$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$7029$$, 0], 
        Hold[$CellContext`imageSize$$, $CellContext`imageSize$7030$$, {0, 
         0}]}, "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (
       SeedRandom[$CellContext`seed$$]; $CellContext`matrix = 
        Table[0, {$CellContext`x, 
           1, $CellContext`matrixHeight$$}, {$CellContext`y, 
           1, $CellContext`matrixLength$$}]; 
       Switch[$CellContext`graphType$$, 
         "Random", $CellContext`matrix = \
$CellContext`randomInitilization[$CellContext`matrix, \
$CellContext`randomVal$$, $CellContext`randomValRing$$, \
$CellContext`isRing$$, $CellContext`ringXIndex$$, $CellContext`ringYIndex$$, \
$CellContext`ringXLength$$, $CellContext`ringYLength$$], 
         "Sin", $CellContext`matrix = \
$CellContext`sinInitialization[$CellContext`matrix, $CellContext`isRing$$, \
$CellContext`ringXIndex$$, $CellContext`ringYIndex$$, \
$CellContext`ringXLength$$, $CellContext`ringYLength$$, $CellContext`a$$, \
$CellContext`b$$, $CellContext`ringA$$, $CellContext`ringB$$], 
         "Quadratic", $CellContext`matrix = \
$CellContext`quadraticInitialization[$CellContext`matrix, \
$CellContext`isRing$$, $CellContext`ringXIndex$$, $CellContext`ringYIndex$$, \
$CellContext`ringXLength$$, $CellContext`ringYLength$$, \
$CellContext`quadraA$$, $CellContext`quadraB$$, $CellContext`quadraC$$, \
$CellContext`quaRingA$$, $CellContext`quaRingB$$, $CellContext`quaRingC$$]]; 
       If[$CellContext`isRing$$, $CellContext`matrixList = 
          NestList[$CellContext`relaxationProcessRing[#, \
$CellContext`ringXIndex$$, $CellContext`ringYIndex$$, \
$CellContext`ringXLength$$, $CellContext`ringYLength$$]& , \
$CellContext`matrix, 20]; 
         Null, $CellContext`matrixList = 
          NestList[$CellContext`relaxationProcess[#]& , $CellContext`matrix, 
            20]; Null]; $CellContext`matrixList = \
$CellContext`initializeCorner[$CellContext`matrixList, \
$CellContext`currentState$$]; $CellContext`flatness = \
$CellContext`flatnessProcess[
          Part[$CellContext`matrixList, $CellContext`currentState$$]]; 
       If[$CellContext`isRing$$, 
         $CellContext`plotGraphRing[
          
          Part[$CellContext`matrixList, $CellContext`currentState$$], \
$CellContext`flatness, $CellContext`ringXIndex$$, $CellContext`ringXLength$$, \
$CellContext`ringYIndex$$, $CellContext`ringYLength$$, \
$CellContext`graphType$$, $CellContext`randomVal$$, \
$CellContext`randomValRing$$, $CellContext`a$$, $CellContext`b$$, \
$CellContext`ringA$$, $CellContext`ringB$$, $CellContext`quadraA$$, \
$CellContext`quadraB$$, $CellContext`quadraC$$, $CellContext`quaRingA$$, \
$CellContext`quaRingB$$, $CellContext`quaRingC$$, $CellContext`imageSize$$], 
         $CellContext`plotGraph[
          
          Part[$CellContext`matrixList, $CellContext`currentState$$], \
$CellContext`flatness, $CellContext`graphType$$, $CellContext`randomVal$$, \
$CellContext`a$$, $CellContext`b$$, $CellContext`quadraA$$, \
$CellContext`quadraB$$, $CellContext`quadraC$$, $CellContext`imageSize$$]]), 
      "Specifications" :> {{{$CellContext`graphType$$, "Random", 
          Style[
          "boundary function", FontSize -> 12, FontFamily -> 
           "Arial Hebrew Scholar"]}, {"Random", "Sin", "Quadratic"}, 
         ControlType -> PopupMenu, ControlPlacement -> 
         1}, {{$CellContext`randomVal$$, 25, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"x\", \"0\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, 1, 50, 1, 
         Appearance -> "Labeled", ControlPlacement -> 
         2}, {{$CellContext`randomValRing$$, 50, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"x\", \"1\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, 1, 50, 1, 
         Appearance -> "Labeled", ControlPlacement -> 
         3}, {{$CellContext`currentState$$, 2, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"i\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 1, 20, 1, AnimationRate -> 2, 
         Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`isRing$$, False, 
          Style[
          "declare a inner boundary ", FontSize -> 12, FontFamily -> 
           "Arial Hebrew Scholar"]}, {False, True}, ControlPlacement -> 
         5}, {{$CellContext`matrixHeight$$, 13, "height"}, {8, 9, 10, 11, 12, 
         13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50}, ControlType -> PopupMenu, ControlPlacement -> 
         6}, {{$CellContext`matrixLength$$, 13, "length"}, {6, 7, 8, 9, 10, 
         11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
         28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
         45, 46, 47, 48, 49, 50}, ControlType -> PopupMenu, ControlPlacement -> 
         7}, {{$CellContext`ringXIndex$$, 5, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"x\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
         Dynamic[
          Range[2, $CellContext`matrixHeight$$ - 1]], ControlType -> 
         PopupMenu, ControlPlacement -> 
         8}, {{$CellContext`ringYIndex$$, 5, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"y\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
         Dynamic[
          Range[2, $CellContext`matrixLength$$ - 1]], ControlType -> 
         PopupMenu, ControlPlacement -> 
         9}, {{$CellContext`ringXLength$$, 6, "height"}, 
         Dynamic[
          Range[
          0, $CellContext`matrixHeight$$ - 1 - $CellContext`ringXIndex$$]], 
         ControlType -> PopupMenu, ControlPlacement -> 
         10}, {{$CellContext`ringYLength$$, 6, "length"}, 
         Dynamic[
          Range[
          0, $CellContext`matrixLength$$ - 1 - $CellContext`ringYIndex$$]], 
         ControlType -> PopupMenu, ControlPlacement -> 
         11}, {{$CellContext`graphType$$, "Random", 
          Style[
          "boundary function", FontSize -> 12, FontFamily -> 
           "Arial Hebrew Scholar"]}, {"Random", "Sin", "Quadratic"}, 
         ControlType -> PopupMenu, ControlPlacement -> 
         12}, {{$CellContext`a$$, 0.3, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"a\", \"0\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
         "], ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 
         13}, {{$CellContext`b$$, 0.4, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"b\", \"0\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
         "], ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 
         14}, {{$CellContext`ringA$$, 0.2, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"a\", \"1\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
         "], ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 
         15}, {{$CellContext`ringB$$, 0.4, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"b\", \"1\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
         "], ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 
         16}, {{$CellContext`currentState$$, 2, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"i\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 1, 20, 1, AnimationRate -> 2, 
         Appearance -> "Labeled", ControlPlacement -> 
         17}, {{$CellContext`isRing$$, False, 
          Style[
          "declare a inner boundary ", FontSize -> 12, FontFamily -> 
           "Arial Hebrew Scholar"]}, {False, True}, ControlPlacement -> 
         18}, {{$CellContext`matrixHeight$$, 13, "height"}, {8, 9, 10, 11, 12,
          13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50}, ControlType -> PopupMenu, ControlPlacement -> 
         19}, {{$CellContext`matrixLength$$, 13, "length"}, {6, 7, 8, 9, 10, 
         11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
         28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
         45, 46, 47, 48, 49, 50}, ControlType -> PopupMenu, ControlPlacement -> 
         20}, {{$CellContext`ringXIndex$$, 5, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"x\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
         Dynamic[
          Range[2, $CellContext`matrixHeight$$ - 1]], ControlType -> 
         PopupMenu, ControlPlacement -> 
         21}, {{$CellContext`ringYIndex$$, 5, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"y\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
         Dynamic[
          Range[2, $CellContext`matrixLength$$ - 1]], ControlType -> 
         PopupMenu, ControlPlacement -> 
         22}, {{$CellContext`ringXLength$$, 6, "height"}, 
         Dynamic[
          Range[
          0, $CellContext`matrixHeight$$ - 1 - $CellContext`ringXIndex$$]], 
         ControlType -> PopupMenu, ControlPlacement -> 
         23}, {{$CellContext`ringYLength$$, 6, "length"}, 
         Dynamic[
          Range[
          0, $CellContext`matrixLength$$ - 1 - $CellContext`ringYIndex$$]], 
         ControlType -> PopupMenu, ControlPlacement -> 
         24}, {{$CellContext`graphType$$, "Random", 
          Style[
          "boundary function", FontSize -> 12, FontFamily -> 
           "Arial Hebrew Scholar"]}, {"Random", "Sin", "Quadratic"}, 
         ControlType -> PopupMenu, ControlPlacement -> 
         25}, {{$CellContext`quadraA$$, 4, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"a\", \"0\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
         "], ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 
         26}, {{$CellContext`quadraB$$, 0, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"b\", \"0\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
         "], ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 
         27}, {{$CellContext`quadraC$$, 0.4, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"c\", \"0\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
         "], ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 
         28}, {{$CellContext`quaRingA$$, 0.2, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"a\", \"1\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
         "], ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 
         29}, {{$CellContext`quaRingB$$, 0.4, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"b\", \"1\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
         "], ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 
         30}, {{$CellContext`quaRingC$$, 0.4, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\nSubscriptBox[\"c\", \"1\
\"], TraditionalForm]], \"InlineMath\"]], \"InlineMath\"]\)"}, CompressedData["
1:eJxFy80KAWEUxvEzDAbj4xZmaT3251yDS1BYuh7uZC5BsbKym1JqyoJIRNLb
+Zdn8/Y+z+9k0+VkFonISP5Zr0IK9Xej4zxkz/+grkr6oy7mISf2SnfbkDPu
Qn/F39jv3D1wT9wL98Z9cF+cmPdi7iPzvWZ+VzdnMS7GNXBNXAuX4BJcG9fB
dXEpLsX1cH3cADe0H0WqfXE=
         "], ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 
         31}, {{$CellContext`currentState$$, 2, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"i\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 1, 20, 1, AnimationRate -> 2, 
         Appearance -> "Labeled", ControlPlacement -> 
         32}, {{$CellContext`isRing$$, False, 
          Style[
          "declare a inner boundary ", FontSize -> 12, FontFamily -> 
           "Arial Hebrew Scholar"]}, {False, True}, ControlPlacement -> 
         33}, {{$CellContext`matrixHeight$$, 13, "height"}, {8, 9, 10, 11, 12,
          13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
         30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
         47, 48, 49, 50}, ControlType -> PopupMenu, ControlPlacement -> 
         34}, {{$CellContext`matrixLength$$, 13, "length"}, {6, 7, 8, 9, 10, 
         11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
         28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 
         45, 46, 47, 48, 49, 50}, ControlType -> PopupMenu, ControlPlacement -> 
         35}, {{$CellContext`ringXIndex$$, 5, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"x\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
         Dynamic[
          Range[2, $CellContext`matrixHeight$$ - 1]], ControlType -> 
         PopupMenu, ControlPlacement -> 
         36}, {{$CellContext`ringYIndex$$, 5, 
          "\!\(\*Cell[TextData[Cell[BoxData[FormBox[\"y\", TraditionalForm]], \
\"InlineMath\"]], \"InlineMath\"]\)"}, 
         Dynamic[
          Range[2, $CellContext`matrixLength$$ - 1]], ControlType -> 
         PopupMenu, ControlPlacement -> 
         37}, {{$CellContext`ringXLength$$, 6, "height"}, 
         Dynamic[
          Range[
          0, $CellContext`matrixHeight$$ - 1 - $CellContext`ringXIndex$$]], 
         ControlType -> PopupMenu, ControlPlacement -> 
         38}, {{$CellContext`ringYLength$$, 6, "length"}, 
         Dynamic[
          Range[
          0, $CellContext`matrixLength$$ - 1 - $CellContext`ringYIndex$$]], 
         ControlType -> PopupMenu, ControlPlacement -> 39}, 
        PaneSelector[{"Random" -> Column[{
             Row[{
               Button[
                Text[
                 Style[
                 "random case", FontSize -> 
                  12]], $CellContext`seed$$ = $CellContext`seed$$ + 1], 
               Button[
                Style["Smaller", 6], $CellContext`imageSize$$ = 
                Ceiling[0.75 $CellContext`imageSize$$]], 
               Button[
                Style["Normal", 8], $CellContext`imageSize$$ = Ceiling[320]], 
               
               Button[
                Style["Larger", 12], $CellContext`imageSize$$ = 
                Ceiling[1.25 $CellContext`imageSize$$]]}], "", 
             Manipulate`Place[1], "", 
             Style[
             "outer boundary function Range", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Manipulate`Place[2], "", 
             Style[
             "inner boundary range", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Manipulate`Place[3], "", 
             Style[
             "number of iteration", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Manipulate`Place[4], "", 
             Manipulate`Place[5], "", 
             Style[
             "matrix dimension", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Row[{
               Spacer[20], 
               Manipulate`Place[6], 
               Spacer[20], 
               Manipulate`Place[7]}], "", 
             Style[
             "inner matrix start index: ", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Row[{
               Spacer[40], 
               Manipulate`Place[8], 
               Spacer[45], 
               Manipulate`Place[9]}], "", 
             Style[
             "inner matirx dimension", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Row[{
               Spacer[20], 
               Manipulate`Place[10], 
               Spacer[25], 
               Manipulate`Place[11]}]}], "Sin" -> Column[{
             Row[{
               Button[
                Style["Smaller", 6], $CellContext`imageSize$$ = 
                Ceiling[0.75 $CellContext`imageSize$$]], 
               Button[
                Style["Normal", 8], $CellContext`imageSize$$ = Ceiling[320]], 
               
               Button[
                Style["Larger", 12], $CellContext`imageSize$$ = 
                Ceiling[1.25 $CellContext`imageSize$$]]}], "", 
             Manipulate`Place[12], "", 
             Style[
             "outer boundary coefficent", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Manipulate`Place[13], 
             Manipulate`Place[14], "", 
             Style[
             "inner boundary coefficent", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Manipulate`Place[15], 
             Manipulate`Place[16], "", 
             Style[
             "number of iteration", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Manipulate`Place[17], "", 
             Manipulate`Place[18], "", 
             Style[
             "matrix dimension", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Row[{
               Spacer[20], 
               Manipulate`Place[19], 
               Spacer[20], 
               Manipulate`Place[20]}], "", 
             Style[
             "inner matrix start index: ", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Row[{
               Spacer[40], 
               Manipulate`Place[21], 
               Spacer[45], 
               Manipulate`Place[22]}], "", 
             Style[
             "inner matirx dimension", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Row[{
               Spacer[20], 
               Manipulate`Place[23], 
               Spacer[25], 
               Manipulate`Place[24]}]}], "Quadratic" -> Column[{
             Row[{
               Button[
                Style["Smaller", 6], $CellContext`imageSize$$ = 
                Ceiling[0.75 $CellContext`imageSize$$]], 
               Button[
                Style["Normal", 8], $CellContext`imageSize$$ = Ceiling[320]], 
               
               Button[
                Style["Larger", 12], $CellContext`imageSize$$ = 
                Ceiling[1.25 $CellContext`imageSize$$]]}], "", 
             Manipulate`Place[25], "", 
             Style[
             "outer boundary coefficent", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Manipulate`Place[26], 
             Manipulate`Place[27], 
             Manipulate`Place[28], "", 
             Style[
             "inner boundary coefficent", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Manipulate`Place[29], 
             Manipulate`Place[30], 
             Manipulate`Place[31], 
             Style[
             "number of iteration", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Manipulate`Place[32], "", 
             Manipulate`Place[33], "", 
             Style[
             "matrix dimension", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Row[{
               Spacer[20], 
               Manipulate`Place[34], 
               Spacer[20], 
               Manipulate`Place[35]}], "", 
             Style[
             "inner matrix start index: ", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Row[{
               Spacer[40], 
               Manipulate`Place[36], 
               Spacer[45], 
               Manipulate`Place[37]}], "", 
             Style[
             "inner matirx dimension", FontSize -> 12, FontFamily -> 
              "Arial Hebrew Scholar"], 
             Row[{
               Spacer[20], 
               Manipulate`Place[38], 
               Spacer[25], 
               Manipulate`Place[39]}]}]}, 
         Dynamic[$CellContext`graphType$$]], {{$CellContext`seed$$, 1}, 1, 
         100, 1, ControlType -> 
         None}, {{$CellContext`graphType$$, "Random"}, {
         "Random", "Sin", "Quadratic"}, ControlType -> 
         None}, {{$CellContext`imageSize$$, {400, 400}}, {300, 300}, {600, 
         600}, {800, 800}, ControlType -> None}}, 
      "Options" :> {ControlPlacement -> Left, TrackedSymbols :> True}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{1069., {366., 374.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`matrix = {{20.434737254276783`, 
         6.1873695216002, 20.629073487212843`, 14.451403799859477`, 
         5.201276619514815, 3.2205208659609283`, 17.800301751894473`, 
         20.499180919629488`, 14.831505687694872`, 4.225325421943737, 
         20.17902004768124, 7.92190191602262, 0.29945014574258977`}, {
         2.7854902782809106`, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          9.78190974990192}, {
         19.73814986584629, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          11.472554408961216`}, {
         4.695078667650659, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          11.47112207383082}, {
         6.034024186441261, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          18.187919650722108`}, {
         1.643468987719526, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          19.764156987625874`}, {
         13.556165512740606`, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          6.581727261008609}, {
         5.778862668400684, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          7.437857531808049}, {
         9.90015203871468, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          11.09716794284563}, {
         17.51184454855612, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          1.382770063207932}, {
         5.295649476353187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          12.039283697044425`}, {
         18.7164220370737, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
          18.457415820245885`}, {10.571266233498719`, 24.429294043519413`, 
         23.131880029471567`, 7.3217434199480635`, 14.511862032353967`, 
         7.660684500865457, 9.764546784501853, 8.13378744988227, 
         12.969354176004089`, 11.814128579910978`, 0.29588656995864326`, 
         19.745100672016633`, 
         5.075286845417072}}, $CellContext`randomInitilization[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`randomVal, 
          Blank[]], 
         Pattern[$CellContext`ringRandomVal, 
          Blank[]], 
         Pattern[$CellContext`isRing, 
          Blank[]], 
         Pattern[$CellContext`ringXIndex, 
          Blank[]], 
         Pattern[$CellContext`ringYIndex, 
          Blank[]], 
         Pattern[$CellContext`ringXLength, 
          Blank[]], 
         Pattern[$CellContext`ringYLength, 
          Blank[]]] := 
       Block[{$CellContext`m = $CellContext`inMatrix, $CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 
            2], $CellContext`r = $CellContext`isRing, $CellContext`rx = \
$CellContext`ringXIndex, $CellContext`ry = $CellContext`ringYIndex, \
$CellContext`rxl = $CellContext`ringXLength, $CellContext`ryl = \
$CellContext`ringYLength, $CellContext`rv = $CellContext`randomVal, \
$CellContext`rrv = $CellContext`ringRandomVal}, 
         If[$CellContext`rx + $CellContext`rxl >= $CellContext`h, \
$CellContext`ringXLength = $CellContext`h - 1 - $CellContext`rx]; 
         If[$CellContext`ringYIndex + $CellContext`ringYLength >= \
$CellContext`l, $CellContext`ringYLength = $CellContext`l - 
            1 - $CellContext`ry]; If[$CellContext`isRing, Do[
             If[
              
              Or[$CellContext`x == 
               1, $CellContext`x == $CellContext`h, $CellContext`y == 
               1, $CellContext`y == $CellContext`l], 
              Part[$CellContext`m, $CellContext`x, $CellContext`y] = 
              RandomReal[$CellContext`rv]], {$CellContext`y, 
              1, $CellContext`l}, {$CellContext`x, 1, $CellContext`h}]; Do[
             If[
              
              Or[$CellContext`x == $CellContext`rx, $CellContext`x == \
$CellContext`rx + $CellContext`rxl, $CellContext`y == $CellContext`ry, \
$CellContext`y == $CellContext`ry + $CellContext`ryl], 
              Part[$CellContext`m, $CellContext`x, $CellContext`y] = 
              RandomReal[$CellContext`rrv]], {$CellContext`x, \
$CellContext`rx, $CellContext`rx + $CellContext`rxl}, {$CellContext`y, \
$CellContext`ry, $CellContext`ry + $CellContext`ryl}]; Null, Do[
             If[
              
              Or[$CellContext`x == 
               1, $CellContext`x == $CellContext`h, $CellContext`y == 
               1, $CellContext`y == $CellContext`l], 
              Part[$CellContext`m, $CellContext`x, $CellContext`y] = 
              RandomReal[$CellContext`rv]], {$CellContext`y, 
              1, $CellContext`l}, {$CellContext`x, 1, $CellContext`h}]; 
           Null]; $CellContext`m], $CellContext`sinInitialization[
         Pattern[$CellContext`inMatrix$, 
          Blank[]], 
         Pattern[$CellContext`isRing$, 
          Blank[]], 
         Pattern[$CellContext`ringXIndex$, 
          Blank[]], 
         Pattern[$CellContext`ringYIndex$, 
          Blank[]], 
         Pattern[$CellContext`ringXLength$, 
          Blank[]], 
         Pattern[$CellContext`ringYLength$, 
          Blank[]], 
         Pattern[$CellContext`inA$, 
          Blank[]], 
         Pattern[$CellContext`inB$, 
          Blank[]], 
         Pattern[$CellContext`ringA$, 
          Blank[]], 
         Pattern[$CellContext`ringB$, 
          Blank[]]] := 
       Block[{$CellContext`m = $CellContext`inMatrix$, $CellContext`h = Part[
            Dimensions[$CellContext`inMatrix$], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix$], 
            2], $CellContext`r = $CellContext`isRing$, $CellContext`rx = \
$CellContext`ringXIndex$, $CellContext`ry = $CellContext`ringYIndex$, \
$CellContext`rxl = $CellContext`ringXLength$, $CellContext`ryl = \
$CellContext`ringYLength$, FE`a$$23 = $CellContext`inA$, 
          FE`b$$23 = $CellContext`inB$, $CellContext`ra = \
$CellContext`ringA$, $CellContext`rb = $CellContext`ringB$}, $CellContext`m = 
          Table[0, {$CellContext`x, 1, $CellContext`h}, {$CellContext`y, 
             1, $CellContext`l}]; 
         If[$CellContext`rx + $CellContext`rxl >= $CellContext`h, \
$CellContext`ringXLength$ = $CellContext`h - 1 - $CellContext`rx]; 
         If[$CellContext`ringYIndex$ + $CellContext`ringYLength$ >= \
$CellContext`l, $CellContext`ringYLength$ = $CellContext`l - 
            1 - $CellContext`ry]; If[$CellContext`isRing$, Do[
             If[
              
              Or[$CellContext`x == 
               1, $CellContext`x == $CellContext`h, $CellContext`y == 
               1, $CellContext`y == $CellContext`l], 
              Part[$CellContext`m, $CellContext`x, $CellContext`y] = 
              Sin[FE`a$$23 $CellContext`x + 
                FE`b$$23 $CellContext`y]], {$CellContext`y, 
              1, $CellContext`l}, {$CellContext`x, 1, $CellContext`h}]; Do[
             If[
              
              Or[$CellContext`x == $CellContext`rx, $CellContext`x == \
$CellContext`rx + $CellContext`rxl, $CellContext`y == $CellContext`ry, \
$CellContext`y == $CellContext`ry + $CellContext`ryl], 
              Part[$CellContext`m, $CellContext`x, $CellContext`y] = 
              Sin[$CellContext`ra $CellContext`x - $CellContext`rb \
$CellContext`y]], {$CellContext`x, $CellContext`rx, $CellContext`rx + \
$CellContext`rxl}, {$CellContext`y, $CellContext`ry, $CellContext`ry + \
$CellContext`ryl}]; Null, Do[
             If[
              
              Or[$CellContext`x == 
               1, $CellContext`x == $CellContext`h, $CellContext`y == 
               1, $CellContext`y == $CellContext`l], 
              Part[$CellContext`m, $CellContext`x, $CellContext`y] = 
              Sin[
               FE`a$$23 $CellContext`x + 
                FE`b$$23 $CellContext`y]], {$CellContext`y, 
              1, $CellContext`l}, {$CellContext`x, 1, $CellContext`h}]; 
           Null]; $CellContext`m], 
       Attributes[$CellContext`inMatrix$] = {Temporary}, 
       Attributes[$CellContext`isRing$] = {Temporary}, 
       Attributes[$CellContext`ringXIndex$] = {Temporary}, 
       Attributes[$CellContext`ringYIndex$] = {Temporary}, 
       Attributes[$CellContext`ringXLength$] = {Temporary}, 
       Attributes[$CellContext`ringYLength$] = {Temporary}, 
       Attributes[$CellContext`inA$] = {Temporary}, 
       Attributes[$CellContext`inB$] = {Temporary}, 
       Attributes[$CellContext`ringA$] = {Temporary}, 
       Attributes[$CellContext`ringB$] = {Temporary}, FE`a$$23 = 0.3, 
       FE`b$$23 = 0.4, $CellContext`quadraticInitialization[
         Pattern[$CellContext`inMatrix$, 
          Blank[]], 
         Pattern[$CellContext`isRing$, 
          Blank[]], 
         Pattern[$CellContext`ringXIndex$, 
          Blank[]], 
         Pattern[$CellContext`ringYIndex$, 
          Blank[]], 
         Pattern[$CellContext`ringXLength$, 
          Blank[]], 
         Pattern[$CellContext`ringYLength$, 
          Blank[]], 
         Pattern[$CellContext`inA$, 
          Blank[]], 
         Pattern[$CellContext`inB$, 
          Blank[]], 
         Pattern[$CellContext`inC$, 
          Blank[]], 
         Pattern[$CellContext`ringA$, 
          Blank[]], 
         Pattern[$CellContext`ringB$, 
          Blank[]], 
         Pattern[$CellContext`ringC$, 
          Blank[]]] := 
       Block[{$CellContext`m = N[$CellContext`inMatrix$], $CellContext`h = 
          Part[
            Dimensions[$CellContext`inMatrix$], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix$], 
            2], $CellContext`r = $CellContext`isRing$, $CellContext`rx = \
$CellContext`ringXIndex$, $CellContext`ry = $CellContext`ringYIndex$, \
$CellContext`rxl = $CellContext`ringXLength$, $CellContext`ryl = \
$CellContext`ringYLength$, FE`a$$23 = $CellContext`inA$, 
          FE`b$$23 = $CellContext`inB$, $CellContext`c = $CellContext`inC$, \
$CellContext`ra = $CellContext`ringA$, $CellContext`rb = $CellContext`ringB$, \
$CellContext`rc = $CellContext`ringC$}, $CellContext`m = 
          Table[0, {$CellContext`x, 1, $CellContext`h}, {$CellContext`y, 
             1, $CellContext`l}]; 
         If[$CellContext`rx + $CellContext`rxl >= $CellContext`h, \
$CellContext`ringXLength$ = $CellContext`h - 1 - $CellContext`rx]; 
         If[$CellContext`ringYIndex$ + $CellContext`ringYLength$ >= \
$CellContext`l, $CellContext`ringYLength$ = $CellContext`l - 
            1 - $CellContext`ry]; If[$CellContext`isRing$, Do[
             If[
              
              Or[$CellContext`x == 
               1, $CellContext`x == $CellContext`h, $CellContext`y == 
               1, $CellContext`y == $CellContext`l], 
              Part[$CellContext`m, $CellContext`x, $CellContext`y] = 
              N[FE`a$$23 $CellContext`x^2 + 
                FE`b$$23 $CellContext`y^2 + $CellContext`rc $CellContext`x \
$CellContext`y]], {$CellContext`y, 1, $CellContext`l}, {$CellContext`x, 
              1, $CellContext`h}]; Do[
             If[
              
              Or[$CellContext`x == $CellContext`rx, $CellContext`x == \
$CellContext`rx + $CellContext`rxl, $CellContext`y == $CellContext`ry, \
$CellContext`y == $CellContext`ry + $CellContext`ryl], 
              Part[$CellContext`m, $CellContext`x, $CellContext`y] = \
$CellContext`ra $CellContext`x^2 + $CellContext`rb $CellContext`y^2 + \
$CellContext`rc $CellContext`x $CellContext`y], {$CellContext`x, \
$CellContext`rx, $CellContext`rx + $CellContext`rxl}, {$CellContext`y, \
$CellContext`ry, $CellContext`ry + $CellContext`ryl}]; Null, Do[
             If[
              
              Or[$CellContext`x == 
               1, $CellContext`x == $CellContext`h, $CellContext`y == 
               1, $CellContext`y == $CellContext`l], 
              Part[$CellContext`m, $CellContext`x, $CellContext`y] = 
              N[FE`a$$23 $CellContext`x^2 + 
                FE`b$$23 $CellContext`y^2 + $CellContext`rc $CellContext`x \
$CellContext`y]], {$CellContext`y, 1, $CellContext`l}, {$CellContext`x, 
              1, $CellContext`h}]; Null]; $CellContext`m], 
       Attributes[$CellContext`inC$] = {Temporary}, 
       Attributes[$CellContext`ringC$] = {
        Temporary}, $CellContext`matrixList = CompressedData["
1:eJzc22k0le0bP3zzPO5tz4M9mSVDpVSuI5WpIkOSKaSUhIiQkAaSZC5SMmQo
IiEkJEloQCmFhEyRITPx37/1PP83937e3s+L21p7ebXPY+3rOs/P8T32ujbd
2dP8KC8XFxeG/RL/f19V/q2Txp4bYEWxurm7Bg9Uu4ZZkfQNEHGYdIw6pAqT
kka+pHcyoE68ffreS2EINLON723RgMhbZPOmkA3QqCpBeZa3Dora8KXPBqUg
ksqj93HdBnCs2SchWCQLoS2FU+rK7cik1SVaoaEAcP1Lf6oXIgKsYphgbPv8
yHyV1r9Wx5rZmD09JQ8t7Q1P6l6j/rU6XeI3Rzax67AUQrd9ZuD/tToxtLhQ
kromTI4zmdl7lpB/q87vro6mtJdacKu+t+IFWQX+rTpcP7NMiyyI0OjerxpN
wf17dR5fr7CvpQDN7XBlbwvzX6tTdI6+VqMhD5sKo3SFLmr8a3U+fPUNbZed
Q7qkQquq1TD/Wp1aFmuVLKMIofY7PV2fav5rdcTS+TYQfDXB8PAK93mWHMQZ
/tw0eGozeMQ/76+jawNcPkE6a0SBIDH2KRZYBx9e7g+MzKKCzFFcgXc4E8jl
/W9CdtHAy7ZR3XRSCepHUH6f7ikAoCy2vJtoQ7giR0erq7UgIfLhKm6fDOgo
cz0iTkv/a456FB3kWldCh//r6P9TjxuOOl3ZY/IdCxTDiVfOKjIgoJpKqQni
A1Lm7dfrafNIvuinG/26aPD9Jr3poikBdlwXtatWxMDC+jih54K8cNVFpr85
Ggsxb8iL3w/i4J+Oxjqer9BZxsBy74WwXacEIGWzuiC/8xqizEr50IudRjL6
iXsjbg8gtOPWyZZts8j5WVc7fP0qci9Szqe+cwXJCkSlm1ZOIpq8h5oPP19C
dn50NHm9hIJ/OqpGzCgLduKDhL+xqU6uswiO9MPsicsoUvY4MkDH6DuiS/Wq
R9HakCLPM8aHbL4iJRFhBw8W9CHnXX0kN+P7EWe1ltyT+l+Ro4INNudzehGd
sS1aV6uk4J+OUlOG9zQrccPwLQ1iUPcvhMtGuAxH/4Z842/CKW18iyTFKOda
2Nciq9923biw6wVSUmPx7OxqA+J20HD10+dGRGzdgoXKoZdILqp+feP5V0g9
s9Z+SyT7+v3DUWxsoP1d09/ImkzH1uvYbiT06YR/G6kFedRj13g+twoZX7OO
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
fuNFHO2ead+H2UUXSQSVJ44wk/7/jv4Hccq8dQ==
        
        "], $CellContext`relaxationProcessRing[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`inRingX, 
          Blank[]], 
         Pattern[$CellContext`inRingY, 
          Blank[]], 
         Pattern[$CellContext`inRingXLen, 
          Blank[]], 
         Pattern[$CellContext`inRingYLen, 
          Blank[]]] := 
       Block[{$CellContext`m = N[$CellContext`inMatrix], $CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 
            2], $CellContext`x = $CellContext`inRingX, $CellContext`y = \
$CellContext`inRingY, $CellContext`xl = $CellContext`inRingXLen, \
$CellContext`yl = $CellContext`inRingYLen}, 
         Do[Part[$CellContext`m, $CellContext`i, $CellContext`j] = (
             Part[$CellContext`m, $CellContext`i + 1, $CellContext`j] + 
             Part[$CellContext`m, $CellContext`i - 1, $CellContext`j] + 
             Part[$CellContext`m, $CellContext`i, $CellContext`j + 1] + 
             Part[$CellContext`m, $CellContext`i, $CellContext`j - 1])/
            4, {$CellContext`j, 2, $CellContext`l - 1}, {$CellContext`i, 
            2, $CellContext`x - 1}]; 
         Do[Part[$CellContext`m, $CellContext`i, $CellContext`j] = (
             Part[$CellContext`m, $CellContext`i + 1, $CellContext`j] + 
             Part[$CellContext`m, $CellContext`i - 1, $CellContext`j] + 
             Part[$CellContext`m, $CellContext`i, $CellContext`j + 1] + 
             Part[$CellContext`m, $CellContext`i, $CellContext`j - 1])/
            4, {$CellContext`j, 2, $CellContext`l - 
            1}, {$CellContext`i, $CellContext`x + $CellContext`xl + 
            1, $CellContext`h - 1}]; 
         Do[Part[$CellContext`m, $CellContext`i, $CellContext`j] = (
             Part[$CellContext`m, $CellContext`i + 1, $CellContext`j] + 
             Part[$CellContext`m, $CellContext`i - 1, $CellContext`j] + 
             Part[$CellContext`m, $CellContext`i, $CellContext`j + 1] + 
             Part[$CellContext`m, $CellContext`i, $CellContext`j - 1])/
            4, {$CellContext`j, 2, $CellContext`y - 
            1}, {$CellContext`i, $CellContext`x, $CellContext`x + \
$CellContext`xl}]; 
         Do[Part[$CellContext`m, $CellContext`i, $CellContext`j] = (
             Part[$CellContext`m, $CellContext`i + 1, $CellContext`j] + 
             Part[$CellContext`m, $CellContext`i - 1, $CellContext`j] + 
             Part[$CellContext`m, $CellContext`i, $CellContext`j + 1] + 
             Part[$CellContext`m, $CellContext`i, $CellContext`j - 1])/
            4, {$CellContext`j, $CellContext`y + 
            1 + $CellContext`yl, $CellContext`l - 
            1}, {$CellContext`i, $CellContext`x, $CellContext`x + \
$CellContext`xl}]; $CellContext`m], $CellContext`relaxationProcess[
         Pattern[$CellContext`inMatrix, 
          Blank[]]] := 
       Block[{$CellContext`x = N[$CellContext`inMatrix], $CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 2]}, 
         Do[Part[$CellContext`x, $CellContext`i, $CellContext`j] = (
             Part[$CellContext`x, $CellContext`i + 1, $CellContext`j] + 
             Part[$CellContext`x, $CellContext`i - 1, $CellContext`j] + 
             Part[$CellContext`x, $CellContext`i, $CellContext`j + 1] + 
             Part[$CellContext`x, $CellContext`i, $CellContext`j - 1])/
            4, {$CellContext`j, 2, $CellContext`l - 1}, {$CellContext`i, 
            2, $CellContext`h - 1}]; 
         Part[$CellContext`x, 1, 1] = (Part[$CellContext`x, 2, 1] + 
            Part[$CellContext`x, 1, 2])/2; 
         Part[$CellContext`x, 1, $CellContext`l] = (
            Part[$CellContext`x, 2, $CellContext`l] + 
            Part[$CellContext`x, 1, $CellContext`l - 1])/2; 
         Part[$CellContext`x, $CellContext`h, 1] = (
            Part[$CellContext`x, $CellContext`h - 1, 1] + 
            Part[$CellContext`x, $CellContext`h, 2])/2; 
         Part[$CellContext`x, $CellContext`h, $CellContext`l] = (
            Part[$CellContext`x, $CellContext`h - 1, $CellContext`l] + 
            Part[$CellContext`x, $CellContext`h, $CellContext`l - 1])/
           2; $CellContext`x], $CellContext`initializeCorner[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`currentState, 
          Blank[]]] := 
       Block[{$CellContext`m = N[$CellContext`inMatrix], $CellContext`h = Part[
            Dimensions[
             Part[$CellContext`inMatrix, 1]], 1], $CellContext`l = Part[
            Dimensions[
             Part[$CellContext`inMatrix, 1]], 
            2], $CellContext`c = $CellContext`currentState}, 
         Part[$CellContext`matrixList, $CellContext`c, 1, 1] = (
            Part[$CellContext`matrixList, $CellContext`c, 1, 2] + 
            Part[$CellContext`matrixList, $CellContext`c, 2, 1])/2; 
         Part[$CellContext`matrixList, $CellContext`c, 1, $CellContext`l] = (
            Part[$CellContext`matrixList, $CellContext`c, 1, $CellContext`l - 
              1] + Part[$CellContext`matrixList, $CellContext`c, 
              2, $CellContext`l])/2; 
         Part[$CellContext`matrixList, $CellContext`c, $CellContext`h, 1] = (
            Part[$CellContext`matrixList, $CellContext`c, $CellContext`h - 1, 
              1] + Part[$CellContext`matrixList, $CellContext`c, \
$CellContext`h, 2])/2; 
         Part[$CellContext`matrixList, $CellContext`c, $CellContext`h, \
$CellContext`l] = (
            Part[$CellContext`matrixList, $CellContext`c, $CellContext`h - 
              1, $CellContext`l] + 
            Part[$CellContext`matrixList, $CellContext`c, $CellContext`h, \
$CellContext`l - 1])/2; $CellContext`m], $CellContext`flatness = 
       7554.883278991416, $CellContext`flatnessProcess[
         Pattern[$CellContext`inMatrix, 
          Blank[]]] := 
       Block[{$CellContext`m = N[$CellContext`inMatrix], $CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 2], $CellContext`sum = 0}, Do[
           
           AddTo[$CellContext`sum, (
              Part[$CellContext`m, $CellContext`x, $CellContext`y] - 
              Part[$CellContext`m, $CellContext`x, $CellContext`y - 1])^2 + (
              Part[$CellContext`m, $CellContext`x, $CellContext`y] - 
              Part[$CellContext`m, $CellContext`x - 
               1, $CellContext`y])^2], {$CellContext`y, 
            2, $CellContext`l}, {$CellContext`x, 2, $CellContext`h}]; Do[
           AddTo[$CellContext`sum, (Part[$CellContext`m, $CellContext`x, 1] - 
             Part[$CellContext`m, $CellContext`x + 1, 1])^2], {$CellContext`x,
             1, $CellContext`h - 1}]; Do[
           
           AddTo[$CellContext`sum, (Part[$CellContext`m, 1, $CellContext`y] - 
             Part[$CellContext`m, 1, $CellContext`y + 1])^2], {$CellContext`y,
             1, $CellContext`l - 
            1}]; $CellContext`sum], $CellContext`plotGraphRing[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`flatness, 
          Blank[]], 
         Pattern[$CellContext`ringXIndex, 
          Blank[]], 
         Pattern[$CellContext`ringXLength, 
          Blank[]], 
         Pattern[$CellContext`ringYIndex, 
          Blank[]], 
         Pattern[$CellContext`ringYLength, 
          Blank[]], 
         Pattern[$CellContext`graphType, 
          Blank[]]] := 
       Block[{$CellContext`m = $CellContext`inMatrix, $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 2], $CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 
            1], $CellContext`f = $CellContext`flatness, $CellContext`rX = \
$CellContext`ringXIndex, $CellContext`rXL = $CellContext`ringXLength, \
$CellContext`rY = $CellContext`ringYIndex, $CellContext`rYL = \
$CellContext`ringYLength, $CellContext`g = $CellContext`graphType}, 
         Switch[$CellContext`g, "Random", 
          Column[{
            Style[
            "The boundary is random value", FontSize -> 18, FontFamily -> 
             "Arial Hebrew Scholar"], 
            ListPlot3D[$CellContext`m, ColorFunction -> "CMYKColors", Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, PlotStyle -> Opacity[0.5], Filling -> 
             Bottom, PlotRange -> All, ImageSize -> {780, 480}, 
             SphericalRegion -> True, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Flatness: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], RegionFunction -> 
             Function[{$CellContext`y, $CellContext`x}, 
               Or[
                And[
                1 <= $CellContext`x <= $CellContext`rX, 
                 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX + $CellContext`rXL <= $CellContext`x <= \
$CellContext`h, 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, 1 <= $CellContext`y <= $CellContext`rYL - 1], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, $CellContext`rY + $CellContext`rYL <= $CellContext`y <= \
$CellContext`l]]], PerformanceGoal -> "Speed"]}, Alignment -> Center], "Sin", 
          
          Column[{
            Style[
            "The outer boundary is sin(\[Alpha]x+\[Beta]y) \nThe inner \
boundary is sin(\[Alpha]x-\[Beta]y)", FontSize -> 18, FontFamily -> 
             "Arial Hebrew Scholar"], 
            ListPlot3D[$CellContext`m, ColorFunction -> "BrightBands", Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, PlotStyle -> Opacity[0.5], Filling -> 
             Bottom, PlotRange -> All, ImageSize -> {780, 480}, 
             SphericalRegion -> True, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Flatness: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], RegionFunction -> 
             Function[{$CellContext`y, $CellContext`x}, 
               Or[
                And[
                1 <= $CellContext`x <= $CellContext`rX, 
                 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX + $CellContext`rXL <= $CellContext`x <= \
$CellContext`h, 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, 1 <= $CellContext`y <= $CellContext`rYL - 1], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, $CellContext`rY + $CellContext`rYL <= $CellContext`y <= \
$CellContext`l]]], PerformanceGoal -> "Speed"]}, Alignment -> Center], 
          "Quadratic", 
          Column[{
            Style[
            "The outer boundary is \!\(\*SuperscriptBox[\(\[Alpha]x\), \(2\)]\
\)+\!\(\*SuperscriptBox[\(\[Beta]y\), \(2\)]\)+c \nThe inner boundary is a \!\
\(\*SuperscriptBox[\(\[Alpha]x\), \(2\)]\)-\!\(\*SuperscriptBox[\(by\), \
\(2\)]\)+c", FontSize -> 18, FontFamily -> "Arial Hebrew Scholar"], 
            
            ListPlot3D[$CellContext`m, ColorFunction -> "LightTemperatureMap",
              Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, PlotStyle -> Opacity[0.5], Filling -> 
             Bottom, PlotRange -> All, ImageSize -> {780, 480}, 
             SphericalRegion -> True, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Flatness: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], RegionFunction -> 
             Function[{$CellContext`y, $CellContext`x}, 
               Or[
                And[
                1 <= $CellContext`x <= $CellContext`rX, 
                 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX + $CellContext`rXL <= $CellContext`x <= \
$CellContext`h, 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, 1 <= $CellContext`y <= $CellContext`rYL - 1], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, $CellContext`rY + $CellContext`rYL <= $CellContext`y <= \
$CellContext`l]]], PerformanceGoal -> "Speed"]}, Alignment -> 
           Center]]], $CellContext`plotGraphRing[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`flatness, 
          Blank[]], 
         Pattern[$CellContext`ringXIndex, 
          Blank[]], 
         Pattern[$CellContext`ringXLength, 
          Blank[]], 
         Pattern[$CellContext`ringYIndex, 
          Blank[]], 
         Pattern[$CellContext`ringYLength, 
          Blank[]], 
         Pattern[$CellContext`graphType, 
          Blank[]], 
         Pattern[$CellContext`randomVal, 
          Blank[]], 
         Pattern[$CellContext`randomValRing, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`ringA, 
          Blank[]], 
         Pattern[$CellContext`ringB, 
          Blank[]], 
         Pattern[$CellContext`quaA, 
          Blank[]], 
         Pattern[$CellContext`quaB, 
          Blank[]], 
         Pattern[$CellContext`quaC, 
          Blank[]], 
         Pattern[$CellContext`quaRingA, 
          Blank[]], 
         Pattern[$CellContext`quaRingB, 
          Blank[]], 
         Pattern[$CellContext`quaRingC, 
          Blank[]]] := 
       Block[{$CellContext`m = $CellContext`inMatrix, $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 2], $CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 
            1], $CellContext`f = $CellContext`flatness, $CellContext`rX = \
$CellContext`ringXIndex, $CellContext`rXL = $CellContext`ringXLength, \
$CellContext`rY = $CellContext`ringYIndex, $CellContext`rYL = \
$CellContext`ringYLength, $CellContext`g = $CellContext`graphType, 
          Null, $CellContext`r = $CellContext`randomVal, $CellContext`rr = \
$CellContext`randomValRing, $CellContext`ra = $CellContext`ringA, \
$CellContext`rb = $CellContext`ringB, $CellContext`qa = $CellContext`quaA, \
$CellContext`qb = $CellContext`quaB, $CellContext`qc = $CellContext`quaC, \
$CellContext`qra = $CellContext`quaRingA, $CellContext`qrb = \
$CellContext`quaRingB, $CellContext`qrc = $CellContext`quaRingCs}, 
         Switch[$CellContext`g, "Random", 
          Column[{
            Row[{
              Style["Outer boundary Function: "], 
              Style[
              "", FontSize -> 18, FontFamily -> "Arial Hebrew Scholar"]}], 
            ListPlot3D[$CellContext`m, ColorFunction -> "CMYKColors", Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, PlotStyle -> Opacity[0.5], Filling -> 
             Bottom, PlotRange -> All, ImageSize -> {780, 480}, 
             SphericalRegion -> True, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], RegionFunction -> 
             Function[{$CellContext`y, $CellContext`x}, 
               Or[
                And[
                1 <= $CellContext`x <= $CellContext`rX, 
                 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX + $CellContext`rXL <= $CellContext`x <= \
$CellContext`h, 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, 1 <= $CellContext`y <= $CellContext`rYL - 1], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, $CellContext`rY + $CellContext`rYL <= $CellContext`y <= \
$CellContext`l]]], PerformanceGoal -> "Speed"]}, Alignment -> Center], "Sin", 
          
          Column[{
            Style[
            "The outer boundary is sin(\[Alpha]x+\[Beta]y) \nThe inner \
boundary is sin(\[Alpha]x-\[Beta]y)", FontSize -> 18, FontFamily -> 
             "Arial Hebrew Scholar"], 
            ListPlot3D[$CellContext`m, ColorFunction -> "BrightBands", Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, PlotStyle -> Opacity[0.5], Filling -> 
             Bottom, PlotRange -> All, ImageSize -> {780, 480}, 
             SphericalRegion -> True, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], RegionFunction -> 
             Function[{$CellContext`y, $CellContext`x}, 
               Or[
                And[
                1 <= $CellContext`x <= $CellContext`rX, 
                 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX + $CellContext`rXL <= $CellContext`x <= \
$CellContext`h, 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, 1 <= $CellContext`y <= $CellContext`rYL - 1], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, $CellContext`rY + $CellContext`rYL <= $CellContext`y <= \
$CellContext`l]]], PerformanceGoal -> "Speed"]}, Alignment -> Center], 
          "Quadratic", 
          Column[{
            Style[
            "The outer boundary is \!\(\*SuperscriptBox[\(\[Alpha]x\), \(2\)]\
\)+\!\(\*SuperscriptBox[\(\[Beta]y\), \(2\)]\)+c \nThe inner boundary is a \!\
\(\*SuperscriptBox[\(\[Alpha]x\), \(2\)]\)-\!\(\*SuperscriptBox[\(by\), \
\(2\)]\)+c", FontSize -> 18, FontFamily -> "Arial Hebrew Scholar"], 
            
            ListPlot3D[$CellContext`m, ColorFunction -> "LightTemperatureMap",
              Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, PlotStyle -> Opacity[0.5], Filling -> 
             Bottom, PlotRange -> All, ImageSize -> {780, 480}, 
             SphericalRegion -> True, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], RegionFunction -> 
             Function[{$CellContext`y, $CellContext`x}, 
               Or[
                And[
                1 <= $CellContext`x <= $CellContext`rX, 
                 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX + $CellContext`rXL <= $CellContext`x <= \
$CellContext`h, 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, 1 <= $CellContext`y <= $CellContext`rYL - 1], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, $CellContext`rY + $CellContext`rYL <= $CellContext`y <= \
$CellContext`l]]], PerformanceGoal -> "Speed"]}, Alignment -> 
           Center]]], $CellContext`plotGraphRing[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`flatness, 
          Blank[]], 
         Pattern[$CellContext`ringXIndex, 
          Blank[]], 
         Pattern[$CellContext`ringXLength, 
          Blank[]], 
         Pattern[$CellContext`ringYIndex, 
          Blank[]], 
         Pattern[$CellContext`ringYLength, 
          Blank[]], 
         Pattern[$CellContext`graphType, 
          Blank[]], 
         Pattern[$CellContext`randomVal, 
          Blank[]], 
         Pattern[$CellContext`randomValRing, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`ringA, 
          Blank[]], 
         Pattern[$CellContext`ringB, 
          Blank[]], 
         Pattern[$CellContext`quaA, 
          Blank[]], 
         Pattern[$CellContext`quaB, 
          Blank[]], 
         Pattern[$CellContext`quaC, 
          Blank[]], 
         Pattern[$CellContext`quaRingA, 
          Blank[]], 
         Pattern[$CellContext`quaRingB, 
          Blank[]], 
         Pattern[$CellContext`quaRingC, 
          Blank[]], 
         Pattern[$CellContext`imageSize, 
          Blank[]]] := 
       Block[{$CellContext`m = $CellContext`inMatrix, $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 2], $CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 
            
            1], $CellContext`f = $CellContext`flatness, $CellContext`rX = \
$CellContext`ringXIndex, $CellContext`rXL = $CellContext`ringXLength, \
$CellContext`rY = $CellContext`ringYIndex, $CellContext`rYL = \
$CellContext`ringYLength, $CellContext`g = $CellContext`graphType, 
          Null, $CellContext`r = $CellContext`randomVal, $CellContext`rr = \
$CellContext`randomValRing, $CellContext`ra = $CellContext`ringA, \
$CellContext`rb = $CellContext`ringB, $CellContext`qa = $CellContext`quaA, \
$CellContext`qb = $CellContext`quaB, $CellContext`qc = $CellContext`quaC, \
$CellContext`qra = $CellContext`quaRingA, $CellContext`qrb = \
$CellContext`quaRingB, $CellContext`qrc = $CellContext`quaRingC, \
$CellContext`i = $CellContext`imageSize}, 
         Switch[$CellContext`g, "Random", 
          Column[{
            Row[{
              Style["Outer boundary Function: "], 
              Style[
              "", FontSize -> $CellContext`qw, FontFamily -> 
               "Arial Hebrew Scholar"]}], 
            ListPlot3D[$CellContext`m, ColorFunction -> "CMYKColors", Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, PlotStyle -> Opacity[0.5], Filling -> 
             Bottom, PlotRange -> All, ImageSize -> $CellContext`i, 
             SphericalRegion -> True, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 12, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 12]}], RegionFunction -> 
             Function[{$CellContext`y, $CellContext`x}, 
               Or[
                And[
                1 <= $CellContext`x <= $CellContext`rX, 
                 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX + $CellContext`rXL <= $CellContext`x <= \
$CellContext`h, 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, 1 <= $CellContext`y <= $CellContext`rYL - 1], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, $CellContext`rY + $CellContext`rYL <= $CellContext`y <= \
$CellContext`l]]], PerformanceGoal -> "Speed"]}, Alignment -> Center], "Sin", 
          
          Column[{
            Style[
            "The outer boundary is sin(\[Alpha]x+\[Beta]y) \nThe inner \
boundary is sin(\[Alpha]x-\[Beta]y)", FontSize -> 12, FontFamily -> 
             "Arial Hebrew Scholar"], 
            ListPlot3D[$CellContext`m, ColorFunction -> "BrightBands", Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, PlotStyle -> Opacity[0.5], Filling -> 
             Bottom, PlotRange -> All, ImageSize -> $CellContext`i, 
             SphericalRegion -> True, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 12, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 12]}], RegionFunction -> 
             Function[{$CellContext`y, $CellContext`x}, 
               Or[
                And[
                1 <= $CellContext`x <= $CellContext`rX, 
                 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX + $CellContext`rXL <= $CellContext`x <= \
$CellContext`h, 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, 1 <= $CellContext`y <= $CellContext`rYL - 1], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, $CellContext`rY + $CellContext`rYL <= $CellContext`y <= \
$CellContext`l]]], PerformanceGoal -> "Speed"]}, Alignment -> Center], 
          "Quadratic", 
          Column[{
            Style[
            "The outer boundary is \!\(\*SuperscriptBox[\(\[Alpha]x\), \(2\)]\
\)+\!\(\*SuperscriptBox[\(\[Beta]y\), \(2\)]\)+c \nThe inner boundary is a \!\
\(\*SuperscriptBox[\(\[Alpha]x\), \(2\)]\)-\!\(\*SuperscriptBox[\(by\), \
\(2\)]\)+c", FontSize -> 12, FontFamily -> "Arial Hebrew Scholar"], 
            ListPlot3D[$CellContext`m, ColorFunction -> "LightTemperatureMap",
              Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, PlotStyle -> Opacity[0.5], Filling -> 
             Bottom, PlotRange -> All, ImageSize -> $CellContext`i, 
             SphericalRegion -> True, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 12, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 12]}], RegionFunction -> 
             Function[{$CellContext`y, $CellContext`x}, 
               Or[
                And[
                1 <= $CellContext`x <= $CellContext`rX, 
                 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX + $CellContext`rXL <= $CellContext`x <= \
$CellContext`h, 1 <= $CellContext`y <= $CellContext`l], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, 1 <= $CellContext`y <= $CellContext`rYL - 1], 
                
                And[$CellContext`rX <= $CellContext`x <= $CellContext`rX + \
$CellContext`rXL, $CellContext`rY + $CellContext`rYL <= $CellContext`y <= \
$CellContext`l]]], PerformanceGoal -> "Speed"]}, Alignment -> 
           Center]]], $CellContext`plotGraph[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`flatness, 
          Blank[]], 
         Pattern[$CellContext`graphType, 
          Blank[]]] := 
       Block[{$CellContext`m = 
          N[$CellContext`inMatrix], $CellContext`f = $CellContext`flatness, \
$CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 
            2], $CellContext`g = $CellContext`graphType}, 
         Switch[$CellContext`g, "Random", 
          Column[{
            Style[
            "The boundary is random value", FontSize -> 18, FontFamily -> 
             "Arial Hebrew Scholar"], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> "CMYKColors", 
             PlotStyle -> Opacity[0.5], ImageSize -> {780, 480}, 
             SphericalRegion -> True, Filling -> Bottom, PlotRange -> All, 
             ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Flatness: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center], "Sin", 
          Column[{
            Style[
            "The outer boundary is sin(\[Alpha]x+\[Beta]y) \nThe inner \
boundary is sin(\[Alpha]x-\[Beta]y)", FontSize -> 18, FontFamily -> 
             "Arial Hebrew Scholar"], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> "BrightBands", 
             PlotStyle -> Opacity[0.5], ImageSize -> {780, 480}, 
             SphericalRegion -> True, Filling -> Bottom, PlotRange -> All, 
             ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Flatness: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center], "Quadratic", 
          Column[{
            Style[
            "The outer boundary is \!\(\*SuperscriptBox[\(\[Alpha]x\), \(2\)]\
\)+\!\(\*SuperscriptBox[\(\[Beta]y\), \(2\)]\)+c \nThe inner boundary is a \!\
\(\*SuperscriptBox[\(\[Alpha]x\), \(2\)]\)-\!\(\*SuperscriptBox[\(by\), \
\(2\)]\)+c", FontSize -> 18, FontFamily -> "Arial Hebrew Scholar"], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> 
             "LightTemperatureMap", PlotStyle -> Opacity[0.5], 
             ImageSize -> {780, 480}, SphericalRegion -> True, Filling -> 
             Bottom, PlotRange -> All, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Flatness: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center]]], $CellContext`plotGraph[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`flatness, 
          Blank[]], 
         Pattern[$CellContext`graphType, 
          Blank[]], 
         Pattern[$CellContext`randomVal, 
          Blank[]]] := 
       Block[{$CellContext`m = 
          N[$CellContext`inMatrix], $CellContext`f = $CellContext`flatness, \
$CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 
            2], $CellContext`g = $CellContext`graphType, $CellContext`r = \
$CellContext`randomVal}, 
         Switch[$CellContext`g, "Random", 
          Column[{
            Row[{
              Style[
              "The boundary is ", FontSize -> 18, FontFamily -> 
               "Arial Hebrew Scholar"], 
              Style[$CellContext`r, FontSize -> 18]}], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> "CMYKColors", 
             PlotStyle -> Opacity[0.5], ImageSize -> {780, 480}, 
             SphericalRegion -> True, Filling -> Bottom, PlotRange -> All, 
             ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Flatness: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center], "Sin", 
          Column[{
            Style[
            "The outer boundary is sin(\[Alpha]x+\[Beta]y) \nThe inner \
boundary is sin(\[Alpha]x-\[Beta]y)", FontSize -> 18, FontFamily -> 
             "Arial Hebrew Scholar"], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> "BrightBands", 
             PlotStyle -> Opacity[0.5], ImageSize -> {780, 480}, 
             SphericalRegion -> True, Filling -> Bottom, PlotRange -> All, 
             ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Flatness: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center], "Quadratic", 
          Column[{
            Style[
            "The outer boundary is \!\(\*SuperscriptBox[\(\[Alpha]x\), \(2\)]\
\)+\!\(\*SuperscriptBox[\(\[Beta]y\), \(2\)]\)+c \nThe inner boundary is a \!\
\(\*SuperscriptBox[\(\[Alpha]x\), \(2\)]\)-\!\(\*SuperscriptBox[\(by\), \
\(2\)]\)+c", FontSize -> 18, FontFamily -> "Arial Hebrew Scholar"], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> 
             "LightTemperatureMap", PlotStyle -> Opacity[0.5], 
             ImageSize -> {780, 480}, SphericalRegion -> True, Filling -> 
             Bottom, PlotRange -> All, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Flatness: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center]]], $CellContext`plotGraph[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`flatness, 
          Blank[]], 
         Pattern[$CellContext`graphType, 
          Blank[]], 
         Pattern[$CellContext`randomVal, 
          Blank[]], 
         Pattern[$CellContext`randomValRing, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`ringA, 
          Blank[]], 
         Pattern[$CellContext`ringB, 
          Blank[]], 
         Pattern[$CellContext`quaA, 
          Blank[]], 
         Pattern[$CellContext`quaB, 
          Blank[]], 
         Pattern[$CellContext`quaC, 
          Blank[]], 
         Pattern[$CellContext`quaRingA, 
          Blank[]], 
         Pattern[$CellContext`quaRingB, 
          Blank[]], 
         Pattern[$CellContext`quaRingC, 
          Blank[]]] := 
       Block[{$CellContext`m = 
          N[$CellContext`inMatrix], $CellContext`f = $CellContext`flatness, \
$CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 
            2], $CellContext`g = $CellContext`graphType, $CellContext`r = \
$CellContext`randomVal, $CellContext`rr = $CellContext`randomValRing, \
$CellContext`ra = $CellContext`ringA, $CellContext`rb = $CellContext`ringB, \
$CellContext`qa = $CellContext`quaA, $CellContext`qb = $CellContext`quaB, \
$CellContext`qc = $CellContext`quaC, $CellContext`qra = \
$CellContext`quaRingA, $CellContext`qrb = $CellContext`quaRingB, \
$CellContext`qrc = $CellContext`quaRingC}, 
         Switch[$CellContext`g, "Random", 
          Column[{
            Row[{
              Style[
              "Boundary function is random value with range ", FontSize -> 18,
                FontFamily -> "Arial Hebrew Scholar"], 
              Style[0, FontSize -> 18], 
              Style[
              " to ", FontSize -> 18, FontFamily -> "Arial Hebrew Scholar"], 
              Style[$CellContext`r, FontSize -> 18]}], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> "CMYKColors", 
             PlotStyle -> Opacity[0.5], ImageSize -> {780, 480}, 
             SphericalRegion -> True, Filling -> Bottom, PlotRange -> All, 
             ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center], "Sin", 
          Column[{
            Row[{
              Style[
              "Boundary function: ", FontSize -> 18, FontFamily -> 
               "Arial Hebrew Scholar"], 
              Style[
               StringJoin["\!\(\*Cell[\"sin(\", \"InlineMath\"]\)", 
                ToString[$CellContext`a], 
                "\!\(\*Cell[\"x + \", \"InlineMath\"]\)", 
                ToString[$CellContext`b], 
                "\!\(\*Cell[\"y)\", \"InlineMath\"]\)"], FontSize -> 18]}], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> "BrightBands", 
             PlotStyle -> Opacity[0.5], ImageSize -> {780, 480}, 
             SphericalRegion -> True, Filling -> Bottom, PlotRange -> All, 
             ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center], "Quadratic", 
          Column[{
            Row[{
              Style[
              "Boundary function: ", FontSize -> 18, FontFamily -> 
               "Arial Hebrew Scholar"], 
              Style[
               StringJoin[
                ToString[$CellContext`qa], 
                "\!\(\*Cell[TextData[{\nCell[BoxData[FormBox[\n\
SuperscriptBox[\"x\", \"2\"], TraditionalForm]], \"InlineMath\"],\n\" + \"\n\
}], \"InlineMath\"]\)", 
                ToString[$CellContext`qb], 
                "\!\(\*Cell[TextData[{\nCell[BoxData[FormBox[\n\
SuperscriptBox[\"y\", \"2\"], TraditionalForm]], \"InlineMath\"],\n\" + \"\n\
}], \"InlineMath\"]\)", 
                ToString[$CellContext`qc]], FontSize -> 18]}], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> 
             "LightTemperatureMap", PlotStyle -> Opacity[0.5], 
             ImageSize -> {780, 480}, SphericalRegion -> True, Filling -> 
             Bottom, PlotRange -> All, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center]]], $CellContext`plotGraph[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`flatness, 
          Blank[]], 
         Pattern[$CellContext`graphType, 
          Blank[]], 
         Pattern[$CellContext`randomVal, 
          Blank[]], 
         Pattern[$CellContext`randomValRing, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`ringA, 
          Blank[]], 
         Pattern[$CellContext`ringB, 
          Blank[]], 
         Pattern[$CellContext`quaA, 
          Blank[]], 
         Pattern[$CellContext`quaB, 
          Blank[]], 
         Pattern[$CellContext`quaC, 
          Blank[]], 
         Pattern[$CellContext`quaRingA, 
          Blank[]], 
         Pattern[$CellContext`quaRingB, 
          Blank[]], 
         Pattern[$CellContext`quaRingC, 
          Blank[]], 
         Pattern[$CellContext`imageSize, 
          Blank[]]] := 
       Block[{$CellContext`m = 
          N[$CellContext`inMatrix], $CellContext`f = $CellContext`flatness, \
$CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 
            2], $CellContext`g = $CellContext`graphType, $CellContext`r = \
$CellContext`randomVal, $CellContext`rr = $CellContext`randomValRing, \
$CellContext`ra = $CellContext`ringA, $CellContext`rb = $CellContext`ringB, \
$CellContext`qa = $CellContext`quaA, $CellContext`qb = $CellContext`quaB, \
$CellContext`qc = $CellContext`quaC, $CellContext`qra = \
$CellContext`quaRingA, $CellContext`qrb = $CellContext`quaRingB, \
$CellContext`qrc = $CellContext`quaRingC, $CellContext`i = \
$CellContext`imageSize}, 
         Switch[$CellContext`g, "Random", 
          Column[{
            Row[{
              Style[
              "Boundary function is random value with range ", FontSize -> 18,
                FontFamily -> "Arial Hebrew Scholar"], 
              Style[0, FontSize -> 18], 
              Style[
              " to ", FontSize -> 18, FontFamily -> "Arial Hebrew Scholar"], 
              Style[$CellContext`r, FontSize -> 18]}], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> "CMYKColors", 
             PlotStyle -> Opacity[0.5], ImageSize -> $CellContext`i, 
             SphericalRegion -> True, Filling -> Bottom, PlotRange -> All, 
             ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center], "Sin", 
          Column[{
            Row[{
              Style[
              "Boundary function: ", FontSize -> 18, FontFamily -> 
               "Arial Hebrew Scholar"], 
              Style[
               StringJoin["\!\(\*Cell[\"sin(\", \"InlineMath\"]\)", 
                ToString[$CellContext`a], 
                "\!\(\*Cell[\"x + \", \"InlineMath\"]\)", 
                ToString[$CellContext`b], 
                "\!\(\*Cell[\"y)\", \"InlineMath\"]\)"], FontSize -> 18]}], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> "BrightBands", 
             PlotStyle -> Opacity[0.5], ImageSize -> $CellContext`i, 
             SphericalRegion -> True, Filling -> Bottom, PlotRange -> All, 
             ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center], "Quadratic", 
          Column[{
            Row[{
              Style[
              "Boundary function: ", FontSize -> 18, FontFamily -> 
               "Arial Hebrew Scholar"], 
              Style[
               StringJoin[
                ToString[$CellContext`qa], 
                "\!\(\*Cell[TextData[{\nCell[BoxData[FormBox[\n\
SuperscriptBox[\"x\", \"2\"], TraditionalForm]], \"InlineMath\"],\n\" + \"\n\
}], \"InlineMath\"]\)", 
                ToString[$CellContext`qb], 
                "\!\(\*Cell[TextData[{\nCell[BoxData[FormBox[\n\
SuperscriptBox[\"y\", \"2\"], TraditionalForm]], \"InlineMath\"],\n\" + \"\n\
}], \"InlineMath\"]\)", 
                ToString[$CellContext`qc]], FontSize -> 18]}], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> 
             "LightTemperatureMap", PlotStyle -> Opacity[0.5], 
             ImageSize -> $CellContext`i, SphericalRegion -> True, Filling -> 
             Bottom, PlotRange -> All, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 18, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 18]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center]]], $CellContext`plotGraph[
         Pattern[$CellContext`inMatrix, 
          Blank[]], 
         Pattern[$CellContext`flatness, 
          Blank[]], 
         Pattern[$CellContext`graphType, 
          Blank[]], 
         Pattern[$CellContext`randomVal, 
          Blank[]], 
         Pattern[$CellContext`a, 
          Blank[]], 
         Pattern[$CellContext`b, 
          Blank[]], 
         Pattern[$CellContext`quaA, 
          Blank[]], 
         Pattern[$CellContext`quaB, 
          Blank[]], 
         Pattern[$CellContext`quaC, 
          Blank[]], 
         Pattern[$CellContext`imageSize, 
          Blank[]]] := 
       Block[{$CellContext`m = 
          N[$CellContext`inMatrix], $CellContext`f = $CellContext`flatness, \
$CellContext`h = Part[
            Dimensions[$CellContext`inMatrix], 1], $CellContext`l = Part[
            Dimensions[$CellContext`inMatrix], 
            2], $CellContext`g = $CellContext`graphType, $CellContext`r = \
$CellContext`randomVal, $CellContext`qa = $CellContext`quaA, $CellContext`qb = \
$CellContext`quaB, $CellContext`qc = $CellContext`quaC, $CellContext`i = \
$CellContext`imageSize}, 
         Switch[$CellContext`g, "Random", 
          Column[{
            Row[{
              Style[
              "Boundary function is random value with range ", FontSize -> 12,
                FontFamily -> "Arial Hebrew Scholar"], 
              Style[0, FontSize -> 12], 
              Style[
              " to ", FontSize -> 12, FontFamily -> "Arial Hebrew Scholar"], 
              Style[$CellContext`r, FontSize -> 12]}], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> "CMYKColors", 
             PlotStyle -> Opacity[0.5], ImageSize -> $CellContext`i, 
             SphericalRegion -> True, Filling -> Bottom, PlotRange -> All, 
             ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 12, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 12]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center], "Sin", 
          Column[{
            Row[{
              Style[
              "Boundary function: ", FontSize -> 12, FontFamily -> 
               "Arial Hebrew Scholar"], 
              Style[
               StringJoin["\!\(\*Cell[\"sin(\", \"InlineMath\"]\)", 
                ToString[$CellContext`a], 
                "\!\(\*Cell[\"x + \", \"InlineMath\"]\)", 
                ToString[$CellContext`b], 
                "\!\(\*Cell[\"y)\", \"InlineMath\"]\)"], FontSize -> 12]}], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> "BrightBands", 
             PlotStyle -> Opacity[0.5], ImageSize -> $CellContext`i, 
             SphericalRegion -> True, Filling -> Bottom, PlotRange -> All, 
             ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 12, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 12]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center], "Quadratic", 
          Column[{
            Row[{
              Style[
              "Boundary function: ", FontSize -> 12, FontFamily -> 
               "Arial Hebrew Scholar"], 
              Style[
               StringJoin[
                ToString[$CellContext`qa], 
                "\!\(\*Cell[TextData[{\nCell[BoxData[FormBox[\n\
SuperscriptBox[\"x\", \"2\"], TraditionalForm]], \"InlineMath\"],\n\" + \"\n\
}], \"InlineMath\"]\)", 
                ToString[$CellContext`qb], 
                "\!\(\*Cell[TextData[{\nCell[BoxData[FormBox[\n\
SuperscriptBox[\"y\", \"2\"], TraditionalForm]], \"InlineMath\"],\n\" + \"\n\
}], \"InlineMath\"]\)", 
                ToString[$CellContext`qc]], FontSize -> 12]}], 
            ListPlot3D[$CellContext`m, Mesh -> {
               Min[$CellContext`l, 15], 
               Min[$CellContext`h, 15]}, ColorFunction -> 
             "LightTemperatureMap", PlotStyle -> Opacity[0.5], 
             ImageSize -> $CellContext`i, SphericalRegion -> True, Filling -> 
             Bottom, PlotRange -> All, ImagePadding -> 10, PlotLabel -> Row[{
                Style[
                "Energy: ", Italic, FontSize -> 12, FontFamily -> 
                 "Arial Hebrew Scholar"], 
                Style[$CellContext`f, FontSize -> 12]}], PerformanceGoal -> 
             "Speed"]}, Alignment -> Center]]]}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.752113032142177*^9, 3.752113073922657*^9, {3.752113178825705*^9, 
   3.7521131953953114`*^9}, 3.7521132283525753`*^9, 3.752113287326953*^9, 
   3.752113362289463*^9, 3.7521134694865303`*^9, 3.752113521066895*^9, 
   3.752113592740529*^9, 3.752113693391862*^9, {3.75211380732228*^9, 
   3.752113835011447*^9}, 3.752113961318267*^9, 3.752114068818183*^9, 
   3.752114113282743*^9, {3.7521141602482233`*^9, 3.752114238784658*^9}, 
   3.752114270060871*^9, 3.752114334079224*^9, 3.7521144887695303`*^9, {
   3.752114519619133*^9, 3.752114591508582*^9}, 3.752114675160684*^9, 
   3.7521147181875277`*^9, {3.752114782473978*^9, 3.752114847411373*^9}, 
   3.752114932123932*^9, 3.752115233458789*^9, 3.752115267378518*^9, 
   3.75211538230131*^9, 3.752115618669505*^9, {3.752115679155107*^9, 
   3.752115723619749*^9}, {3.752115777986595*^9, 3.75211589327115*^9}, 
   3.752116047669064*^9, {3.7521725548878593`*^9, 3.752172604441298*^9}, 
   3.752172737558168*^9, {3.752172778239118*^9, 3.752172791558468*^9}},
 CellLabel->"Out[16]=",
 CellID->178688869,ExpressionUUID->"6480a5c8-3b57-4399-bc2a-8b04127f1e46"]
}, {2}]],

Cell[BoxData[""], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.752116869580323*^9, 3.7521168738250237`*^9}},
 CellID->1675318850,ExpressionUUID->"e641808a-6555-4ee4-a382-d4690a4fd148"],

Cell[BoxData[""], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.752116819387162*^9, 3.7521168237420893`*^9}},
 CellID->1111114527,ExpressionUUID->"5b862f96-1dae-4384-94a1-1b8f48cfb91d"],

Cell[BoxData[""], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.752116748892621*^9, 3.75211677617493*^9}},
 CellID->870547683,ExpressionUUID->"75f34492-7df6-419e-848e-8f39cf32408c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection",ExpressionUUID->"499bd43a-0913-4dd4-bd0f-fc22e1436df5"],

Cell[TextData[{
 "A function defined on discrete points in two dimension and satisfies mean \
value property in the interior that is: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"f", 
      RowBox[{"(", 
       RowBox[{"x", ",", "y"}], ")"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"f", 
       RowBox[{"(", 
        RowBox[{"x", ",", 
         RowBox[{"y", "+", "1"}]}], ")"}]}], " ", "+", " ", 
      RowBox[{"f", 
       RowBox[{"(", 
        RowBox[{"x", ",", 
         RowBox[{"y", "\[Minus]", "1"}]}], ")"}]}], " ", "+", " ", 
      RowBox[{"f", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "+", "1"}], ",", "y"}], ")"}]}], " ", "+", " ", 
      RowBox[{"f", "(", 
       RowBox[{
        RowBox[{"x", " ", "\[Minus]", " ", "1"}], ",", " ", "y"}], ")"}]}]}], 
    ","}], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm",ExpressionUUID->
  "fc23799a-1010-4708-b3c9-41207023f31f"],
 " is called discrete harmonic function."
}], "ManipulateCaption",
 CellChangeTimes->{
  3.751158924148934*^9, {3.7511591408178062`*^9, 3.751159148582176*^9}, {
   3.751159181645287*^9, 3.751159198299776*^9}, {3.751159229123558*^9, 
   3.7511592317910013`*^9}, {3.75115936901935*^9, 
   3.751159466344631*^9}},ExpressionUUID->"9da8be27-dfab-4553-bc23-\
83437f1cd9ef"],

Cell["\<\
Discrete harmonic function holds two properties: 1) Maximum Property: \
Discrete harmonic function attains its max and min at boundary.2) Uniqueness \
Property: Given function values on the boundary, the corresponding harmonic \
function is unique.\
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.751158924148934*^9, {3.7511591408178062`*^9, 3.751159148582176*^9}, {
   3.751159181645287*^9, 3.751159198299776*^9}, {3.751159229123558*^9, 
   3.7511592317910013`*^9}, {3.75115936901935*^9, 3.751159497216075*^9}},
 CellID->130159530,ExpressionUUID->"1ac8d8a4-c0d7-4eb1-968a-6906a5016465"],

Cell[TextData[{
 "I use Dirichlet's relaxation process to generate discrete harmonic \
function. Going through each lattice point inside D and calculate its value \
as the mean of the surrounding points: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"D", 
     RowBox[{"(", 
      RowBox[{"x", ",", " ", "y"}], ")"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"D", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", "+", " ", "1"}], ",", " ", "y"}], ")"}]}], " ", "+",
      " ", 
     RowBox[{"D", 
      RowBox[{"(", 
       RowBox[{"x", ",", " ", 
        RowBox[{"y", " ", "+", " ", "1"}]}], ")"}]}], " ", "+", " ", 
     RowBox[{"D", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", "\[Minus]", " ", "1"}], ",", " ", "y"}], ")"}]}], 
     " ", "+", " ", 
     RowBox[{"D", 
      RowBox[{"(", 
       RowBox[{"x", ",", " ", 
        RowBox[{"y", " ", "\[Minus]", " ", "1"}]}], ")"}], " "}]}]}], 
   TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm",ExpressionUUID->
  "2d3ce3d1-0bed-4db7-ac7c-d9a6ae6750e8"],
 "\nAfter one iteration, our function is more nearly the harmonic function \
than the function we start with."
}], "ManipulateCaption",
 CellChangeTimes->{
  3.751158924148934*^9, {3.7511591408178062`*^9, 3.751159148582176*^9}, {
   3.751159181645287*^9, 3.751159198299776*^9}, {3.751159229123558*^9, 
   3.7511592317910013`*^9}, {3.75115936901935*^9, 3.751159547143325*^9}, {
   3.751159932221978*^9, 3.751159961756997*^9}},
 CellID->1393866021,ExpressionUUID->"fe17e479-3108-46f4-aaec-cad6e0445048"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection",ExpressionUUID->"b1d7a709-ba55-45dd-918e-5b3b93854d9f"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`a$$ = 0.3, $CellContext`b$$ = 
  0.4, $CellContext`currentState$$ = 20, $CellContext`graphType$$ = 
  "Sin", $CellContext`imageSize$$ = 400, $CellContext`isRing$$ = 
  False, $CellContext`matrixHeight$$ = 13, $CellContext`matrixLength$$ = 
  13, $CellContext`quadraA$$ = 4, $CellContext`quadraB$$ = 
  0, $CellContext`quadraC$$ = 0.4, $CellContext`quaRingA$$ = 
  0.2, $CellContext`quaRingB$$ = 0.4, $CellContext`quaRingC$$ = 
  0.4, $CellContext`randomValRing$$ = 50, $CellContext`randomVal$$ = 
  25, $CellContext`ringA$$ = 0.2, $CellContext`ringB$$ = 
  0.4, $CellContext`ringXIndex$$ = 5, $CellContext`ringXLength$$ = 
  6, $CellContext`ringYIndex$$ = 5, $CellContext`ringYLength$$ = 
  6, $CellContext`seed$$ = 1}, 
  TagBox[GridBox[{
     {
      TemplateBox[{
       StyleBox[
        "\"Boundary function: \"", FontSize -> 12, FontFamily -> 
         "Arial Hebrew Scholar", StripOnInput -> False],StyleBox[
        "\"\\!\\(\\*Cell[\\\"sin(\\\", \
\\\"InlineMath\\\"]\\)0.3\\!\\(\\*Cell[\\\"x + \\\", \
\\\"InlineMath\\\"]\\)0.4\\!\\(\\*Cell[\\\"y)\\\", \\\"InlineMath\\\"]\\)\"", 
         FontSize -> 12, StripOnInput -> False]},
       "RowDefault"]},
     {
      Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
pVvIxF1pAWg3zfy1YvVdekxT/vYU7aZWE6Vg+1NOfv3qehntprGzFVt92LLy
kokf2k0j35KtGr1y0dLAQLSb2pxnFexm+vxmU6YFEH+z+hHnRzQ/94iP3+CT
ccUnWjjGoN3g8+8j3lPmG/Nxr2a8rFitkgTrxx4paDfNvGjJuvm1s+84JB3t
plk3fsS33VenrujHx70aP7FitvqronMr+P2CWp2Pkq3YFOlw2DoA4xCNH7Zi
lmOOOFk8PYhxiKY9P9bXU5//nmLoh3GIZtyVbNP7wyF9O3JoN42dWrFX+4PK
m470Qrtp2mPNDBtFlj7pcJ+sb0qWeN2g83ybSLSbxp9bsV+9NlV9GhCPdtOM
rzX7PGRoi/3D09BuuM65PHTt9zoD7aaZ161YhmzZppML+P3CGnXHlMy+y1XD
3a/y0G591AZtxQzeRbpdvMbHb5r22LDzDzuOqxOWjHbTtKs1q7W6bvHL8Ai0
m6Y9P+LJ6T2T7BOj0W6a9tiwjp660Uv9/DF+04zjDz03ctwqdw7E+E3THhvW
5rXrrYEBN8jz1IYZjje/v297NNpN4yetmcGeOt305clot07qL7Zh6d96KJPm
83GvZr1qzWx9HCq2LspBu8Fn4wiHgRP38PsF+LS433Bn5qICtJtmvrdmLZ1X
N1n7hvc3TXvasiuKVpn1zpeqtOepLXs+Y8iAa5+y0W6a9rRl3/r9dXe6biHa
TdMeWxY5MaB29y/xaDfNOLZh3XaUhFrE3kO7adrTlm1qeWtp0NYpGPfeUM9T
WzbKfF6XE8tT0G6a72nDyuWVp6b6ZKHd0tWfbVm+tb9ppksp2k3zfLRlARmW
t0NLitBus9SO0oaN699BL8iF3y9o1rG2zP6QqW+H46VoN/j8OfjLr7v8CvAc
HOz3Rj/NfYB7GZ6bAw/+eP034+78vTxwt65uDb2+ldT4SRPk+5IHBlv2zcfz
KdyXNGhxr8OVJDx/AW696eH3RSVRKtg/A791OfVNwJRsvKcGvuD021WD3hbg
PTVwx5VHT4x+WYT31MBT9sVtubcpR6XdXxnr0m/v5ugnfB4C+MXFWUN07LNL
iB1kLI95r5k5vRw5yIetrNz97VwFsY+MndGdMfDAtQLkIL/TojIrZGAOsZuM
vQlycbh1ir/3B/m9OrtGmpWkEHvK2I2+w7eNbx2PHOQ/9w5oszw/mthZxp52
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
        "], {{
          {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.5], EdgeForm[
           None], Specularity[
            GrayLevel[1], 3], 
           StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
               "]], 
              Polygon3DBox[CompressedData["
1:eJw1mHn811MWxu+5QzFhyFhLKibGPoxKQkwjmtIiRUrKTiqpJGlTWpGSMS20
iJJKSUPW0EKSMvpViOz7vs1Yn/fvufPH87rnfO/n+/l87rnnPOe5nzrderbt
kVNKzSKl7TS+r7GmxlHC2Zo4QjhJ9lJhpex/CP1l7yZ007UXy58q+1BhtPx9
5P9J9iRhgeyxwsuyzxKe0/zuwp2ypwmXaG6I/Bqyf6+xq/w3NVZPfgbPukC4
Q/ZBwjDNHSb/BNkPCs/Krq7fxsu+VZgnfxDvILuqxi7yTxTayF8rbJG9Tb//
UfYgoaX8Q4XjZS8WnpH9Z+E42QuF5bJvEjbK7sA99N8G8pvzbOEl2fWF0/mv
sE72X4XT+K/wAu8qtMIWNss+VxhDrISOshsLLYmNUCG7kdBC9irhP7wLMSf2
wsuyu+odqsj+TGhOfOTvIPtLoYX8g4UGsu8XnpR9jNBM9lPCGtl7CQfInsA1
so8STpb9iLA6e8/Ze/bkat37dPm9Zf9BOF/+W8KesgcLZ2juXfn7yh4htJO/
p1BH9i3Cfdm/Mcee9NS1O8vfvcR/uuwa2XvLHj8ge6jwpOy/s8e6vlp2rpEP
d8reRdijPH+G7A7CSNk3Cu1l12QPZf9LWCR7x+x3Zw1TyYdwrIn5Y7JrZecu
Ofyg7J7C3bJnCRRGd2Gm7CPJMV3fWv4w2XsJV8h/VehGrWh8U3PfyR4qDBFa
ya8q7Cy7uzBZ9pnCcNk3CG1lvy5sKPWxSfe4MTtXyJkn5NdlD2XfI/ybvSPH
ZN8rPCx7q67Zpdy/GbEV9pc9jv/I7lLq+mPhNPlvyN+1xIO97V7+/4PQRn4T
3pHcFl6T/bbm905eM2vvVf7/I+8s/32NFwvVhM6aOyV7LdT8VtlNs2uHGiI+
I7NrkZp8RtfXo4bIFfYD7hCOlT1XeDR7TayNGJ6n66+QP4PcES7PzkFygZy4
jNqWX1v2TcRIdif9Br99IJyaXfPkHjl4Yfgarr1ZmCP7VWFdcgw2an5y+H32
07g4u4aoJWr8Kf32v3CuPsGel/x6THZT4fFwTVFbp7CecE1Smw2pvzDHwDWN
yP8wx8K1TahJuDKcewdq7KO56Rr/Iv8gjf2ya4baOVi4Xb8tC/NFI42rNPdw
mJ8aaFyRfU/4q2F51rfEjVhSM/LvDfP9Idwrm2Ph2hOFpeGaorYOoWbDHA/X
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

               "]], Polygon3DBox[CompressedData["
1:eJwtlnmYjmUUxr/nYSZrKDuRPaI0togo2bskZEmrsg1j7ENIQoOypDEVaTEm
Y5mxRGlkNyambBkVoRlaFNlapKTffZ3nj991n/u87/cuzznPeb9q/eO7D/eR
SGQWRMHrLhKZDxVIlkOHoQ3hPuI9HO8CmcR5cIV4MhSBAfh7OK8V+jk+G6bj
T+HPE4+EaHgW/z1cJE6AQvAc/m7ObYFm4XfDNHwsDIHyUJZjQ9Hf0FKwkng2
+ipchbtgG7nVaDoshCSoRK4iOgKtDJWIP+T6jeBtYr18nM6BCvh4tDs8CoXg
b87rIdX7wQ7iteg6OAQHoRW5rug8dBe6ExoRP4gmomfRCLxPPB6dENauMOST
O+NtHZugD3HsAPF+mIn/B98YdhFvQDdqHSAWbiL3F+d1Q2+HGuQy8OkwGn+b
IJeGX64a4M/hi2vd8FW0zsQ/wXXidzk+hngsVNU10VXkV8IofBRcIp4AL8Cb
el7ow3mnVVs4RrxXPQDNOdZR90KvaU20NsTr0Y+gDHEJdDmaBiugLfQml8+1
8mABvoogt0JrBIuIC6oX9J4wBpLxv5IvAjPxlWEqcQz5NmgOfh/M8HZvPcOd
3tZ2Knra2VouIh5GHAcFdE1ycTAcFmofQGeO5eKPwGv4dvA4uR/wZ+ANvIef
iQfBYEjCn+ecm9V/xNPRGdBavYZ+xznHYT6+PjQhtx3fAT5Rf5O7V32A7wSb
iE/CL8RDoSA8jZ/CeS9CPW/r/RKag+6DFsSdnD1zPvo7v3mLeCDxILif+BH0
GPl+kEv8ALme6Cn8Sc0H/HVnvZ1DvF17AhoQN1N9OWcHvKz+h8e03/Vs8I2e
V32rd8dXhCnEbbTn0BP4J+Go1hKuEb/DsRHEI2GWagtlvc2AgWgdaEC8Seuk
vvS2j9qS+wL9EvbDRWczJN3bfNOcK6U9jr7C7xJhGf4WKOpsHs6GVPxlZ7Nh
jbeZotlSQjXW+qrPYCm+JETr2qojPKX76zmgJXEXdI633r3A8XEwFjqH30Zx
fJrmJqSof/A3iN8jHkecoJpBTVhKvqGOOZtTV4njYQQsDnv1MvEkmAgP46tB
Lc5P0bvCx+op6EDuMP6Q3tlbX6o/S4f9OcDbXjgXrq/7dPS2foU5nqSeh2fw
RTSzwnvp/ZaE2VRd8w//AWz0tvdLklusPRexe8xRb0I54tLoYDRR9YFbve2d
58OsLk+crBkUsbqobsWceeX7e5thVckt0WyDDWEmVnZ2T917fZg5vZztZ+3r
U7oXOD0PvqrWkLgYuf/Cek4KdUlRLaAGcV10vLfeKEA8l3PmqKe91U41LO7t
W/CEZgb09XZd1bkfOppjo6Cot5ncJ8ySs8SxMATa4//gnDqQio/Ruoa92sNZ
HVXPE/h4/HAo7G0/9URX4VfCHd6+mxO9fWPLOKuj6ql9MkQ1gGhvs6Krt3na
mtwW/FbNVPwVZ9/YtcTJqoFmqeYrbCaXhq6AM86+p+pPPZOe7Yazb8RX3maU
ZpXz9j39Fj2sY9BLsyT0179coze6XLMUanm71wQd0zrANq0TbHPW97XRdfi1
6s0wN+qT+wzdAlu9zXbNxyNoLhz1NteaktugvoUs/I/OnkG9rVqpZvr/0tzZ
DNIsyg57qz25g+ghvQvUDH2yCf0UMtVT+HZwgHgPmh1Q3CxcQ/tS34puzv4b
6D/CcW+zVzO4cZh5+s/wp2qrZ/HWm+rRSJg/X2se6l6hJqpN7bAWmp1r0Ayo
6+3/zmT0krP/ghnEC9Qjzv7rtUQzufRm2OvtO9hX99Cshzx8Kn4ZVPf2TAne
vk0xzmqhmuwM61LP2RprrbWPLjibA6uJ56LzIAt2Q1NvazYL/R+1v1TO
               "]]}],
            
            Lighting->"Neutral"]}, {}, {}, {}, {}, 
          {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtl3kYllMaxr/6znNaaEEholU1aWjDpDQ0aZLEZJksEwqjTCVlXPbLNk12
BmMpIkuLdkto0yJkKZWkRVqUEonKGr/7ut8/ftfznPOe7/3e95xnud8GfQb1
HFixVCp1qlAqlbETo1SaBH1TqfQ0E6PhGXgWnofn4EkYBU9BG9a2gqG5VBrH
+EUYD9X4fVXoy/wLjMfCGDiatUfBEOYnMJ4EE2ECa8dBZ67NY7wA5kMTxkfA
lax/l/F7sAgaM9cQBvGbJYyXwkewGtbCGngCRsIImAxTYQrU5zcNoQHcAbfC
Vdz/FuxN8An3fRT7MLTF/4zffA7r4CHmHkh+302MN8MXcClzfeAw1j+FHQHH
4/fGng+H4K9n3UbYADNgFsyEOlw/VGvgHrgzeX9uxF4Hg/ErYatAZbhaz5u8
J9di/w0fcf8StiJUgOdhNPyZ+erYmlADhsN/YC3zf4Bm4fu3wB4Z3oeZXD8n
fJ4X4l8MF8FlcDn8E/rBFdA/+QwG63ngaGgFLeE0OB16QBfoCn+FFnAU/BH+
BQNhAPSC8+BcmAOzks+0Es90cXifq+C/x/yX+FXxL2P+K/yE/4/wGZXxFyTH
wJu6Z/j8Z+C/nhw/FVkzF38eHAOt9W7MNcE2g6Z6RsZTwznxG7/5RfvB3L1c
ux/ugz3MfQ+9mf8Z+wPcob3l2pHQHOYyNxvOZM0b2OnQE78R146AxvACjIUx
kKGsPWfNO6x9C87Bn8jcZJgEU2AaTIUVXF8GF7Dmy+Rn+LGI/9eLGFsFn8AK
rj8GT8DjMAqeUa5DOzgWxvP8W1i7tex93gbby97nPVzfpVjgv/7HugfgUvyd
zH1b5PurzJ2C303vgp/CcaH/3l08237M1YQrWF8ZWym8/8q1vWXHcAXFdLGX
+2I7Kp6Ta0QXOBna8Zu3sW+F860DtJevOMG+G86Bk+BEqBJ+x+PgQPxaMJC1
HWEp/ofQCX8ldjncC3dDH+aqY6tBf501v+9QPM8XsFHvrzqBXZe8ZzrfzkXM
b4HNyXGyDbs1OZZ+wLYtnqcF46rhXNsn7Pdjbg3j1cn15v3k+Fc8fI3dXsTJ
AO0lnI+/hLnFyiP8j7HLkmPj8nC+9FJcMfd2ckz2DefX2fgLk2uTYiZnr1G9
ahmOe8X8MYpjxgOwJzPulLwn3ZPPXWfaNFyXrlHO4U8v1ndXjCqXw7Xydq4P
U63Q+zDeBs3Ddfhm1YhwvRpW1Jy7i2f4O5wFB3H9a55vB3wD9Zirm3w+tWC/
IlYPxtZO3m+d03ewE05Kjqsp3OdM7BnJ8XAC9vjk/T81nEvqIzXCtUxnqpp+
Q/Gcx7FuDuNZ4dzsphyAPzE/HzsXzoC/wULu8xpreob7anfsaTAH/yydA3yA
3zr7v15i3K2oO5/jv4ztEe7DbxQ1TT22B2u+Y34HnK7Ywu6C+cm1bppqSXJt
VP2ZnVxj1Ye7KPdYuwpeZe6V5P6v/R1anOP0Yl59ebFisewYaxc+U9WVq3Xu
ynn8RXBJ0c+bs+5F/DGK73A91Puu0r2L3tiENc/hj1bPx39avRTuCtdD3fNa
/OtgH+UIa/oV8XxhuP4rdhszHqkzg0Oz++J/8Q/Hv6/I5f7h59c+63e9i97x
SDhODoRPw9rgNuVPuG6/pl4frsk6x0bc6zHG/4fPWHd9UTt3JP+X+vb9YS2k
Z14Rri3SGDX57RDsYP0P3KacYM0t4Z6yS3Uye3+0rzWyc3k57J/9X9qPWtn1
Z1Py+a2G8fi3K3fC/egA1tyMvbHgJtifNQ+Hc0T+9/BQWC9UZ/3Aop5E9r5q
n+4M76X2tHL2+apubEi+v3JxWLhX/lr22uHhHjc0XN+1z+uLOilNsjJ5H6Td
tBdXhX/7UzjOlR+/hPNFOfRbcmyoVys+RoV7zd6wblEOlcOxJK2heHpWuYff
INwXpDsOCNcx6RTV/cUwMjluRsBflFdhbdCmyMOXw5pnQrg+tIfJYZ2gGvJk
uO7rfaeFa6Puo7gfCxcoh8L3Um7/mhyr0qTjwjmi/vtBWOMNgSXh3iSNNyNc
o/QuirlHw8/weLjuKX4WhLWoNHzdcP2RjluafKbSy4PCmmE5fJicR9LXV4Z1
wkooZWunXuH6NS+cC2+GNa3epU647km7LQvr1evhp+S8kLZVH/1YZ5DcjxfB
g/jvhGu69rNeuI9LY6qXL4S78GeG6/zZybV1dvj+DbJjVdqjdnZvlX4+KDvm
lU9fJceptIT6ynbNKbfC3xrKkZbZPV2adt/svqk+8k1YP+uZK4Z1iHTsmnCd
lH5WLV4f1mAdw/1LeurHcA/QfMNsvbQbmmZroQjX5T2wG07M1uHSYPWzNZX0
c6vsONH+tMnWS9LJbbP7qfT23uR4Uz96KblPqXfXy9Zj0tjNsvWVdPW68PeF
9rZ99jdUI+ga7hfSmMdm66LairXsd1EvOyxbC0nTbgp/Hz0CnbO/HaRd1de3
wGblT7gfSdt2zf7uk3ZVPJ0bjr1TsvdRe1UtW8OoL9fJ1kj6RqubrXOkyTeG
v78UP4dk1xfl2qnZ36Gtw/1vJ3yrvCpiTJpha/i7TDm+NllT6XtqQ3GW6q8d
sr83pY0/Ta5Xip/fAerb/gM=
              "],
              VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtmHn8llMah395n/OIEBmVJJKdNgpZitJiLUSWyVSYZsbSMPalMZhhbGMZ
w9jKvo1t7ETSNkkYS9bSYhlrlmSp5Lrmvv+4Ps8577Od55z7/n7v83YcNWb/
41Zqamoa2KypqeI4qzQ1bQxj6PweDoPDYTj8EnbgXC/4J+1r4U14C95tNDXN
gVU516LE9SPgNZgN33DudY47wi6wM+wEfbm2H9xB+07YA/aGvWBPGAIHwP6w
H2wDPaEHbOuzuLc3jKd9E7wM/4XPed8i2I52L8cN28MoOAqOhCP8Pu6dwvEh
rn0YXqA9Cz6i/TG8S3sOFGgOy2A5bAgdvQ7+B22gHbwPH8La8AHMg/mwGrSE
BbAQvsjxHcD7l8EQmE5/ApS6qWkf+s/Q/olrV8CmsBl8C99Bd1gCP8CPsG6+
v+K+usR8FY4rQQO2pt/ZBabdrMT87gvPw0yYzLumwDDO/QRD4UX6/+HcDL+B
9kK4PZ/fld+6wVAYBgfBgfAivORzuXYmvEL7VdfENsyl/Z5zlvP7OM96Ep4o
EW+u1VZ8/zUl1uxteMd5y/c/S3sSPED7Qbg5v2cLftsSpsI078t4dH2beN7B
HF+nvzLH5iXGe0gV3zuR472cuw+eqyIeZtOezPGZKs6/lOPvTXs32BX6wGDu
f8zYcyzQnf628JCxWmJ8m/D+cSXieaLvgEl+C1zO71fCFSXm83t+Wwo/wg9g
Uq7H/Se7lvm+H2HvEvdPgxmuUyPiZzF8B0vg21yvTbn/lhL5czn8Ha6EK4xj
fu8Ix9A+Fp6Ep6p4nut3MecuhUtKzO/j8ATcyrnb4NEqvn9Sxs9GqR8+vxPH
U2Et3n8Sx8r84ZoVxjUsb4R+vMPxjSq+90SuW5Prjy9x/myOa9M/i2OrKuam
Lf0TSszRqvy2euZXC1gLfpH55/WzuOblRqyf8fxmI95nfLwF63BN28zf1nBm
iXz9lHOfGZ/wFDwJT0CDc3Xqgd/THjaADrB+FeM1/7/i2q8b8bxWjPe0EuPb
xPWAq6vQzwvhErgYLoKRnDsCRvkc7r/b2IR/wT3ew++deN7VJfTzhxz/91Xo
2wR4Gu7m3nsaoVeOb2nGa2vubQPnlBjvw/AI3Mi14+B62uPsww1V6JPxcAfn
7oQe9LeH7aAnnMC5k+BE+AMM5LdBcB/t+6tYf/Xzg0Z8zy20b4fbjCE4mvPH
Gn8l5quL2lLie71/K7WrxPX6Q1va68LBmb/r0W4Pv6rCbzrQ3gB+TXs0nAN/
hvPgXPgL/BUugPNhc7WjxPfqHzcav8zPdfoS/avgmirW6x/GGr+vUcI/fP7p
cJZxA2cYe5xrDcfTXsdxwG9gdIl46svv/WH3Kp7fyviGfarQ45PhNOcNToGx
8CfjCv4Ia5pPcHTm62vmTiP0Sn3bgLEfCYs59w18Dl8Yd1X4x4cZo60yRz4x
1jN+9TO9ZcM6tEiPmZ850SJzTG9cuY611CON1aH0329EzKqdh6XWOqbhrg3M
pX14zsUwrv+kEXOidw6vI/fMwU65Bv1yjpqlhqqdepZa6fd1qUIzZ0Av+tNK
5I/rr7+vX2J9p+ojnH+uxPpb3+xI//kS+qdX7FeHFqgJesPoOrzsoJy7dvQ3
zjn82mfXoYVb5dyZU+vnHF7A/RfCRsZZaudIzm9ehYbqpRX9eY3wVL1lWHqt
GjUnc0ZtUWPUvrMzN8wRte/81EY1UG+4KK/XI8zt1nmN13aAy3L9Ti+xHr5/
RIk64w2Ou9YR+zdX4QV6wt9oX1ZFLnXIuTRn5tDevY5cvKuKZ4xIL7JmMXb7
8NvEEjHsfLTLMTpWveDU1LZRmfuH8tuX+X3WbqvWkSvWcO+lJyxPz7CWXL2O
+bCmVFvPzNwanWvrGltLWFOsQX9MxuMh6S0+b17GY3P6R5Xwzv2cJ/q/y/U4
sESutuQ4MONxF873hpdK6KPaeEDer2cOoL8N58erg1V40Zl11ILmm14ynePT
6Sm/rSKGjV09YPXM25aZb2qT7/RdapTes6iKWtT4UNuXZe4af9bGq5Twgh6Z
Tz9l7hu/1t6rlfACa3C9Qw9pl/mnN39m3lUx33rVmDq0Tw1U23rUMb9q3Hz6
C+EB2gtSu/vX4VVquNq9Wx1ar4Zf1wjP0WtuaEStMCtz0ZrhQcdDf4k5n1rX
3TWpQvPcW2xRx17EPYZa3LmOWl5NtpY8hv5xuf4Pw6PqDv1HjC/YuQ7vva6K
2sAa9ZXMP2sza+IpWaM5lsFc/22OyfHvVaIWcP2sfQZn/Hv9Ytr7Gs8cvyqx
v9Hv+phnJfxRP9/decq56Quvl5gja8uu9K8vUWNOci3pP1PCX/Q/6+02JfxB
b+jH+cklPMJa0Bp8ZsbjIr2F85+aIyW8byD96SXy2Vrx4ypqryVZG1mTzUk9
1FvOqKMWnp35aE2+MPXL/Zf1wo4cdyrhx+4X25XwK/eL+qd1Q8+MjQHwTokY
uRT2pD+zhN58wnFv/YXjRyX2Gtaw1q7uaYy1QXXUBsactfYe9P9dRc29bh36
a91sHLt3eDvj2fq5Wx3xMCDzWq9Q30Zn/FhbtM25Vb/0rkYd86GHmduPlfCj
8fntzsFNmZ/uXfV0vVy/Mr/V02Mzfs+jvU4d+bae468jXq0BvK99HX7xZea5
57zG+41pY8GYMP7vytj2mxy/Md6T9oScr1sz/rvnmB27e88FqS9rVrEXm5t6
sgp0qSOfHioRh9fkGl6b+e/cOsfqjR7n3v/NjB/r8dXq0HP3fK9kPg+pYy/k
+rh3eDzza2ojaoFV6tgLWhNYi6oP6qP732EZ89Z6+vEDtLeuo9YbWcVcOWfq
mx7rux2De2s9pWt+i/WEOWVtPCHz44VG7CWfzfx/tRG1eLf0P/XYsTlG97Tm
lXunsXXsbdQrY92YH5F6VNdRD7mnVkfMfTVAv1T/3OvrF9bSy1ML1ATjWb30
v46z6ti7G+8daV9Vol4bm1qkJhnv6q17AfcE1h/nltASNeXtErrQL9vWPmqE
Y3OM5q81m16mv7xWwrf7ZFut0cPVinnpT2qGtfH/a+Qq6hu1bnHm8rslcrt/
3uO97VMT1AL1ydgyxu4rodn9UiPVxlPryG1z/NJcB/fu1pP+N9Osjv8mrJfc
q68o8d+I/qY/67fujdVj9+JLS/w3or/ph/6foLdaG6+ROeB/R7ukdp1Sx387
+qn+qP4OSs1Wq0+r47+vHVLLTq5DG9SICenr7jU6l6iX3HO4N9os9cQ9kt61
pfVT5rB7hy1zftxDWNtaw/tfTZfUALVg5cxRa9mpOXf3p1aqmdYHL5f4r2el
1J/BVfyXcm+JvaL/qdwNm9eRT4dW8d+A+mq9bz09P/X0/RK6rHcsSm+aXaLW
tl7Rj/VTv2WLfIfv2jPv1c/V9K+qqJmtlf0m/wuxnrd+th7+GRzTlIk=
              "],
              VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtlnmYT2UUx3/N773XljH2RmQpY18m+2Tf4sk6hkQhjL0Zxpa1bJVKKCql
mqJE2bMlZISMdWxDSR4RY6yN7UHp833O/ePzfM973ve+977LOeeW7ZscnxQR
CoVmggf7XCiUxw+FDqB7wqFQN+yd2GF0N7oZXzz2r9g+mo6m4euCXRVWMclq
aIz/UfR7WAY9aC9Fv4VD6mPsYfQQz76AfQ67CHoMzcF3A3IxtiK+PGgd/IOw
09AIdDxsYMxauIQvmvZl9CHt3r69tzJaBRrg/y6YS98iu66zed+A4vgfg/s8
O4O2gwq0bzMmFmpAS9p/4D+tZ2hXQ2+gpfHnoPmhH/aP6E96H3MthSVwl7Ft
YBz9d9BbcBIy4SvGHkePwSLsa+hlaAZNtHf4bupd0BpaQiPmqYSO0D7QfxQ7
B1rAq/j+Qa/DEciAT7XP6EFYj70Rvua7FsGXsJD2JfouQEOIg/n4zqOjma8e
WhvaYtdCR6Fz6T+HfVVnDWPxXUGz4U/P9mopY06hv0MWNIAxjLuI/q016s6g
KehUxv6G3Qq7BjoSfRvfGewraEna13TnoA92LBSkbyjaFt8G7KLY0z07w7us
Kwv/z9jR2hfsbehW6Im9HZ2AToQS2H3Rneg0dDqUwv4FSsLrtHegaZ4FSQRU
w1cFKsEtKMe7J0IR7AGKD8aUhrdo70Z36Rn8kegQtDn+tdj7oCzMob0XTYcE
7C3aA3QUFMeuxDP50MFoHL7lWovWB6tZ60pYDsn0x9A3HE2h7wD2Gs/i8mXa
K9EVOmtn+6U9usNzvbBrQzH6ktBOusfYw3Sn0VfQzWhhOEpfAdoTIJNnX0Sj
8NdCC6HtnJ3LKfQ0ZDHmApyHMoqBYI8KovMZHw8P4F/4hjGLYQH2Pfrrw8fY
H+l8sT/Ue9DacFf3Aj7B9wzaEO7Da7T/QqNgMvYk6Ab/wUPlJOZfBgl8Qz/a
XdH+6F7Gf6bvQJvCQsVOsH/VdS+hmbP8VkpxFsR8XnQOvg76ZrgPqcz/OQzG
zseYrjpr2unQn/YHtBPReehNxSMaho7Yi5ULPPum3IzpjO7kuR2KV62BMW0g
FfsL2OjZ2em86vh2Vrlgv7P8vYvnEulz2Huc5ept+ProTng2NjF4l/Zirmfn
pLMp69t3DsDOiw4J1tMdmvqWw07AZOatrPzhW845rFjHVwF9N9gv7dETaF/f
8rby93pYBz/AUPrz05eMRqI94QT+4bRvobchkzl7aI2e9SehR/B11jqd1aaN
upP4n8ce5Nm36hwOOltDhrOasz9s6xmrHKW6AmOwRys3KI+pRsB47HEQC8/x
3GSdm7M8qO897iwGjobt20fCSXz3aKdgj/Cszig3PY5/GjoVXlIudBZ7Nxk7
BV8x7GxnNewBvjeD+aJo90JP4zsVtpjZ5Oxe6H50Cu7fOnxb8bVXHAZrK6g9
R8/hPxvcofL4ZqEVGR+j+oVdE18BtJWzHKWa0sG3HK5cvgQqenbuOutJzmqQ
akB73+qY6lmqs/rWHF8LmOLsjgzEzu1ZHX9a83kWq4VpD0Ov821Xw1Yr2vlW
s1S7Fii/KsbxFdV+0k6G8sF90x0b7SznKX6fQmei5fCVcXaWhfANRC8x/8Ww
1cbG+JrAOGf39Qx6VjWY/iuQHdTujow5i66ib4WzPKg4WxzEa3tn+b4BvnVa
n/Kbs5yzxVncK/4TPKuNrRn3rL7R2f9ED9iOfUT/Qrqvikv63/MsVmZrb+iv
jrahXROd5axGltD+BzUxjL7jWU2Jo70JTcI3zFmcKKY0v96TEeTYJ327j7qX
0VAEuy6+SdDFWS2YHcSt4kDxkEtx5Nn/nv7xGjmrS/OCfKGcq9wbqRrp2b+T
/pdmOKv1ynUx6PtodXxVndXa+r7VJ9Wp3kHtrufbf6P+H7s726sQvkdgDWtY
Bf8DZFthdA==
              "],
              VertexColors->None]}]}, 
          {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
           GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwt1PVXVEEAxfH1DYoFdouK3d2dKCgGItjooqKiYIDd3d3/n2JgIxigfu+Z
+8Pn7Jy3u2/evLl3ctPVRVVJKpXaggxsCoyxFZtxFi/xCufQD3dxD/1xFAdR
hRo8xzLk4QWqfU3jQziPfBTgAp5iERbjGeb4msZzPXc7tPczLMc8zMcKTMEs
zMZUDMEojMZQzMA4jMdMjMFDPMJYjEAOBmAkJuA+HmCi15qLwV7zY0zDdDzB
Al/TeKH/OwzDfQ/NNQmTPWc39EFfdMd6bEAJinETXdAVt3AbPdATd3AVO5HG
NfRCFrLRG5U4jCM4gA9JvKfuVc+4gs/ruIG9qOPaO7zHW5RzbTf2YBfKPKfm
2oGAkziFjBCzsg3bQ8zM5RAzpOxcQamvabwRA70mrWUQLmIdinAJK31N41VY
E2JmlJW16BRiJpXFzuiA0ziDjl7bPuz3GvVda7Txbz6yxs/4gk/4h1/4rRL4
v5V+d7rHcfzgu0acYPydz1o+j6GBcRO+4ht+4k8S/6PfNnuu13jjObU36kyN
90jZX4KlIXZAXVJn1BV1qtbPrGfVnPl+R3o3Bc5Oqd9tifeizHulPVFXlFFl
U50p9DvVu1wdYlfVKXUpz3uhTBZ7T5SFCmdFmVD2yp2NtJ+90PfSGpRVZVJZ
VGZbOTPKShJiF9RZdVWdUHfVeXVdHVZ31El1UR3KcWaUFXVUXVTH1W11Ut1W
Z9VVdVzd0hmls0kdU1ZbeHd/k5hZnQ06A9R9nRHqmjqpLqpzWc6YspXtvW/y
3jY6K9rjZmemxRlSdjSHzgadOTprdEYoG8pMgzOiLNS5a8qEspmJts6ozjpl
WlnWmaduqsP17mim32ni//wHFSmWbA==
             "],
             VertexColors->None]]}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L0uQ2EAx+HTqu+1VmJjZWVlVSOqHwgi2jSVaEknCXdAjBLuoE3HJtwB
sRSt1sd1eN7o8PT3H3rOe/LO5ovrhVgURVvsEXbaz6Qe6CFT9rnO6KVeMW/f
6qLe6wPLdlNX9VGfSNmvuqltvuL/Z73xHs7ig206dMnwSZYefXLhWfJ888MO
v+yGdzhjQ1/0mTW7pSva0DpL9p0u6I1eM2df6LRWtUIy3IVOaC2c55v7jNtn
4X+MccooJ5QZocQwBY5JcMRQuE/2iQ/u+g+jZS1r
            "],
            VertexColors->None]}, 
          {GrayLevel[0.2], 
           Line3DBox[{349, 231, 348, 582, 514, 660, 350, 583, 478, 351, 584, 
            515, 661, 352, 585, 479, 353, 586, 516, 662, 354, 587, 480, 355, 
            588, 517, 663, 356, 589, 481, 357},
            VertexColors->None], 
           Line3DBox[{361, 590, 482, 359, 591, 246, 363, 592, 483, 365, 594, 
            595, 484, 367, 596, 485, 369, 598, 599, 486, 371, 600, 487, 373, 
            602, 603, 488, 375, 604, 489, 377},
            VertexColors->None], 
           Line3DBox[{376, 672, 525, 374, 671, 524, 601, 372, 670, 523, 370, 
            669, 522, 597, 368, 668, 521, 366, 667, 520, 593, 364, 666, 519, 
            362, 665, 245, 358, 664, 518, 360},
            VertexColors->None], 
           Line3DBox[{379, 526, 673, 378, 605, 527, 674, 380, 260, 381, 606, 
            528, 675, 382, 607, 490, 383, 608, 529, 676, 384, 609, 491, 385, 
            610, 530, 677, 386, 611, 492, 387},
            VertexColors->None], 
           Line3DBox[{391, 612, 493, 389, 613, 533, 681, 393, 614, 494, 395, 
            615, 275, 397, 616, 495, 399, 618, 619, 496, 401, 620, 497, 403, 
            622, 623, 498, 405, 624, 499, 407},
            VertexColors->None], 
           Line3DBox[{406, 688, 539, 404, 687, 538, 621, 402, 686, 537, 400, 
            685, 536, 617, 398, 684, 535, 396, 683, 274, 394, 682, 534, 392, 
            680, 679, 532, 388, 678, 531, 390},
            VertexColors->None], 
           Line3DBox[{409, 540, 689, 408, 625, 541, 690, 410, 542, 691, 411, 
            626, 543, 692, 412, 289, 413, 627, 544, 693, 414, 628, 500, 415, 
            629, 545, 694, 416, 630, 501, 417},
            VertexColors->None], 
           Line3DBox[{421, 631, 502, 419, 632, 548, 698, 423, 633, 503, 425, 
            634, 551, 702, 427, 635, 504, 429, 636, 304, 431, 637, 505, 433, 
            639, 640, 506, 435, 641, 507, 437},
            VertexColors->None], 
           Line3DBox[{436, 707, 555, 434, 706, 554, 638, 432, 705, 553, 430, 
            704, 303, 428, 703, 552, 426, 701, 700, 550, 424, 699, 549, 422, 
            697, 696, 547, 418, 695, 546, 420},
            VertexColors->None], 
           Line3DBox[{439, 556, 708, 438, 642, 557, 709, 440, 558, 710, 441, 
            643, 559, 711, 442, 560, 712, 443, 644, 561, 713, 444, 318, 445, 
            645, 562, 714, 446, 646, 508, 447},
            VertexColors->None], 
           Line3DBox[{451, 647, 509, 449, 648, 565, 718, 453, 649, 510, 455, 
            650, 568, 722, 457, 651, 511, 459, 652, 571, 726, 461, 653, 512, 
            463, 654, 333, 465, 655, 513, 467},
            VertexColors->None], 
           Line3DBox[{466, 729, 573, 464, 728, 332, 462, 727, 572, 460, 725, 
            724, 570, 458, 723, 569, 456, 721, 720, 567, 454, 719, 566, 452, 
            717, 716, 564, 448, 715, 563, 450},
            VertexColors->None], 
           Line3DBox[{469, 574, 730, 468, 656, 575, 731, 470, 576, 732, 471, 
            657, 577, 733, 472, 578, 734, 473, 658, 579, 735, 474, 580, 736, 
            475, 659, 581, 737, 476, 347, 477},
            VertexColors->None]}, 
          {GrayLevel[0.2], 
           Line3DBox[{101, 231, 102, 664, 244, 590, 127, 673, 257, 140, 678, 
            270, 612, 153, 689, 283, 166, 695, 296, 631, 179, 708, 309, 192, 
            715, 322, 647, 205, 730, 335, 218},
            VertexColors->None], 
           Line3DBox[{103, 232, 582, 105, 245, 591, 128, 258, 605, 141, 679, 
            271, 613, 154, 284, 625, 167, 696, 297, 632, 180, 310, 642, 193, 
            716, 323, 648, 206, 336, 656, 219},
            VertexColors->None], 
           Line3DBox[{107, 234, 583, 108, 666, 247, 592, 130, 260, 143, 682, 
            273, 614, 156, 691, 286, 169, 699, 299, 633, 182, 710, 312, 195, 
            719, 325, 649, 208, 732, 338, 221},
            VertexColors->None], 
           Line3DBox[{109, 235, 584, 111, 248, 593, 594, 131, 261, 606, 144, 
            274, 615, 157, 287, 626, 170, 700, 300, 634, 183, 313, 643, 196, 
            720, 326, 650, 209, 339, 657, 222},
            VertexColors->None], 
           Line3DBox[{113, 237, 585, 114, 668, 250, 596, 133, 263, 607, 146, 
            684, 276, 616, 159, 289, 172, 703, 302, 635, 185, 712, 315, 198, 
            723, 328, 651, 211, 734, 341, 224},
            VertexColors->None], 
           Line3DBox[{115, 238, 586, 117, 251, 597, 598, 134, 264, 608, 147, 
            277, 617, 618, 160, 290, 627, 173, 303, 636, 186, 316, 644, 199, 
            724, 329, 652, 212, 342, 658, 225},
            VertexColors->None], 
           Line3DBox[{119, 240, 587, 120, 670, 253, 600, 136, 266, 609, 149, 
            686, 279, 620, 162, 292, 628, 175, 705, 305, 637, 188, 318, 201, 
            727, 331, 653, 214, 736, 344, 227},
            VertexColors->None], 
           Line3DBox[{121, 241, 588, 123, 254, 601, 602, 137, 267, 610, 150, 
            280, 621, 622, 163, 293, 629, 176, 306, 638, 639, 189, 319, 645, 
            202, 332, 654, 215, 345, 659, 228},
            VertexColors->None], 
           Line3DBox[{220, 337, 731, 207, 324, 718, 717, 194, 311, 709, 181, 
            298, 698, 697, 168, 285, 690, 155, 272, 681, 680, 142, 259, 674, 
            129, 246, 665, 106, 233, 660, 104},
            VertexColors->None], 
           Line3DBox[{223, 340, 733, 210, 327, 722, 721, 197, 314, 711, 184, 
            301, 702, 701, 171, 288, 692, 158, 275, 683, 145, 262, 675, 132, 
            595, 249, 667, 112, 236, 661, 110},
            VertexColors->None], 
           Line3DBox[{226, 343, 735, 213, 330, 726, 725, 200, 317, 713, 187, 
            304, 704, 174, 291, 693, 161, 619, 278, 685, 148, 265, 676, 135, 
            599, 252, 669, 118, 239, 662, 116},
            VertexColors->None], 
           Line3DBox[{229, 346, 737, 216, 333, 728, 203, 320, 714, 190, 640, 
            307, 706, 177, 294, 694, 164, 623, 281, 687, 151, 268, 677, 138, 
            603, 255, 671, 124, 242, 663, 122},
            VertexColors->None], 
           Line3DBox[{230, 347, 217, 655, 334, 729, 204, 646, 321, 191, 641, 
            308, 707, 178, 630, 295, 165, 624, 282, 688, 152, 611, 269, 139, 
            604, 256, 672, 126, 589, 243, 125},
            VertexColors->None]}, {}, {}}},
        VertexColors->CompressedData["
1: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
vDC1M9OcwuC5QCPP3Ww06XufO6dZiXU7YgX3rSU6Yl1I6qalbGjWJogWZRfj
7cog/00sJmKs18xRKaBQYZcmkEl4ycDZxukyM2goDlbveupLwTvgYpYSvQb+
3nIbT7aVY/cV9dBuPgquT0/eKP6VDX099XsruKpxJ/Fe+VkZUq9/n5nfE1MA
yTPv75fWlkLkysnZ4qQ+1j2fJWN0KBPBrjnuhyIZeJV1Q1Lmf3RByVKf10z1
WjDmK68NI3miT/qcqOj7YnxuWMDyOFYPe/X9B+cbUOj121AmV1f25+8Gshqf
hcYT/RF14wr3m1SU9j6zUiT8b2BK1QKVRRRiFdeecsqno3Wo7FfoVhLvF1Y/
6AQbClN3p9wRKkexaqJXkiyF8CWiFQPz2cjPXyGSpvwJgrufHO7WasfwVsrq
6zcKx2tZDTxidFjJ75Zp9GfAQ2zuBDsSv3tPDq9qO96IkvUHJB5101DC25Fb
eIvsQ9GbXRc86uDBRrHmoXqsWut1sFqfQpzREp9XZWWYyZUddnVBC944Wg5+
cyE6niV/zUukGqulLzQstmuCsvQ2B1tSb7XjlgYvu1qJitXflb9uqYfZxdGf
iXoknnl3mXq/KMNdJe6PCTVMvP2+0cU0n8KmlAdvluQ3w/K1LTNwMYXceQss
PHnJIh7UCa1NLIB2Wv/BG0cpeLxTSz7oyoaHx7dinifVYH5icS32oVC9+pTW
3FA2nj9VMC8yq8PiK0Km8aY0CHoZhZb7Ex4VGRzEd7QWmVyphjsrGaiwFmyb
m0LhlxTu9/Q0Ym5G7FQ1Xyapmxvn8WdTcNTbN7NyQzM8yqdvkSP1/2W+4S/P
iyR+zR6mfrpSgzCjiPS4YMKTdO/wdhN/7hHybZvr2Yj0YgO+mDU0aIUbmOte
oRCzX+/ViHQt0a3V1zXt2jDsvuU6L5Pkiepl7FZDGhihXOKDfG2Il9SaJ9ZM
4bGjf4HH71YInTYP7rvBxO7jh4xqyHoOeRedENZrxl3zZjEhoh8vToh7m+nH
Ri62nN8sXIuyZ1HmdKIr3KPOiGc1srH58qNZG782w1NaWuJ8fCP21stDZj+F
FxLrBl/RKrDlQbbJTh0ajr/Vd26+SmHt666fE0xqYXb8i2yTUCXiYl4d5ppH
eNDQ4lSepbkY3LDUYE0F0Y+7I3fQdChU2u530NYpg8pF5eAQsyZcK4oQYBwi
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
FQMZZP01YR/7ij424cRaS4kfpTTUxxfElQeTejHktfiedh2ei5/LkTNmgpkv
6e6bQfzX27bPprYJj3YZBfwkuthuwGO/I9kXdolJn7tWVoJrzp6FM7Yw8eNt
ROYtcn0R79/ir943If/baqVbS+iwf1ilvS+cgkGloJofrQ5Tv93jjj7VhEuS
t87UEx3HteBkvSPRcfsFcwctC6oQFbQJflIURBWct4iqFGC/46yHh3414ot4
NbP+IAVT0fxU+eWVULknt97mWhOkS/qfJNtTqND131P+vBJJnjp+X040Y/0M
cw9NUsdf7PKZ4X2uCrERpTURlxpR8V1nXQvRiU9Lck/uf1+BzID1Kbcv0/F0
T+yAzEMKky/+ZjaG1SPBTOXT9k/tMOG5NTN1mKwzcMbNbcF0sF5tUfuoRuHX
7jq7dRvZWFEldkvTtwxS533j+WIoZO2qmbUqj+hiiZ7YdUqcvL3k8Zx7Skvp
GHgzOcV9w0sU2ewXfjiJAerezrgLERxeVyZiK6wlzwKdvljY5SonDz821PR9
pVqG8ON3h6gJFEJmcHcdmPgBM/IVfLp+1YHZ4uNrQvj8Jec09wlOZbjYYDzA
95CBw4aXejOSiD+Tw5zCQhpRo5+lVWpA9P+yGf0vtrPxfHPzwE6JCniFrz/B
bCJ6wZYv/MIsCj3DPOv9JegoKNC/bUwn+qwixcox73/6lJyL49uEatG1+UGZ
AZ2jH20t+zM8jFrw/fcBeNhz8rPCGrfuA92VcBbs3GW1nmNfPz//iqQvA2kv
fltE1HD80P5M+pNfdgm0T69a5jNEdO4qc/7EunRISPpgyoEa/N516ozUOgq7
4qqm7F32Cc02flKqj6qQ7GSXq0Hqi0eJ5bSGH/m4G53+yngXAzuSdK7lPSd5
svD1ufKZjTCZ1ivnRfZ7Z7H6BnGy31M8bfUqD5ZiodiCUEuiB9q2cs15c4qN
Zfufrkm9UI3XXhmbXt0iOvRJwzbRBDaEYC6xUaUBOzVTT/nfJXGv+TthXQob
D5e9FNr8uQHyJRsmuPZROBI6dcrmNYTHmW+VTj7DqXdidCfzj1tIPSrOjbNf
koXo80EaoS0NeLhb3TvgVRV2WLT01hKee3uHhr3dzXZIFzXO23+dhcZKfdtL
JA8vSn5vkihUipd7j2Q+0Oa8lwr3gEvxGuWA5/mT/tOJHrq714BRm4Wpc45d
mb+agvUKacUXi8h758kyWMfF6ffOHN660X42DXsv5Gby3z76B9/lfuZjynE6
xFcWyav1v+b0z1haC8vuY+DY63Mb06dlj3ke+f+K/+E5f53//Zf93/NY/mX/
d3/Uv+z/nn/yL/u/zyP/y/7vuTH/sv/7PPK/7P+e7/Ev+7/PL//L/u85NmPZ
j3V+eSz7sebhjGU/1nnnsezHmqszlv1Y553Hsh9rPs+YzzvG+eix7P+vc37+
f42P1b/3f5079K94+7t/71/2f8/zGct+rL61sezHmiP0r/X83c/2/9b+Havf
bCz7seYC/Ws9f/eb/cv+73k7Y9mP1Wc1lv1Yc37Gsh+r/2os+7Hm5/zref/u
jxrLfqy5PWPZj9UfNZb9WPNw/rX+v/uC/pn//5rDM5b9WP1CY9mPNd/mX+v5
u5/nX/Z/zy0Zy36sfp6x7MeaV/Ov9fzdx/Iv+7/n5Px/lf/H6p8Zy/7/Ot9m
rHOv/9d5OGPZj3V+diz7sebqjGU/1nnbsezHms8zlv1Y53b/FT9/z/n55/76
65zvv+z/nhf0L/u/zwv/v7V//2v/9/nif9n/Pb/oX/Z/91/9y/7vuU//sv/7
HPSY9WWMOUv/rF9/zU0ay36suUZj2Y81d2gs+7HmAo1lP9b8n7Hsxzp3P5b9
WOfxx7If69z9P+vpX+fr/7m//jpH/y/7v8/FjGU/1nmNf13/73MKY9b3Mfrn
x7Ifq2/8X+v5u595LPux+nj/df2/+0v/v6q/4/g4Po6P4+P4OD6Oj+Pj+Dg+
jo/j4/g4Po6P4+P4OD6Oj+Pj+Dg+jo/j4/g4Po6P4+P4OD6Oj+Pj+Dg+jo/j
4/g4Po6P4+P4OD6Oj+Pj+Dg+jo/j4/g4Po6P4+P4OD6Oj+Pj+Dg+jo/j4/g4
Po6P4+P4OD6Oj+P//4L/P4z6Axw=
         "],
        VertexNormals->CompressedData["
1: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
DofD4XA4HA6Hw+H/W38N1GTdVw==
         "]],
       Axes->True,
       AxesLabel->{None, None, None},
       BoxRatios->{1, 1, 0.4},
       DisplayFunction->Identity,
       FaceGridsStyle->Automatic,
       ImagePadding->10,
       ImageSize->400,
       Lighting->"Neutral",
       Method->{"DefaultBoundaryStyle" -> Directive[
           GrayLevel[0.3]], "RotationControl" -> "Globe"},
       PlotLabel->FormBox[
         TemplateBox[{
           StyleBox[
           "\"Energy: \"", Italic, FontSize -> 12, FontFamily -> 
            "Arial Hebrew Scholar", StripOnInput -> False], 
           StyleBox[
           "7.243239288937814`", FontSize -> 12, StripOnInput -> False]}, 
          "RowDefault"], TraditionalForm],
       PlotRange->{{1., 13.}, {1., 13.}, {-0.9999232575641008, 
        0.9995736030415051}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}},
       SphericalRegion->True,
       Ticks->{Automatic, Automatic, Automatic},
       ViewAngle->0.42769327351158737`,
       ViewPoint->{-2.554333689789217, 0.7696216127329105, 2.081600820143525},
       
       ViewVertical->{0., 0., 1.}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.752116788596426*^9},
 CellLabel->"Out[11]=",
 CellID->1537816196,ExpressionUUID->"aa80c88a-fe6e-4152-bb7a-266ffd011f43"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection",ExpressionUUID->"bd8e3ac3-cbfc-44d1-806e-00755048364b"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`a$$ = 0.3, $CellContext`b$$ = 
  0.4, $CellContext`currentState$$ = 3, $CellContext`graphType$$ = 
  "Random", $CellContext`imageSize$$ = 400, $CellContext`isRing$$ = 
  False, $CellContext`matrixHeight$$ = 13, $CellContext`matrixLength$$ = 
  13, $CellContext`quadraA$$ = 4, $CellContext`quadraB$$ = 
  0, $CellContext`quadraC$$ = 0.4, $CellContext`quaRingA$$ = 
  0.2, $CellContext`quaRingB$$ = 0.4, $CellContext`quaRingC$$ = 
  0.4, $CellContext`randomValRing$$ = 50, $CellContext`randomVal$$ = 
  25, $CellContext`ringA$$ = 0.2, $CellContext`ringB$$ = 
  0.4, $CellContext`ringXIndex$$ = 5, $CellContext`ringXLength$$ = 
  6, $CellContext`ringYIndex$$ = 5, $CellContext`ringYLength$$ = 
  6, $CellContext`seed$$ = 1}, 
  TagBox[GridBox[{
     {
      TemplateBox[{
       StyleBox[
        "\"Boundary function is random value with range \"", FontSize -> 12, 
         FontFamily -> "Arial Hebrew Scholar", StripOnInput -> False],
        StyleBox["0", FontSize -> 12, StripOnInput -> False],StyleBox[
        "\" to \"", FontSize -> 12, FontFamily -> "Arial Hebrew Scholar", 
         StripOnInput -> False],StyleBox[
        "25", FontSize -> 12, StripOnInput -> False]},
       "RowDefault"]},
     {
      Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNnXdAFMnSwFHJkhZJy5IW1gU5AyrGU6fNmNOJCiZQMeecA4pZEBUzKiqK
OSCIiKgY0BPjiSiICAhIUAkmFPy8Xar7bc3Me9/9s+/9LGq7q6p7qsPUyv2n
DxxXW0tLa5aullYdLfjvEwefbd21ztiWScgJ1X+1CfCfbtf+fp1oQ/4a/O9/
xpSvGyULcMhvSH6p/qtH+SfTHnNlDy1q5KWUe9junXkwyYBEqfQ7UL5hl93A
+8s9a/TIKU9uaGIfH9Wopj0Kys89tbkUn2dGVOoHuzI9DrU7/dPIs+b/u1M+
7dwQrUbRTC/075P3aqezXrq0v/C5R6fjrrNNLGh/gV/J2TftqI+M9hd4woXv
qzv9aUz7C7zX+AGGOcf1aX+Bm5cU2iybKqf9BR72R8dAjysy2l/gI68Xa217
IaH9Bb5Pf/+yJHMn2l/gDVeuW+gd4kL7C/148OzOxZt3zakccPfMgtbhU0zp
/4fPf1Ycs3556gcH/QWeviDwTKCylIP+Al9enXgwdmYhB/0FbjR36Lw+3p85
6C/wo0HRmzIflHPQX+BlU9+ueehRykF/gTd13qITd6E27S/wDOOd71uWKml/
ob0K1xXtXjjb0P4Cv2r8+dnYYD3698BXhweciev+gf49fJpUHJzcwyyb9hf4
nYzFve1HvaT9Bd7h5zybGJss2l/gjZ1LLbd1fUP7S/mKsHO1N2fQ/gJPsChb
sb5Mi/YXeIhT6AqZRzPkXyn5VOLiEtmrktP0r5Rwmxv3muldC/lXStrlxXbu
+z0X+VdKQuTDZ3m7pyL/SonTxvfBmyPvI/9KyfDhpv2uzUtG/pWSZTlr82o5
JSP/SknEkiUxf5+8g/wrJdG7wgLKfWoh/0rJh4zU+weSmtP+wvcnT8lpuMXe
mvoXeOKfTgN3FBrR/gL39gu86uOTR/sLvM3VC8eiGj+l/QWeJgnacML3Gv0+
+Bz4wKr/guQI2l/gD79P9b2+Mpz2F/i7XuPH3J62l/YX+Mjejqs79YD5153N
i+c3x424bo/iWU6cJo26kvXABcWznCyK9T69IqIeimc5uZLb53NGRSGKZzkZ
4z876nrqPyie5WS0n6JiXZ3rKJ7lhHv6xseq/y4Uz3LSvbvNtQ3HNqN4lpPG
hg37J/0dhOJZTia2Ofz9cU4ppxnPcnJusfxXYlM2fkFfy7ObOugHNkXzs4KE
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
Ry2TUrstDs9fGJ5fizw5X5mt/YeM2s0sycMoyeMnN7dT3lqrECdqNzfV/6jg
6lwMyGtUZU7t1lP177XIqtbLZ9+3qEvtdko1Liq5gxcHtAjIZHn4rX/VG5Vz
Yak+r/cFN6N2sw36t6FaJDz93YGDp12o3fqqPr9z9Z63nWJ4R0HtNuHfbgWV
ctcWn7ZcWSWhdnte3u5RebtfnNXU/EUz78uo3T4s/LfDX7lO/arntZvvQe2m
Mk+QAQmTmYwvcTOidoPPwsrMe53HmVG7weeijQZ5Xeb/ovNbs3+7laRPHG5I
p1wcytY1HR792yBtUujRznakvz61W8W/zXxUl3z31ov2O1vOacabPsl/fC1b
+0QtajeVeg9tUqzf/58+Oxyo3dT2rEsKYopGLorVpXZ7orKDHrEiniEHzkqo
3TJVf1eHdDEt/Nq1HbPbdlXDDEneicN95Jv1qN0O/RsmC3WJz40niuQgZ2o3
lbtszEnHif7zZgQzu6nbaUYyRssuvdyrT+1VoLJ/PZJlbCvlNrHnKXz6Dt0T
FqZTSp8LanlTMql3bLHXyRI6v6nM2a4ekceFtJJteoPmNwkZuXRvRsuu7+j8
pvpINyHjMz7WyxlfTuc3tT3MiZZvswv6097R+U3tLzPSaMrROy0Si+n8ph5H
JqR1M115R3+2Xjigso85WWozYIeXYxWd35Sqfzcj/V0b5v9RzfJedbusiaGB
g9Y1f2Y3dRxaki965QZRg9h6QRUm5b/jpSjO2LBFIbWbysxG1uRYWFq3Cf1y
qN3gMzWqc0Bc+zfUbvBp8tGrXqMdj9Hz1IosvF2rbYeUp9RuKvVJFsTa7nzv
1gNeU7up/WtDBrQ7cK/v6MfUbup+W5EV11umeV1JpXaTqgLFgnjmz2id3ZKt
F9Txb028c94a1X/O1gvqecmS7G83v53XC5b3qttjR/ZXS/7M9tKjdlP715aM
7To4yO4LWy+omtXDgbzqtfZWwqX31G4qM/vZEd1FM69JRmZQu6m+dqEtGZAu
H5po+IzaTRWG+faktSTPvGIIzt9kxKPDx8MnhyZSu61ROdKWGAdv2BIUeJva
Te1fe+KdN3Go9aJz1G7qOJeRESMDcuNXXaN2U7dXSg4XjO5/yvchtZv67+xJ
bkOfaUeyC6jdHqvGhYwYZkpftfY0o3a7qTKcnJSOy/W5mmVB7aYev07kstuN
GYu2s/WCSs0jOUlb7F20+Ognaje1nZ2I57kfyr6SN9RuanlHMiA8YuMCrcfU
bipzhsvJn+tzp90vuonizen3+uWAWVqrC9Ru8LluwnaLU26HqN3gs7LvNon7
xW3Ubmp/OZED1ZeGtBsQRu2mHheOpItfVOTwx1eo3dTzhpxknxzZu3cKy3vV
ceJExpbt+2f2Apb3qtTFuJCrg626X2rlSO2mjkNnci0mcVlJDxNqN3V7fufD
554cqOVeQe2m9rsLmTliVY9O/bKp3dR2cibTFd+XVHdm6wV1exTE47nFx+nW
t9H85kI8XJ6lDY1kdlPHszM53mfk+vFt2HpB7V8FqV3W+FJU5HpqN/gMfRib
mfb3Gmo39bh2Jl38owcd2H2C2m2RqmMuZJe1ZdvLqSzvba8yqDMxnf1h1peA
cpp/qNujJKGHX9a74qOgdlO3qz6J+ly4eegNS2o3dXtcidfX2N6Nc1jeq26P
klg1ie+u+/UrtZvaj/XJ6rM+W+Kl2dRu6vb8zpv+jjn7dl4Zep4qyYDx4ypH
tcqmdlPHSX3ybdviMd/K2Lq+qeqLlWTcgDXHirw/Urup56v6pKqW4ftpX95S
u8HnIudxJsdyEqjd4NPyr+6pG7NLqd3U470+GeCj8FhygcWbuj0NSJb9+V3r
dzVF49SN2Bw5JdmTwvI3dXsaEG/99uO7f7KjdlO3x40khr+KbnbKmT4P1H50
JU4dw5+trWJ5iLo9DciXInnCqyFsXjupGqduRFF6I7tPqjkdn+rvcSWbXr44
+/KMDh2fGarPBqTpzW2/3B6x/U/18/F33jrCKzvZiu1/+qsCxZXE9wpNbb6v
nNpNPY81ILnR8fKZB7Kp3eBz2YNDVgP7sv1ZsF/70CMnch+zfWfgBUZGyQ8U
den+HfA9S/vuGWvP9rloHi0ZejPwmRndfwGetz1iw2tjdg8BeEkDqTIorQFd
PwPP2F4dvHclW2cCHxLRtWPwSrauAz5079keloksvwe+qOR0VPc8Z9RfHeL+
6+2c6QXsXB7i4pxH7/qO+mbIDjokOPRkkVmkIeUg71Pst8iqnTmyjw7poffT
vzyQ7duC/N7GR7bevqGF7KZDSkIOvgv4S49ykI838FhWKq3gNO2pQ2zqvwq9
saIOtTPIHyGtbF7u/shp2lmHXE02OhU32ZbaH+SHB8l/Bt9m+zsg/4f26E3N
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
CWm5RBF5qEcusoOETJlf9ODJ5CJOMx4kRHt5Zuq9ge9RvyRkQ1j/CRUxhZxm
PEjIzJ5PHykfsjgD/2TbVkwsTNdmeUwNjzyUafBwQxXNG4BffvSxd2xkFjpP
tCGF1t97aHVJpf2ieowOH7v26wHtF/xd4ai+I1vlplMO8m9Wn/w+wuEh9S/w
/loLY/bmpVA7AD9+sEqxquoBtQPovz/nkLb1zyzKQf5xzteWBvmp1L/A5e6V
sxJbsfsAwO1T/lg4OJflZ9C/1S4PNredx+7FAbdoOGr8xPwn6F6ljFy/12zN
gIKr6P6kjLQZ9rhZwd54dH9SRvpaS3pvtruD7knKyKzdEzdssDalfgQ7vU2o
Y3fgT3bfD/igm3pzz91g4xr4d7+y8x5rmB+BX0gbVmm95gn1I3C9ZMfdn8+z
81/go9flbmnzYDftF/Apt7RenowNof2Cv7tcojfTdO0VykH+9mufLUPL2X1R
4DOWnjjqfIudmwP/YFH0cMYRc9pf+P4nb8706+BsRv0C/HBcynxF5lMUhy5k
XqBs0Zo+O1D8uJAhv4br9dgWRb8XeNnp6JG975dxmvOqkthvPLr1y15nNK8q
SY7Bj/WjnlugeVVJurWK71jdk82rwLsetngS2oTdnwQ+KTlh0EqLQk5zPlQS
X4uNFw3dCtC8pyS6U010gluXcJrzm5JkdFh3aH3fD5zmPKYkzSyv331vw+5p
wL/r2m4bZGnIxi09D43PGn3mEtvnBT7fuXxxVIUZnVeBb3+f0EO7mN1nA/vJ
mvT0cf/IxjnwbleWXB89gOWpwE2Od0ic9pHdVwR+aM66ZqGd2PwG/Th5cnGi
sa8p+l4d8mrgqWdvtdi8DHzezLg1dx0lqD06JLNJWXK5qzZ6juuQqklTThb0
N0Ht1CFTs5YfaJNohZ7jOiRy54W/voTXQ+3XIQ/H75h6d6Mleo7rkJlaYzrW
6uGM+iUhW5/Njm7vaIz6JSGvz2+q21/3K6fZfglx9zsy1z86h9Nsp4TcuJax
+0RIIafZHglZNK7IzfsAu98J/h/7NCtwurEpGneWZNz2rVLPZew8GPjRDxzn
P5Wd+0K7ztp79m75ht0rA/mvHsqiqJR3tP3AHe8eOH9kUBodF8CdYjaVd1yZ
RvsFfOuS7cphPuno/okluWV9dPaJSa/QvSZLMmpUe9f4KZVovFuSVXNsM6vG
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
f8+r+XmjWB4i9vzC89v/AXv+ak0=
        "], {{
          {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.5], EdgeForm[
           None], Specularity[
            GrayLevel[1], 3], 
           StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtl3n4V9MaxffeJVyJNEdRogypFClFmqTB0CDckuomJCSVEJIyhKSIyFB0
RUWGW0+6t4RQnjJdkiLzPM8ZP8t6/1jPWmf/zu97znn3u9fau8GQc3ufU1JK
nXNKFeCPADINA/0Qp8FbwXHoAfAm0Bt9KrwFfAuqgUtAd37oS7giPDZ7fGf0
evSx6J7wSWAI+j3Qlb99DBd4LeM90W3Rn8O7gPNAN64/gyvAX8FVwVhwMtd/
wJXhCvxvA/QN4GJ0DbgK4z/CtcBEvT/XPySPncU9O8PbM3YC+Bm9A3xO9nN3
RJ+B3gldCd0TfIPeDu4HfkX/Ax4Iiv4HPj/73XZCnwq243pXuBK8N+PTVaPs
96kI/xP8C/0hGJhdc9X+k+R3OwusYbA73Jrf+ULPB6PAp8lzNQJ8p/cFE8DX
+iYwLvl9dwDjk+tXEYxMUW8wPLkelcGZyd+0KxiTXI8q4NzkGu+musZ76/2v
SP7umvDlyXNeCYxW7zC+F3xdcg1qw5P0Lui68BR9H7oePFV1RO8OX63aofeA
r9Ez0Q3hG0ENdCN4BqiN3he+BTRCN4Pngn3QzeF5YA/0/vBs0ADdFL4L7Ik+
EJ4DGqIPgu8GjdEt4PtUP3QdeLJ6TP0Kvw5WobvBrSheffSh6AWgR3HdtzK2
Ed0ru88HqMjwJ6A/+jfNteYd/afmAT2o+HmfgtfQ3eHD4aOL5/gtrt9G94c7
wW+qX9FHwltAX/RR8DHRH29z/Q76FLgLfBL4XX3Fda/iXnlHaxH9Pfpd9DL0
fupR+EnQAr0f/AQ4AL0PvBIchG4CrwAHag7g58Dhqju8BhymmsJPgVboA+Dj
wU886z2u+6K3oT9A90H/gn4ffT26R3ZjPg0O0TzBg4v74zMwtLhvPte6QVeB
vwCXo1vC28D9MS96t7noVsnftRB9GLoZfB7XdeHvsuvdn/H/Jz9T87sKHBF+
9Xzy98mX1oBroyfVm1dGn1cvXhcanxb9pmctTK6H1u9TWkvcV4frb9Xv8W7z
wQXFffw9GFvciz+Aqehu8J/gGnQX+A9wcczFz2Bi1PlXMCHm7hcwBX0U/Bu4
Ct0R/h28rN7S+8Fng1rob8Dp6Krwl2AEuib8NTgDXR3+CoyPfvgJjEM3gX8E
6+L3WxZ72sl80xvgRPSJ8KtgJroxvDv3jCxew3Xh29RrWq/oUcXrth48W73D
eH10PfQh6PvlU8VeUBtepnWQ3G/q96HqK/mFehauw/hyrY/k/myL7oF+Rj2B
bgMvlk9l+3Mt7hlePLfVwJBiP9oNviM8RHN7frGP7Akvjt/RerkUHCzfgS8p
7rXm6hHQmnselL/Gd90OhnHPLlzXgCtHfWaBEdkeq5yaoufA1YrfSe9wp7wy
O+9qMj6j2Ke03gdk+7lyZFP0dufwj8Fa7+phrrtGDyjz+zC2AayQx0TvT+Zv
R8IHw1eCdugWcHv5CPc8B15EHwe3lw9Ebdugr5MfZftYr+iHjVpj6BP0+4zf
UOyR+rv8bCDjm0GH+M114BH9RrKHqGf7oV/Wt3PdST0BD8rOKfnkMFA9/G1j
3N+Re24q7kX553TQJ9szJ4E26Gbw0OyMk4cPzs5BeelqcHRyb98oL8v23s3x
Xer316KGHcKPB+l/wdPoY+BDi+dD83I6eCD6QV7aOu5ZrXxCt032gTnhIeq3
WZqHZL+amp1fWqfXRz+oL6ZlZ5nW6eTs7JM3jsnOU/n/6OycVQZNAk2SvXRU
di7Lk8dl57KyaTyon5xf07NzVp5wc3ZWysdmZGeuPETzKc9cq29GHwE/llyz
3vD65Nr3hV9SLaJXtQfRPHSAlyavIdXh4fBr1WER2DHW9cxkb+sCr0zu087w
f6N31cMrknu2I7xc3pud6cqaidn7B2XKZdn7CuXvhGwPl5dfGJnYCJ4f/qMc
3D8853E9L75XzxyevRdSnjbN9pxl4F50S7gh/zumeI/SAF4Kt0/OuObxzk+A
iyJbG8Oji/coe8H7xlpYomejuyZ7/hXFtW4KL4gayp8fjfooEzdk72GUrc9G
/ZUj67L9WflyD2iXnDvzYu7k7S9Fn2udvgJOQWd+57Ti/VxVeEnUX7nzUHyL
vmklOD45g0Zm7wO1B3gy+kF5tCjmSFn2Qqxr7a9eyPaZdugHw/vky8+HB8mL
/ldca9VqduwxtJ+/I/YY2sM/FJmrrFlb7C/ytDuL90Xaqz8b2SAfWBXzob67
pfi8obPMq+FpOpssjezTnD4Ta1j1X128D5H/rw9vlUdtyd7nyytuLd536Uwx
DRybXc/FkcXKrIeL9yfKyoWRv8qmR4v3ncrEJcV7COXmPcV7bp137i7p7z2n
zlz/ib5Rv80v3i8pRxYV57sy9LHifFKWvV68B1PNl0evq///HTmlfc7jxdmp
nnygeM+gDLq5+MymM9ojxZmtHJ9VfD7Uuemt4vOkPPmu4j2wzm6bi8+T8s/b
i/eEOovNKd4z65z1RtRKWXNvsReo914p3iMpd14szjWdlRYUZ62y9b7ifFWO
zys+j+lcNrf43Kiz29bic6myclPxWVc5NbP4PKbz6YbiPZj8/LbifJZ3/QV+
spkQ
               "]], Polygon3DBox[CompressedData["
1:eJwtmHv819Mdx8/7oLTYmPsiFYu5hqkkxBISXVWi5VduhWpJWqJ+KaVCurh0
UbpYF0ohl4qSFKWSVDRZm5n7dTObzfZ6/l7nj9fjvM/3fD/fz7m836/X63zr
du/TrndOKbWIlPZUe4A6R6odKzym+DThAsUrhfWKDxbqKr5PmK/4AD33iOJp
wnXqHy+cqXiJsFrxxcJAxfsL3fXdnwvjFN8vLNDYCcJZip8SXlHcQ3hI8THC
MH33TzyT/Bv81m71D1R8h3CJ+jcIjyqeIfRSfIfGD1NcXW039c8W2qr/hvCu
4pOEcxQvFV5VfIhwlOLxwuOKfyWcoXiRsErxYcIvFU8SFipuJLRkrsJmxQ2F
i1irsEnxr4ULeVbYoPgKYbTiu4UuiscIbym+THhNc+wh7K34a6GVxpoKlzAm
bFfcRGileK2wlbmxp8xdeEvxtcJUxcfzDv3WUKGW4p+orWBvhdbMRXhH8bGs
gbUKLyluIJyr+HlhneIKPVdN8RdCS9Ym9FP8M+EqjXVWf1TyO25Wv6+wn+If
WBO5ItyoeF/htxrblxwp5zVDcc3sXOA8H1FcO3vurOEpxZ2EkYrvEjoqrhRe
Unw+4/q9DuqPSD7jPqw1O1fImScV18ieK3OeqrgeOUwuC8+SD+G9ZY+XK66e
PVfmPJm5CzMVn0yOaryN+sMUHyLcoP5OobvizuSmxr5TXCkMFVqrv1PYpLi9
sE3f+an6BykeIjyquI8wW/EsgcJrLwxXfKfQTvFd2WfFmb2o5w8nJxU/LCwm
V8kxxX8QnlPcrdTtp8KF6t8jbFPciZzX2PvlfNgPzvJG5qT4e6Gt+n9V/xfJ
e8re7irj7Adn+Rf1D03eA/biQKGO4nuYg+Jm2WvdLPxR8d/UXivUFLrq2fOy
c52c36X40uy9YE96arw+NaR4PudBrQmnK54nLFP8Z33n4LJ/PMs7efe9wtxs
DiC3yLGr9d2R2bVOza9Wv3n2XrAnnNeV+gy++0hooeB6YbriE1mTxt5Q/+Xk
mn4FbgvzwVFqn8nmwJXJNb5Sn/07nJsvkgMlv5Yrbi6sCNcUtXUe6wnXHLXX
mBoMcwxc04T8DXMS3NSMmizvJxePVttfYzPUnqL+MWoHZOc8uX+s8IA+eyHM
D03UrtXYc+G1NFK7Jvs34a/G5V3/4ByEXuQY+xvmx+P4rWxOhpvPFpaGc5Bc
PI6aC3Mi3FhfGB/m7COo/zCXowFoQVPh6TDHwrVHc4ZhjUFryKnh4ZxnP88N
18Ke4dwjB28P1zS5TE7DPXAIXIJG9A9rDPzyJfuRzTnkB5oxMFyD5BI5NSh8
JvDrmeWsJhf+qqqBMOfBJ58JkzT2VTkPNAftQQPRwnrCaI19U86HGqfWH8qu
h32oi3B9XJOcg+QiOUvufiM8qA+vUP9DxT2opygcqvhjYSLzC9fHEWqXZHMY
XHYWvJbNCXDDXPIn+zzgx33UzsnWB/SshtrZ2RrJeaCBaCcgrqZ2FvWldof6
2zkv1iq8o/hy4c1wPqL39dUu1djgsD/YQ+3M7D3mbKPsfUXJF+bAXK4u+QTH
jQznFPxWq+Ta1LBe1VH7tPpTwnxRO6wXaB76sZ/aefAPnJmsUZ1L/nA+zIm5
XanPxiTn6K1hjoQfWqrdlq2xaO064e1sjUfr17DebE6Cm5jD3JKvcHUzta9r
7GS1T6i/EH5Qv26YX04SppU5o3UnJK8FjeiquG1YO+BAuHAB/KF4QVifT+Rd
2TUI95wers2trEn91mF/s0NtN/U7qH0v22PAvxeo3aL+mjBfN1e7MdujrErm
PLivFetQvF7YwVlTA4ovC/P3dnJS/XZhvn9XbYX6ndS+n62xaC1nODNck9Tm
j+SMxqplawM1QW2Q4+R6F7W7s/ecvSenN/CubL9Yr9T/tvKdDeXsfhfmAbwH
fuH7MNfCubdlc3zPUn/UGxo9tNT/der/K8zVcPbt2RwMF59KLah/lTCh8NUQ
3lfqi/WRq3i22wr/4OVuKWtmrV0K8H7kJGM3Z+dH45IP/cp5Nyz50LXoW53C
T4vUfzC5hieGNQjugYPQBnKS3ITz1xVOmJJcE3DFP8Nagqb8PlsD0cLOyV6G
Gq1M9jeDCx+yf03VDs/mCPxYrVKv5BDv5F3kFnuOV8NDcBZ/L/uHpvUvesP7
z1B7J2sXJpb6Hxf2PHgf+P0m9f/LZ8kajpZPV78B32dv1f8urEVo0q3oV1hb
0Bj0EI7aXta3SWM/CC2SPWRlqR+eb6h2WHYOwMvoILnxH8Vtkj0Y+rOi5Mc5
akdke+JbkvWnoszpyeQ1M9ePhdrJHAPXDBZeSN7TJ8JA9+EJxvDweHk06PXw
nDeG65C1DCv1Sc0zdzRikOIaydoxvPAVzy8rewxfofHs/eJwTpPLQ7I5gr1l
j7eWGsa7dUiu7enMOVmTBpSax7t1TOaCaeoPSNbYfuqPJh/K82vV767+A8l+
oDLsKfAWaFivsEftk6yveFfmtCJ5j5krfrrqmbDfpkbgznqldu4XdiVzEPOd
on7fZI3urf59YV/RM/s+iGZwP8XfoSVjwjrNPZT7KuDuCh8zdo36k5P9zYjw
b8xIngO/PSHsc27K9u8AL0+OMjZB/Q+S7wjU10DmkJxzs8Iafr3iPZK1nZyC
by9NzrVR6m8s57MqfAd8rYyTF+PU35nM+ZzfePV3J3M05zMIDk6uuXlhD9Rf
cfVkb8QdkNwmx7eEPU1vxXslex00n/sI9yu8APd77uljw/6YM4XLapaz3lrq
tU2ZG2dCLrQPnxWe85lkT4kXrfKkyZqGV8WzLFP8m2Qvg4a8nazJaAuaireu
8tjhNbCWr5L/D+grzEn2XJPCnAP34NnhRzhvaXk/3vajsPZzJ+dujgaie3h9
tLFBeD7ULPWJBqKFaPzmsJ7j3xuVfPo0nOt4GrwNmvN8WR/aDUfBVfzHMUf9
l9VfnMp/JOoHGpHsqfBW/IewutTvq+EcIVc+Sb6PDS37Qc1QO3gCfML88Puq
PEOZH5/hAbYkewC8wd2l3vEArJcz5+w/T74f4lkWlv1bGL4D4CMfC+8fMd4S
D8pnaDb+ED+IlmNs4V40hrsoOQl3dCy5WuUns/fyzbLfVe9UuyiswctLPtCn
hvi9y0tt4TFnl/PGe8L5S8p+0ocT4cZvk++GaCq1fWRYa79Ve2pyzpA748v5
HVpq+svCN3g27oZwCdp/UOEUaoH/rvDI1ASek3voqLAX/TrMBTOT/0sYS40k
78H6sGeAWw4Pe4kvyvzwhPyX83kZxxPjjdFE7iHc1dHKz8J3Pe58Pcq7uQvX
TZ4DHgUt3jvsXT4p88fj4/XxUGjtXmFvxZ2AWqAmuCvgOfBGOexFfiz1TM6Q
O9xPyFVy9j3FH4a9AR6B/24+CHMHHMJ/G/8r54+G8N/X/wGEpYhA
               "]], 
              Polygon3DBox[CompressedData["
1:eJwtlnt8z2UUx3/fB2sm6aaYZbkTSXOLCJFrLwkh0kXFjNncZnNJQrMx5rpK
JKy5W1I0ucUsQk2oCBFFCKUQ0fvzOs8f79c5n/M83+/vuZxzvr8KfRI6D3Kh
UGgSFINqiFpBKPQFdiNsghPoy4y9g98Xvx+0xO+OPUH8OMxA30K3he/wd2G/
hmvwKGwllov9GArhW2hKrCN2GvYU9l/e8z5+Iv5g+A3+Izaf2DD84dAM/1ns
T8QPQya6FfQg9gv6FTiEfxVqw2bGVmBXgsM/zXg/iIVZ6DPEQ7AAPxmbAk/h
98SeYugkzEQfRf+OPwCKwkvovyASchmfg83ye9beGxNrh52C/QN7FyzDT8dO
hmL4l3hPCoyELPQV4jVhA/4S7FL4GS4yPgLC4VX0k4w/pzGtA37Af4LYM9hD
6F5wAD/w5/sjdp/uRXvF74D9HrsX+w0c114YGgMR8Dr6HJTUWtHlYbzOF67g
v8ezA/HjoTl+Z+wR4r3hIP5ZiAgsp6JgnO4W6sKXzF+D/UR3q73ozIhtUY7A
dagH24itxX4K9fFbYndj92jdcAx9nncPhjDdO/oGtNCdo1vDZt0Z3AYT0ZEw
Fv9xfzf7sQfgIJxH3wEf4U/QfCiCf5Zn4mEQzEa3gK6MHUMfhenoorpj/KEw
DOagS0Mp5uXoLmEpVIAqxBYxZzF8ho6BZsQ2ojfBLmc1+DCx9eh1yg/0cuUP
VHeW16OwCdhBUNxZ7XT1v1FVdYbOheHobsoXiIAbxLpjc7RXqOIs51KwagTx
EAlliSXoblVvEA7XeLYLtj9jsRDmrC90xGajF0NF/OrYEdjK8JDukDlrIdnZ
mZ7DT4QEaOusFv7EHw2j4Gl/phfwk7QHaI+OgnJaN7ouvOtr+gx+HPTXvaNv
qoaV2/g7sAXwGH5r9R1soeoBVqNXQQ1nPWqMs9p/XvWhulJvQw9FD4ESzvpR
D+xs9Cwo56wHJGIHYOOUb87qpBO2vFAto+urdvB3wlfQyFm/nOwsJ9vjH2DO
/pD1jbHwhs7QWe286awWWmlvzNmrvu1zqLnqSPkDE9HbVGuqOWc1lursDNrg
72NOIaQ7q0PVY01ndTdOuQcN9TxztsJb6Fr6bWJb0G2Ul/jTIRPKMnY/diD2
Qaikc2XOStUEOk45A2XgPsYGYB8Q+EuYk6M6Rj8CjYnlo7er5+heoKnOC10A
E9B1dF7EdqA7QB5+be1PfQPdDtbjR2s92OXoZTDE1+WdxObqLtTr0Knot+Ee
Zz3gNb/W0vgz9Z3QXpz1J/Wper4fTfL9oEtg56lzPYL+G10NstEx8CH+ZagM
C9F14AP803BLPs8kqWYC+751CuxudceHtV7VCLHx2j8sctaf1Kfu9X1G+/gn
sNpbh79QfSawGqyhXoL9HPKc1YPqoqGviXR/9o0C6zfqOwXoXwPrF/Oc5b/q
QLnRILB6Vl3noy8Gdq86o0yfF5cCy4lVxGboHOGC1gsriE3FTgvsfptg83jX
Btjp7Lun719VZ/9FRvoaiAmsp6m36TuyB70bmjj7pmX4swrTGpiTCS+qtwTW
z1Y7q9nZPjeisfOYM1/9yedkVGB5ofxYg+6pfgC3O7urXs7uSfdVEl//HV7A
3q05+Fnq/9AHnYGeonNwtu9YXx8V8RcoL3SG6DTlks7Q2f+Evs56cJnA3qV3
au0nA+vBc531ffV//Q/rFljPUO845td60/fS0T6/SoFTD9H3GBb6NZcglqZe
ANn6fQhXPaBT9Z3yzxYhNhWdAb2dfQ+u+h6e6NekfFPeVfI5l+zfVzywGlIt
vawag0Bng47WOgP7Nl33vT7J51w+8e3QwFk/T8P+Dww1UYo=
               "]]}],
            Lighting->"Neutral"]}, {}, {}, {}, {}, 
          {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
eqI8/T+ZSgTD
              "],
              VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtmHvg19Mdxn/1PeeDUmpJF90vKiqrLJdamBIzWZFQw7IZ6T7DZsPmNpth
k8iSlawbSalUKqmmCypdWStRlqJ7Lql4Xp73H8/vnPM55/P5nvO+PO/n/Br2
HdRjYPmysrILy5WVJbW/1p/bhN8ItwqNc1lZE2G0+mOFB4SHhD8LDwq3CAOF
AUJ/YbrWnlaUlU1VO1jjrLYQrle/rzBIGCoMSZ6/Xfid8FvhDuEYrT1W+JH6
FwjHqV9RuFH9Cmr/ovZvwsPCX4W7hT8JfxTuERpoTUPhafWfESqpX1m4VP1u
wp3CXcIfhN/zruZ6ar91+Yb6n6sdrvZcteexB/VfUPtUqaxshFBT/X/o2Vlq
zxbOFM6JPs/aCe2FHwhnCKcJrYVWQkuhmXCq0EJoLpwutBXaCN8XXhamCqP1
W2OEr9V/Wr93odqu4Zsztd+Z2T6aIEwUntDa4SWf9ycaH5/tj18J/YSbhZvY
l95tLyzV/AiN/y4MEx7nXJxT+Gey/Zh/VhiT7P9/CR2EU/T+ML3/Q/WrqK0q
XKF+T+FT4UTNN2UdNtbcXUINbK72G+2xvPrlCDbOomfthTPYr977RPOfCjuF
HcJcPW+l57Oz/btAbWuN52XH31KteUtYLiwTJiX7a4b6s4RX1L9Eaxeqv0io
QExgH6GisFfPDgj7hX3C//Wsqr5fn1gSCmJQOJbYFD7Tmj3CbmGXUJXzCtWE
7wmzhMuy98KevsSHwiHhK86uuZJwtdb14XvqX8C51e4QXtSzyfhAa0eWbN/L
NT4hOx/f0LPFcRbOVFfP62X7b7gwR8/mYTfhNaGa5k4UesfvvaJnM0u2z3Th
Qc1dpd9vrLkHsnO5ncbTsnO6ttqTs/PtUeED8rDwWTnzS8KU5N97XaiutScJ
P0/O9xrq18rmi5pq2+jdtsLC7Hhjf9dgu+x8fFHfmCK8JEwW3hZWCiuEd/i+
3n0o2xdD1b6MXdWeL0xTv5Oenx+5Sw7fn31GzkZM4outao+ET4jF7UKKmLwn
mxPggvoRK7uwf8QMvt4rnBTn76l1vYQrhf+WHCuDtcf3I2auTY5hYheOgj/2
C3WwrXAr76n9mNgTDgon6P1+ev5FxNrxGt+YHXPYvqJwW7YPeP8YjYeETeCW
o8lcA8cM1vN1+E3vbhHKNK6r9d31rEcy95TL5io46Br1+xAv2evx3YLINXxI
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
An2NltI=
              "],
              VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtlnt4j2UYx3/2Pu/LkKRQDmM2jOWcQ6JQZEotOeaQUxtTm3E5X1KSpBJX
uazMHCPnSkVTlBxriSiHtlltaZiMVCpan+91//74/L73fT/Pe/g9z33fzxs9
Mq1PakQoFJoHPmziJy4Ihd5Dm6AjYJELhfLxf4SW0Bx+htYwjvGf0DNQxrz6
+OU0hj0U+xj2UcjCP4J+C/OxT6FjGY/Xc2AFROHXg+aML8cfCRH4vdGDXii0
H+7C/xo/ByYyrx7allg0moROIXYY+27sWDQZnUXsuN4dex+6X+9NrA6aB80g
hbFc9DS8CLfhv4xWRwfBAOZ/gj8VnQbVsDPQQrRA7wBtYBuxj+Bd3nUtrPFs
PSvp/6Ddna1tAvo+OgYdC5Wx18Ia6I+/Gl0FdQPbGK1lC+IrsaOxPXQY2p7Y
Ouzh2Ft826+taAUogU7wDLEL6DnYyPzNkMl7vQ0Z0JDxgLEn0XsZ24j9K7SH
p4mdRYtgOWPF6C/QETooD4hVZU4R+i/36ov9IfEqei6xbegHsFX/F1YxZwVk
QTb+X4x9qjXB78G157FroOMhEvsJPR+9FS1GI2AA9nb0T65Nxd7EtRugQ2C5
9h3MYLwBugNugUn429GPIVF7hI5H0+Fm7AO+5cZC/L3olzCK+9VGR6PJxPdg
t8KOQp9C04gd1PsrX2Am/k40Gz6HGsolYrvRXfCNb7m7hNhX6CFYBFfw28JC
7Nfhb+za2jO0EcTCf8pbtDfxPfzXYb7ts2o0A32AsW4wDvuI1pU5Kaox3/Yj
nnnL0Ed1D0jDPq77Mi9Ve6X3wx6NnkcvQA7jj2jNnNWf6vBhiOReU9FpcJF4
vuapV+j+gdXtQWLlVKtoInqIeaN86w/K8XdUL856RR1iWb7VfLzeSf8Fe4Py
h+u6YndRfvp2z1HhvqBn9VJ+Me8L5iVg9wzn/f2M/aDnqJaUN9ixxJxy11nt
KMe7BdaX1J8yIRn7MHqJ+yVpn8N12YB5MdDO2bv3gC3Y2czrrvWHa9pnYg+q
BlQL+N2xdzrL7c3EEom9pbnO9kx7twQmwkl8HyZgp8NiuIrfGd7EfgMe4z55
+H3Qc9xvkvIbfwHaEm0FpapF/D1oLz2feYPwK+LPR+PQJnDRWZ8rCddZ4Kzn
9VS/QxPQgcpl4gOxX/KtF85TLyH2EPYQ5QQ6FN1LbDD2DXQI2hhdGq6F5vr/
qiliI5zVTDNi69Ghus5Zrd4ZWO9TD+wL/fBny0dfUO8hNt23/KuKPQWdrH7D
eKGz/nON/ztL66I9DveLMmJztAbYBcQeRy8Tm0HsD9WL+oXOL4jSevhWc6qz
svB/VK5dgd9hNdeu9GyP7mDsebSu6tbZ/tYiNheNwY9WfsIN9RV0l2f7otq/
HZ2J1iRe3dna6sxRDigXPNgHIWIHZHvWA17TNYH9f61DFWdnbUdi98Czzvqg
1qxaYDWuWr/u2fpVIlYZSj2rY/UNH78/eorYCc11Vpuqx6bhPVWelkeHay+Y
UwjPhdd6TvhZ2qv6vvVj9eDpzs7mM+hN+l5Ar3q2B+pDAToYPUMsz7MadMT6
oMfwj0IMdidiDdHZzs71Rtj3aa10VhMbE1i/uqo9hfVctw4+Y+wf/N06Azyr
z1xnfUy9q8SzelKuX/etnlXXO6AmdgvGKqJJzB3tLNeVE+o36ju7oZZv3xf6
pkhxdmboTGmNttH6O/vu6OdbbQ4KP0s1pl5SCpdhGfda6tn3VdfAzgmdF4uh
rm/fP/rmmeDsDNL3S5fAziydXQucnTPt9G0Ak519K6mf/gaXdD/lLZxirIKe
gRbjn4VIxpsSS4eezr5ZDikPtVeQ41k/95nXGC2v93T27fA9egKK9P5QoL1T
XkI+di6c9ix3LxFrBq9iv+Lb95/OAJ1POqcyoTP3jPNtX+cSP4n9P+OdXhw=

              "],
              VertexColors->None]}]}, 
          {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
           GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwt1OVXVFEYxeHxXBAVuxuxu7AbE8FAwARrLEQFEbG7O/5FxUARRUAE87fX
2R+ede8669a8Z+/JTdeUVIdUKrUHGdiVcI692I01KEQR8vEKa7EOr/ECq7Aa
L7HEazpfimeYjzw8x1lU4RRqsR7LsBwbMBeLsBjzMBr3cB9jsMLP1LNWoj+G
YhgGYBwmYwpyMROP8BizfD4eE7z2AGORg4eYiid4imk+n405Xhvue3TtCEzE
SIzCJCzAdMzAQn/7QAzybyhGCUqxA4PRC9kYgo9sxh2Od9GojeF4ARfRDZWo
Rg1O4ihu4TaOoYF73uMD3uEGawdwEDd97XGc8D16V1/08zsrkniPrt2Pa0nM
hLJwHVewDdtxFQVe0/lmbMFGbMJW9EZ3ZKEPyvxMPWtnErO2D+VJzFwPXMJl
9PR5QOK1DPzld/1DJuenk5hJZfFMEn+7ZtjoGSibyrCyq4yex3fWW1HPeRvH
ZnxFO77hHOt1aAlxVpWetWb2M8Rn6N5OX/uJ4+cQ79HeKOO13iNlW5lVVpXx
Kn+zvlUdSHsPtXdHPIsKz77cWSnzrEo92wLPWjMu9Mw16yLvTbGzpT1q4rve
4C2+hJiFQzjsTKjL6qC6p04rq8qksqjMqrvKtLKc59krk8qi9kDdUGfVVXVE
3dV/gLqvDqtr6oi6oc6pK+q0uqzOqHvqrLqqDqo76qy6qg6p2+qcuqaO/+ad
P9CBPyF2XZ1VV9V5ZVn/CfovUKbVLWVQ2cv23rd5r1v9LO1pp5/ZFeI79Oxf
Ic4q7b3RzJqdkRZnRrNtcNc04+CMZjqzyr4yrSxnOStN3gtlRt3u8rvU8f+W
J5EF
             "],
             VertexColors->None]]}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L0ug1EAx+FXldKurKRbrbWy6kq3an0VKRGvCImPxiThDkhHCXdAjE3q
DohFVamP6/CcpMPz/v7JSc6bnGx1rxgPRFFUYpOwl3wyuqXbjNt1ndQLvWTK
bui03uods/ajFrSlTyzYr1rWNyq0eQ//ocMyH3RZ4ZNVvuixxjdVfvhlnT82
wh3uX9QXfWbebuqcPug9M/aN5vVar8jZ5zqhJ3rMWHgHTesZo5yGc0Y4IsUh
BwyzzxAxuyTZYTC8ITUS/ff9B7eGKrk=
            "],
            VertexColors->None]}, 
          {GrayLevel[0.2], 
           Line3DBox[{349, 231, 348, 582, 514, 660, 350, 583, 478, 351, 584, 
            515, 661, 352, 585, 479, 353, 586, 516, 662, 354, 587, 480, 355, 
            588, 517, 663, 356, 589, 481, 357},
            VertexColors->None], 
           Line3DBox[{361, 590, 482, 359, 591, 246, 363, 592, 483, 365, 594, 
            595, 484, 367, 596, 485, 369, 598, 599, 486, 371, 600, 487, 373, 
            602, 603, 488, 375, 604, 489, 377},
            VertexColors->None], 
           Line3DBox[{376, 672, 525, 374, 671, 524, 601, 372, 670, 523, 370, 
            669, 522, 597, 368, 668, 521, 366, 667, 520, 593, 364, 666, 519, 
            362, 665, 245, 358, 664, 518, 360},
            VertexColors->None], 
           Line3DBox[{379, 526, 673, 378, 605, 527, 674, 380, 260, 381, 606, 
            528, 675, 382, 607, 490, 383, 608, 529, 676, 384, 609, 491, 385, 
            610, 530, 677, 386, 611, 492, 387},
            VertexColors->None], 
           Line3DBox[{391, 612, 493, 389, 613, 533, 681, 393, 614, 494, 395, 
            615, 275, 397, 616, 495, 399, 618, 619, 496, 401, 620, 497, 403, 
            622, 623, 498, 405, 624, 499, 407},
            VertexColors->None], 
           Line3DBox[{406, 688, 539, 404, 687, 538, 621, 402, 686, 537, 400, 
            685, 536, 617, 398, 684, 535, 396, 683, 274, 394, 682, 534, 392, 
            680, 679, 532, 388, 678, 531, 390},
            VertexColors->None], 
           Line3DBox[{409, 540, 689, 408, 625, 541, 690, 410, 542, 691, 411, 
            626, 543, 692, 412, 289, 413, 627, 544, 693, 414, 628, 500, 415, 
            629, 545, 694, 416, 630, 501, 417},
            VertexColors->None], 
           Line3DBox[{421, 631, 502, 419, 632, 548, 698, 423, 633, 503, 425, 
            634, 551, 702, 427, 635, 504, 429, 636, 304, 431, 637, 505, 433, 
            639, 640, 506, 435, 641, 507, 437},
            VertexColors->None], 
           Line3DBox[{436, 707, 555, 434, 706, 554, 638, 432, 705, 553, 430, 
            704, 303, 428, 703, 552, 426, 701, 700, 550, 424, 699, 549, 422, 
            697, 696, 547, 418, 695, 546, 420},
            VertexColors->None], 
           Line3DBox[{439, 556, 708, 438, 642, 557, 709, 440, 558, 710, 441, 
            643, 559, 711, 442, 560, 712, 443, 644, 561, 713, 444, 318, 445, 
            645, 562, 714, 446, 646, 508, 447},
            VertexColors->None], 
           Line3DBox[{451, 647, 509, 449, 648, 565, 718, 453, 649, 510, 455, 
            650, 568, 722, 457, 651, 511, 459, 652, 571, 726, 461, 653, 512, 
            463, 654, 333, 465, 655, 513, 467},
            VertexColors->None], 
           Line3DBox[{466, 729, 573, 464, 728, 332, 462, 727, 572, 460, 725, 
            724, 570, 458, 723, 569, 456, 721, 720, 567, 454, 719, 566, 452, 
            717, 716, 564, 448, 715, 563, 450},
            VertexColors->None], 
           Line3DBox[{469, 574, 730, 468, 656, 575, 731, 470, 576, 732, 471, 
            657, 577, 733, 472, 578, 734, 473, 658, 579, 735, 474, 580, 736, 
            475, 659, 581, 737, 476, 347, 477},
            VertexColors->None]}, 
          {GrayLevel[0.2], 
           Line3DBox[{101, 231, 102, 664, 244, 590, 127, 673, 257, 140, 678, 
            270, 612, 153, 689, 283, 166, 695, 296, 631, 179, 708, 309, 192, 
            715, 322, 647, 205, 730, 335, 218},
            VertexColors->None], 
           Line3DBox[{103, 232, 582, 105, 245, 591, 128, 258, 605, 141, 679, 
            271, 613, 154, 284, 625, 167, 696, 297, 632, 180, 310, 642, 193, 
            716, 323, 648, 206, 336, 656, 219},
            VertexColors->None], 
           Line3DBox[{107, 234, 583, 108, 666, 247, 592, 130, 260, 143, 682, 
            273, 614, 156, 691, 286, 169, 699, 299, 633, 182, 710, 312, 195, 
            719, 325, 649, 208, 732, 338, 221},
            VertexColors->None], 
           Line3DBox[{109, 235, 584, 111, 248, 593, 594, 131, 261, 606, 144, 
            274, 615, 157, 287, 626, 170, 700, 300, 634, 183, 313, 643, 196, 
            720, 326, 650, 209, 339, 657, 222},
            VertexColors->None], 
           Line3DBox[{113, 237, 585, 114, 668, 250, 596, 133, 263, 607, 146, 
            684, 276, 616, 159, 289, 172, 703, 302, 635, 185, 712, 315, 198, 
            723, 328, 651, 211, 734, 341, 224},
            VertexColors->None], 
           Line3DBox[{115, 238, 586, 117, 251, 597, 598, 134, 264, 608, 147, 
            277, 617, 618, 160, 290, 627, 173, 303, 636, 186, 316, 644, 199, 
            724, 329, 652, 212, 342, 658, 225},
            VertexColors->None], 
           Line3DBox[{119, 240, 587, 120, 670, 253, 600, 136, 266, 609, 149, 
            686, 279, 620, 162, 292, 628, 175, 705, 305, 637, 188, 318, 201, 
            727, 331, 653, 214, 736, 344, 227},
            VertexColors->None], 
           Line3DBox[{121, 241, 588, 123, 254, 601, 602, 137, 267, 610, 150, 
            280, 621, 622, 163, 293, 629, 176, 306, 638, 639, 189, 319, 645, 
            202, 332, 654, 215, 345, 659, 228},
            VertexColors->None], 
           Line3DBox[{125, 243, 589, 126, 672, 256, 604, 139, 269, 611, 152, 
            688, 282, 624, 165, 295, 630, 178, 707, 308, 641, 191, 321, 646, 
            204, 729, 334, 655, 217, 347, 230},
            VertexColors->None], 
           Line3DBox[{220, 337, 731, 207, 324, 718, 717, 194, 311, 709, 181, 
            298, 698, 697, 168, 285, 690, 155, 272, 681, 680, 142, 259, 674, 
            129, 246, 665, 106, 233, 660, 104},
            VertexColors->None], 
           Line3DBox[{223, 340, 733, 210, 327, 722, 721, 197, 314, 711, 184, 
            301, 702, 701, 171, 288, 692, 158, 275, 683, 145, 262, 675, 132, 
            595, 249, 667, 112, 236, 661, 110},
            VertexColors->None], 
           Line3DBox[{226, 343, 735, 213, 330, 726, 725, 200, 317, 713, 187, 
            304, 704, 174, 291, 693, 161, 619, 278, 685, 148, 265, 676, 135, 
            599, 252, 669, 118, 239, 662, 116},
            VertexColors->None], 
           Line3DBox[{229, 346, 737, 216, 333, 728, 203, 320, 714, 190, 640, 
            307, 706, 177, 294, 694, 164, 623, 281, 687, 151, 268, 677, 138, 
            603, 255, 671, 124, 242, 663, 122},
            VertexColors->None]}, {}, {}}},
        VertexColors->CompressedData["
1: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
d/PtjlNrGTj8eco3ZrkQevfWa3qRe8kWjFadAnLfmeUTbnwRQpS+UqWgXopf
6fziB0tZUNh4YfzNUApGiYq3jExpXO2PjT7Iq0Gh9/EZTqdF+Hch3G1JAQ2f
6s9lc6YL0PLyXKRhWQsSU88XZnq1QunXITu320K8vrT4ULZKE5pd/5uyeIUI
pTVHewOWNeJEY0VzpiWFT17347W+S7H9bHRx7K86dDlcks10EoEd2lDreInG
3UE0dF6qgWKvycJVO0Xo1uD/1H5OY+2j4TeiJDbiyTHUZUVQbX0ody+U6Lze
hMxJ+2rg5DGqzJHsI/5wtbSL6HPeI9Pf95JqYGmhr7zQU4S9Muwrelk0JJvG
Hb0SWguL18+0d+WKsGKk3v1RHY2H9uJ95mOJLr5Nvniigo+kz2Epn0s42LE8
W/51CB+DY2N7OhbwEV4u86Klj4On084kX5v2Cau2FO7VWVuEUo+PcfEqxcgd
T/kXpIjIOWXUkowa4Kw6VLnpkRCdfes95IzaoRtsal850Ip2b/5ke+K7r7Jm
q0xc2Iql23x25sg1QDMoa2eLqRBHllQn9Aha0f9+nsHxonowxpgwXj4RgOd8
ZXUguUeJ2ZL4tFYhbE+UG/eO5+BZwqF3q7lSuK+ec+udFR/Oc12/fWnnYPnU
Mxv2mjIxPyT2XfpcCo4JTV/WKdG4dNFnVtU1MXb1aU3Oym4D27371I1qLp4s
H7xa/0CAtXE9WuE/mlFytyk5rF+EQjmNXIVeot8f7hoWGfFwP3nMpgvKYjiM
2tdwK6ANPcE6/6qTGoj/6KutXSbAunwj13kjNMaFdOg+fCVCXebdl7aHW9D4
4kVk5g0BnK5IlzbzmjEccPqij0wrPpgodr9+TuHUuhVvP8c3IOXN8MZTXsQH
9Kpj+43ECA+9PCW+rRE1q3KupkTxEdEpPSK5xkdL3czo8u0cyFfSz2ZWtCLj
QHLI0HQ+9pbdiFtaz0HR5aSoCQvbsPCa5c9cXw7ia8IXFakIsET1QITXegli
M2eNEh3nYHfMjaNvhvng3l/TdWiVBI92/Llb69aCTOeXpaH15D7fn3aG/ZAg
b3/LK482KX7Xe8w+RfQsoWlNGVvIgVb0z+u/Vgjh6TQ0/XxhE/7Tl1z5eE6E
tcpnhmr3tkH5pVm0elErNiv6PYrW4CGn59c9V7l2aAXF+tziijHuyH6VSWEt
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
V3Q2Ujhf+fOP2Rwazm3DkWGjmWAwpzsmku9PVp/5so98H4qehJkZTJTnBHt6
OhBd9hCa2s2ioVbNF5eOYkJddmCJoQrxwc05UTn/pNA659iyIpaJwKt/1eQs
iV9rhXj7z6ARnGycpt3DwOJQ9Qr9sRSeTdKSmflXiuNn9o3a31IPy1GHTVfX
UDiic9bnI+kHwds+7iu5BhRErfozu5yCa8Z4d1d9sk/kpk8biH5Imz5krzso
RsVFK2mdFxfcZSW/ihltWOTCKx2tTfg9ddyTyFk8GJ+6v9+H6ODfhju/GZ5C
NAat1nlgIIV1eXzRMTYH38ydt4tj+LCfmLy0tF2MwY+uPd0RLFwt9h8Ju0N4
8k74t8e2NIye93lOsmdCU29sTcVCCpn6/KqDyqSf11ufWVLOgEoE/3JavxDD
p+rzrhFemn/+wN7IuwysNbvc2tVK8izL6c0p4sviG+wEvyQGuceejEMiIZzP
ib9lS6TI00yrMr7KQMiJsJKFQiES+jWF5wk3Hnq/6qtZUi26kXdrcaEI8k46
G3OaaSTetXe710rD8qpK3CR9EfIGdy+vu9eCWbSdq4cCFzaPOVwlZz7mrbxR
q1EpxpfHQ9nyVTwojOuql6zg4qZt3ItZfm34xChtGZpGoSwueJGnXiO2P/30
RonM36WWHp138mIUqIp9TyQ1wltUGr7sJR9pHkkX8IQFPy9mQl0GBelPV4W4
jTQKzPqvDPay8N5ZXVaf6NFl7ZMXX5A5rQhKdnA3YsJ/2oe532ZT0LCrsnIi
+c5mS8HTHQ5MnJ/7dPNaXQpLbM0jnpN6mjIuWriTPJL1+MGVfJJH9o9e1+5D
8sguM7fYvjQGWAXPRCpSIfq+Fd2f0k44x3w5182NgUFTRU8O4fa1gv6NMYTb
y49uT1y8iQHfO8t7zIk/fh/TkbaoWYr/NAxfaG5m4F2npfUNsj7XZo35drK+
4ky3QYodA2MO2CwPIpwf6XKvoIBw/q9feotPb2RgQdbIxXvfhLi27at7HeHb
BKbM6WobwrH5k7wCKoXQFZ2P/P/vk6wOOFW5LJcNrf7XWjrjRbgaNufF13PE
p9ae6SmSsPEy+nj91dkiqM0YorZdIjz2PfL0jwet+LZ1qsmh2npMW7C9/HKj
ADHZidbHIyXIeKbtV7CIA7UdkvSRzTw0z8zvef5JAMH2dXTUtWaSJzd52jeL
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
OHYJYQy8CLO2cmwWAqFjFwxSUsx4/GI4guSFGx53p/mTvCCv90TmLdHP7+t1
c1WnMZF+LnjhGDXSt9suKhfJEf0U5sxXTqVRpJwYZblYguqxtgvHqXFwcx51
9RXxm0iPpMFtaxvha7K4eVsLBUEDS3VOFge/dMXx5UTvTTVmnjqhIkHhK601
rwvZUO/UvCMzUYSK0oyeyvM0wuV6HlqQPv+ZK3v/A+nzZCOTSnnS5x90vriE
PWdD8P7VX6exItzdNXH7lgga0x+6bfaiGDD/yjLVkqcQ/mSHUfigFMe+rhow
Jn4U+CUz5R95rx0ry/tOkveys7VyDFvFxpNQY24hOd/s9M7nHMKTpU6aM8uu
MGA79YPzP4EQvrR6+CGSW59MzSyZ1VWDnv36E6ZEiMBqjd2gW0R0fkf82KUz
SM5YHP5j1F+iP9qPdhhnc7BsT+2V0r0UjFKztz173IC/Qq2DBrcoiJbaz+B9
oKDYe9R+/YUGbFIZDkzbQsHK7vcJ321cRKWpmzb85sG5re6Rf6wY5fc33dDm
cjBYM9hodoaPpVd+tXlQYoiMXvu4qgjweZXJ8yZ2C759blmxbn8rNu40O6NG
dPCiq1rYBXcOhpw+viqpaEVmOj/RxYcN7btPd35upzA5x80u9Rh5P9UrO4zd
hDA68SVj9vkmcBasNny8XwRVaaVllU0rmtU4Trf76/G8dsw/eo6Q8ImzbVsK
F28SJny6lcRDwjCD82ijGNkn+q97bBSi/LnGaNXrTVDvsnIPOyzCilVR5/8E
07D97Hz2HNGb95+H3arXczDsu+8Z604bokZ8Zy1rbcBZ4+j2hLECdKxD3xaS
6+2C33lfJLl+1lK76hbfNlixXrquyaGxa7eSXizxl+U3ZOnHYziQr6l+0HCT
izxR+ofoNB623t37Km6bGDu+9Khcn0veYbFe1cFdAtAB3ro6ZyTI19g9s3l6
HcpQeGxOqgiPt0clZpNcc0VGrLR8fDMct18dNA8UIm/zKEUtUymuL9PXnmRb
g/zrS49dWCvCL4Z0Zct94teF/JMjRWw8NTj8LYT0bd3c74pjo2gsDcjs2biv
Br/fembtcSLrsw8kjaTR6ArTUV4USuFz357+3/caMFot/tq5aApVt+SONz+p
w/CBxzsmeJPcseTBR8U7NH5ddB6M9K5D18GNe/3DCV+HRMnHvCL79OTtSLpQ
i/XhabYqxI8mX4wojGug8V/FywT5KxwsyA38taWBjzMqPaKt8ySQ+Zdo0/Kn
BimqzjoMou+rVoimTyymwZ557KBgTQOGM5YHhj8j86Wk4VNK+lhX++q9GH8h
lqbyYefVhAf+U588cxfBy+xZVVRxE7J++L6tuyzEPnU5WuwsRf/u4CV7P7KQ
ODeZ4ZFNwWRa1oXfLjRGDiWv5+8kvmMy7XfTJTIHKbPn311DY+xHGbXJM9lo
9yixTmBSSNFVp2b40SjxK6tKELAg73ozrbSIwhddpeJdO4iP7DPYqaTERtkr
2dEJ1RSeVuP1GW/im79tNqjfbUXNlv/OfamrR/TBq7rHWwT///vGzKsdjfjy
ocHHREr67YWLz6arUky7YMHSJ3W+tE3puwep87DjSztLUuduD0VIBpnY7Jmk
x9pP4ejKWZqyBjRq3zDaVvsxMbuuRHX+cgoftskcL1elYVLkeCX1LwPXj+yJ
ezae6FqqnpeYcHL52NTzY14TH3lm0jJ6IwXuFCOtRUSvgi30JywezcSmrezb
RyZQYE1vod3+/3sI76IjcgmHj5757KSI+OOQ/4wHk8j65mXrIq6S/Qut1WSe
kP310kZFicj+OrOuu4jkWJBLu6KnfZBCt1smK28pjbAVodMZgUx8Sshq2GBC
odPB6di+KTScEqqn6hfX4qhvgnw04dImKxmnm3waCzZbPLZ3aCPn3DmuxrMB
yqn9VV1OAnw7muE9O7EeR2JbppwYpKBymPfy+SYaWnPci0MXMfHhzcqC2JkU
1IwWxDwYQ4OWTBifeYf4eNeyPw9bhbgoP+Ows5ToZNjh2/ZEb7PFX03GEH/f
lr+dd5robafjh1aL/xiw3Gl+/s6QEBU7VSM0/khh0Wdw56ExFwO77hxtn8ZH
Rl/lo55HYvxxNLbnjhci8Lwd9XtcM7pOOU2RTxMhZVe22MGFA+Zg08nbOgLs
f/PtVd0WCS56s+V9+pgI6rrYFbOPnPOs292tS2jse7jNbdN8wievebcfalCY
bl43IU2B9Pkp1QrrUwws5Pc8HG4QwjttzccKIclT/KBwRWcG5sndvPDzmxDn
nU4v7WmSgj3f+uAeWwb+LlfOHkX8MWtFyq1w4o9LRmxsnlxjIOyAxP6VUAhz
VZPGKuIXbf80b/THMSAJGpkVxhOCkfpbfl6bFLOj1cPPdLCgoLaJvaCUQonh
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
lXClgHFTybvHs2ZYkJz7Z868qUOX2dijvKXp5wgF7236ppLTNCZv+lMp+4GB
7unbruj1CHE5VH22VZcUxwemXoy+ycCkObPUi0jeTLsUlbGV9HnkrU/PdiQy
UO1ssjuE5MqVl0xa9AgnOARpNf+vnfN5aTKO4zhFIINOgrVLKh78AYFo2cHA
z1IM0ciLYIllYB1ql4Tyomj549YSD6KHOtQlDEWmMXFEO1jkMhBGDFHMxzZm
OnctoZC+f0Cvu4f39cXrMHj27Pk+4/1+r9UmrXl9umPAvYc++Dt3K+beQ+fj
nW+eO7/+YLko5Pyu6O3QReefLygLJL5/s5WjRP9gV8aKqjpvzlTk7ESs5E/N
4rqdaonGx+O79qpy5vJE2p3fNkdjxfU5e/Qw2LY9nLaXPouWjnj2oe7+6kj3
D6uIjJ2dDO/YRuvHO3ORPcvvr+zJPMtYe1ObF5jatKFzy8GAu27vG1KH+e88
mx/ty1sKp2ztaag17sva5IXsoH/Vs9f+S9fvuedt8G5BVfj3vq30fEk8sbRN
bWWPaga2reTMr+nyhp9WuLNQfnIiZb2+w6tfb3j2duzxQuNn99565YX5I0k7
+JScTZ7etWvVTRtlwzns7VLvm3ZUyKdcE/m0W0I+9YjJp70X8qlHTD7txpBP
vWP8PLA/Qz71jtGHHRvyqadMPu3hkE89ZfJpV4d86jWTT/s85FOvmXza+SGf
cnfk014Q+ZS7I592eMinvBn5tP9DPuXQyKddHfIpJ0Y+7fmQTzkx8mknh3zK
R5FP+zzkU26KfNq9IZ9yTeTT3g75lGsin3ZsyKc8D/m0n0M+5XzIp10a8imH
Qz7t4ZBPORzyaWeGfMqfkE/7NuRTP5R82ochn3Iv5NMuDfnUV8XzCezYkE+9
V/JpDwfPG9CTxe8D7Org7w/0bcmnfR7eWfp/PxfPJ7Dzg+cf6PmST3tB5FMv
mHzaHcL7HXJT5NNeE/nUX8bnBewjkU97R+TTHhH5tBeE9zvs+ZBPPXe8XtBn
J5966+RTP5186puQTz0IPA9D/p98yqWTT3lsfB+BnDD5lI8ln3Kb+P+AuLi4
uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4
uLi4uLi4uLi4uLi4uLi4uLi4uPgx4/8AuKxfqw==
         "],
        VertexNormals->CompressedData["
1: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

         "]],
       Axes->True,
       AxesLabel->{None, None, None},
       BoxRatios->{1, 1, 0.4},
       DisplayFunction->Identity,
       FaceGridsStyle->Automatic,
       ImagePadding->10,
       ImageSize->400,
       Lighting->"Neutral",
       Method->{"DefaultBoundaryStyle" -> Directive[
           GrayLevel[0.3]], "RotationControl" -> "Globe"},
       PlotLabel->FormBox[
         TemplateBox[{
           StyleBox[
           "\"Energy: \"", Italic, FontSize -> 12, FontFamily -> 
            "Arial Hebrew Scholar", StripOnInput -> False], 
           StyleBox[
           "6575.8358077182675`", FontSize -> 12, StripOnInput -> False]}, 
          "RowDefault"], TraditionalForm],
       PlotRange->{{1., 13.}, {1., 13.}, {0.005526709357185581, 
        24.429294043519413`}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}},
       SphericalRegion->True,
       Ticks->{Automatic, Automatic, Automatic},
       ViewAngle->0.42769327351158737`,
       ViewPoint->{1.3, -2.3999999999999995`, 2.},
       ViewVertical->{0., 0., 1.}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.7521168410976954`*^9},
 CellLabel->"Out[12]=",
 CellID->838830638,ExpressionUUID->"2e2120c7-38d2-432c-a3ef-539060986fa4"],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`a$$ = 0.3, $CellContext`b$$ = 
  0.4, $CellContext`currentState$$ = 3, $CellContext`graphType$$ = 
  "Quadratic", $CellContext`imageSize$$ = 400, $CellContext`isRing$$ = 
  False, $CellContext`matrixHeight$$ = 13, $CellContext`matrixLength$$ = 
  13, $CellContext`quadraA$$ = 4, $CellContext`quadraB$$ = 
  0, $CellContext`quadraC$$ = 0.4, $CellContext`quaRingA$$ = 
  0.2, $CellContext`quaRingB$$ = 0.4, $CellContext`quaRingC$$ = 
  0.4, $CellContext`randomValRing$$ = 50, $CellContext`randomVal$$ = 
  25, $CellContext`ringA$$ = 0.2, $CellContext`ringB$$ = 
  0.4, $CellContext`ringXIndex$$ = 5, $CellContext`ringXLength$$ = 
  6, $CellContext`ringYIndex$$ = 5, $CellContext`ringYLength$$ = 
  6, $CellContext`seed$$ = 1}, 
  TagBox[GridBox[{
     {
      TemplateBox[{
       StyleBox[
        "\"Boundary function: \"", FontSize -> 12, FontFamily -> 
         "Arial Hebrew Scholar", StripOnInput -> False],StyleBox[
        "\"4\\!\\(\\*Cell[TextData[{\\nCell[BoxData[FormBox[\\nSuperscriptBox[\
\\\"x\\\", \\\"2\\\"], TraditionalForm]], \\\"InlineMath\\\"],\\n\\\" + \
\\\"\\n}], \
\\\"InlineMath\\\"]\\)0\\!\\(\\*Cell[TextData[{\\nCell[BoxData[FormBox[\\\
nSuperscriptBox[\\\"y\\\", \\\"2\\\"], TraditionalForm]], \
\\\"InlineMath\\\"],\\n\\\" + \\\"\\n}], \\\"InlineMath\\\"]\\)0.4\"", 
         FontSize -> 12, StripOnInput -> False]},
       "RowDefault"]},
     {
      Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyNXQlcVdX2RhRwIOIqBFdEuN4rIA6pmMN1uBvJATMlU9EcyCGcwgnNIUwT
wZxLzcI0Ma2wfKJmlpamKWaKAw6VoWUOaVgpomZa+j/nXNba3O+c896fX793
H5+Ldfb+1tp7r732Puvaho7r9YK3l5fXRF8vr8pe9HPDRZ8rc9Sf+uIj7cdb
EB6n/dQSvfuoP48wnqr9PCYeaj+1hKe+0HJ5q/DUbxUbNP11GT9SqP7UKddj
A/11y9vjAP2RQlPfJxr0RJb/HgvPbca/U//c8k25v/TZQu1uuo37S7gmvrwG
99cDP1iV+0u49txrVbm/FfUfHluD+1uR79bX/bm/FfV8+VIA97fCc8/uy3mM
+0u4mzcn95f64caTWI5wjZ732vPvFXHrnJrc34r4Ga+HLuov4SoNG2NuuKi/
hI9Qnhrz3iUX9ZdwtV9Prr3kov5WaGfn94ZedlF/Kzx3xdj8CO4v4W7/7MP9
9fDHWf25v4Srdl8Y2oX/nnCVnZa3w/h3Dz0/VmH7VtSTMVf2l3CtX+tOcX8r
4huWFnF/CVcaf/JEwyLuL+Eq/b2qRHN/PfuVAva1uv25+1Cwrxs/uyEJ7GvV
2nN6kAPsa9V46LBbytGnyrLfyttgX218z7p5+AjYV3tu9xa+X4N9NT2ffNpg
F9hXbU/92K5tmoJ93e1J/fUF7i8932338dxfwpV+9e92eBD3l3Bl3CVsLGjO
/SX8nZycxGqbwvh5FeanvKbfV+bfK+jfW7rtJPeXcMXPf1x19kvub4XnJh/9
50PuL+Gpv5797tridtzfCvqVn4ngzzY3Pm0S+LM2X56vfmUo+LNNHC0sXL+v
bmvwZw3v3umqDfxZw/d/fqqa8PRn7bm+zV86A/5s0+ax1G/2gj9rekZGb9oA
/qy2M+i9QP+O4M82t982mgLzc/l8L6bB/OxQ/WHiZ8NGwPzsUNvz9dgGHWB+
dmjtf3NuFMzPDvW5m1b1D4T52aH4VfqGN9qf5/5KPO5Q4xkHuH30qdCZO6hp
PveX8dbXd8QndIb5mfqVwf2lv9P8PPsV7i/hLeLSE5xnx3N/CV+ZM2pwVvYA
7q+UjxsxbGlf7q/UPy3luR29ub+sp038Ge9/n2V7EO7lNT26qGpvbjfryfi+
3Q1Hb/6d8eZ7f/3i3PPcX9lO5ee3Wdxf+ndt3SzMhHgj1j2u07Mg3oh183Mg
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
q9wvaHS2q6XM/3FxJ9+W+wX3fGJReSub8YyMe7WP4gDNvpdvXOB1wc1HTfGP
8tcTPviOeXPbK1CsDCjZk3f9J14X3OMoQDgnJ+WfDvqL47c1Gj81xfa7808u
OSHj3ijt3wNFl7hhu4/VSGTe3O0K0fIY+4ueZd7cfhgsNikD9aMyuV/Q3KQs
VGxUpD6b3YD50mj2D9H4+Xl6EPNGn8p6mvz+VrlfoE/VLrHT7ro819PHxKHC
wjr3xSXmTVO/L0jl6Y713gnmzW3fUDEhye+JbZW+Yd7c/X5MPFcavCaizyHm
zao5SpCYkNjcZpl7h3lz+3+IqDk5tO7s3jLudc9LweJkcsauR195hnlzt6eO
modZVVDneebNbd/a4ssLDZuszujGvGnNSqyr2nGqs1lL5k2jeUgdNT5/JHhd
JPOlPXZabZGe5JdTZU0N5ktzwyvhQpkmmybH+0D8FibeyslZlzBX7k+zNEPW
Fsqys/ZhzmHmzW3fcPFncMpO5469zJvbz8NEN7/JoxN2yfjN3V6r+M4RcblH
bCUep+6/CxdlkbXbjhkr497j2rgIEzVrHPD9pvEg5u1rjTibylNn644RzJt7
/EaKR0pyZ9etlMy8aWqO2UTXjIKXr1/twLy5eY5U9wvii16xzJtbPkL8lhsQ
GjZH+plG57s2sS2t2HetfwDEb5HKOD159Y7PX8wbfarb374NpL/Rp/Lcq61G
H2De3PaKFMfjww8deyD3C+5xESFqXVz3WcO/ZdzrnjdsotbkKj5ZFeJet59E
ikpNFpU1PzOUedPUbbcLZTjWdG1IY97cflhPma9izk+MGcS8udvjED0yfIpe
G5HAvLntblfXx65PHGjKvLl5qqfmN3oXrI9g3tztUePbuLmTbbUgfrMr/tbg
8fBLcr/g9ud6Cm9zx4mxcr/gtq9DvBMweon3m4XMG30ejz939jWvL5g397iu
J87diPm76LiMe6drHbML32VhB14qknFve43QeuIPdb8QJONed3uixNqAQ77d
itOZN3e76osbwY8+tmLdcObN3Z5oURT/pv+KXwcyb+72RImmu9/LbmtLYt7c
dqwv0lMd3l1XO5k3d3sUOxd+FDE+thfEb1FijG+T9au8O7Gfuf2kvmixe/rI
tvuj2c+aaQ+OEtc+3j1hxryezJd7vqovWta+ODH4mXheT+lzdq0jH2YOszNv
9Lm+0osxPaz9mDf3eK8vBkz07RK6awzz5m5PA3fc2D4TxqkyvgsX2oZnTGXe
3O1pIJ6IWxc75MQc5s3dnhjxStKC+p18Mpg3tx2jxeaAkjPpx8Ywb+72NBAT
ilsuW9wvk3n7WBunMeLdv78IvVt5GvPmfk60mHW52Zdtp73AvGlxaloDEXNt
yWvPd53NvLnXxxhRw6tl7OaBLzFfQzVHiRZXoraOGVCYwny557EGYuqTjbwv
Bb/KvNHncOvuTYu/ledZxN8WNcDtFs55T8Kragnfxpy/I1yLh88Fcn6KcBXO
nxfI+RfC1fAkJlrmTQhX4/+pteU5WcV8wzMxQbw/rKBnenpruX8j/MNMZ+6Y
ubU5vie8rpYQbwX99REfqGnj1MaMk188rrSng6Md8OAjrqr7oN0dIL/sL/7U
8s89gR8fZfwqcNcAxklezSZvaVwTePNRxnVK6WmbL+MkP1vpcGysF/DpI1Se
j4XJ83GSV+LVU2+8ftPlybOP8FXsuNwi81wkP0f535SHJS5P/n1E2Kn41bUd
vmwXkh9bkPzPkBevuTzt4qPGDz2WJvqxvUi+hdKcwiW/uzzt5aPuKw+2by7P
yUj+dPzqsKRqEWBHH7FVc7hOjJN8tuZYvcG+FvU8tLD7wgSwo0U9d1Z++oC9
LOI9xV49fgsBuyj7OcWM1Zd4A/8WMUd57o+DbwDPFnFbaebS6eeAT4uIVNo7
ZUcx8GYR3pOTukxwnAV+LGJh/tRnW5TagQdlPdTORwZwf2l+elLx8iOJiYzT
/LROPRc415N5IHmLutE9P4BxktfGy6tDmB+Sf0r59N0q75eQ/D2lv85JMt9N
8u0Us+zfK/2Z5K8pjw2cJvPRJK/OM1+tLuW8Nsmr813W+VvMM8krztBzzMiT
jJP8L8o43T3uGPNP8nfm538ePF3iJN9F+Rg0dT/bheSV/dS+d8OOMk7yP2xP
C5s/Yi/bi+SznJeW5VVrwP5M8k+G7/feaH2c7UjyIepEYBnCOMlr65fPC3Df
IExZp+KWLXMms70I1/y5/yi4hxAmvL28At+61QjuIYSJkampHZZ3lvn9Cnri
W6x/APdqwtRxNGvy00XMW4W4YFC8cw/cQwhTz0PHBSzfBvcQwkQl8apX7eEt
ub8V9BcWLkzj/tI6qfBzuuONwYzTOnmp4e7ZSTWGMg8k/7c2IY5nnOS1c9Il
6cwPyZ/bnnYxfl4c4yT/rN/kFsP+bsm8kfyqnJxp876vwzjJHyssjKlfTZ5n
kHzH8FPWJ7fK+Znkf88NWBm2UN5PI/nGuy98MHLuKeaf5Pdc+HjTTOcPzD/J
L8y/W3Nm0S7GSb5/RsFrXz4q74eQvLL+v7Ldmce41N+wyVPPyHsjJF+Se2Vv
1nvt2Z9Jvu6tw80GtY9nO5K8lg8U6YyzvDqfNHsJ5iu76m+ne58cDvOSXW1/
ckbWSzD/2MX9+fkJaz51wjxjFzvSiqeMuGiH+cQuohOXvj3ogDy/Ibws+Oen
kqaehfnBrs6T6Q0K98E8YBcfZe78dm71jTDe7aLFsZhhy35M4P5W6JcyHuX9
GYrXOoUvH5IbORLijSjx7/zHDx3fP5Z5IPlqatyVOw3ijShtHl5aZQbzw/nj
pUH73r4eD/FGlOiYl77y6+N9mDeSb5KypcGBq00h3ogSN3KP7hnxRxLzSfKW
Rks7lI21Q7wRJQb6ffP9kqY9mGc+PwkomrhiZyjEG1HCHrFl2bLc7hxXkHxx
wf0/X18YAvFGlAgreXdxj/e7c1xB8o3CR5W97gqBeCNKiM9WDur6bXf2W5Jv
tm98/aMzEiHeiBKOpJl3BncewHYkeW2dfT+DcZI/p/p1+Cy2I8XV2QWtLng1
mM72IlyNKwIuzGK7EP5L/MWzTe+lM/+E/1jYva61ezrzTLhzcEnZt+HpzCfh
k5r3233Tmc68Ed682qO9lzyXzvwQ3nRG/yaHM9KZB899wWTuL+GX1Lh38WxB
+UqKqw+r8/afjwrKKxGunhdcvm0RtP8nXGGzT+wHQYL2aYQv1A4k4jifTnHd
SPX64WftOO9JeJAynfcc5MV5PcLrKp85C266KG9F+CxF/8ouJS7KyxA+I/9u
9YUPSlyUdyB8kjPv5PWI3120ryZ8693qD9+YXZf3jYT/2rBD55Rvn+W8GMVp
9xRrtPnqoovyF4TvTc7o9MkrxS7aZxI+JvUlV6czvfg8gOIB9X6R7x/PcN6W
cJX/bbsCOb9G+Ngkv9t1Wn3novwR4a8r/zuvX4GL8iOEv6bw8PucvS7a/xNu
P9WszbyLDXl/S7gy/7waem8o51NoHVdmvQsjfD530b6X45aytnWarB4mwsrP
J2hdaJWXWTLt8Avi8/I8MuFb04o7zwqP4nwf4V4l59f39L7morwM4Rvvzm93
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
zeIQs/UL57f/A4dT8ZE=
        "], {{
          {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.5], EdgeForm[
           None], Specularity[
            GrayLevel[1], 3], 
           StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtl3n4V9MaxffeJVyJNEdRogypFClFmqTB0CDckuomJCSVEJIyhKSIyFB0
RUWGW0+6t4RQnjJdkiLzPM8ZP8t6/1jPWmf/zu97znn3u9fau8GQc3ufU1JK
nXNKFeCPADINA/0Qp8FbwXHoAfAm0Bt9KrwFfAuqgUtAd37oS7giPDZ7fGf0
evSx6J7wSWAI+j3Qlb99DBd4LeM90W3Rn8O7gPNAN64/gyvAX8FVwVhwMtd/
wJXhCvxvA/QN4GJ0DbgK4z/CtcBEvT/XPySPncU9O8PbM3YC+Bm9A3xO9nN3
RJ+B3gldCd0TfIPeDu4HfkX/Ax4Iiv4HPj/73XZCnwq243pXuBK8N+PTVaPs
96kI/xP8C/0hGJhdc9X+k+R3OwusYbA73Jrf+ULPB6PAp8lzNQJ8p/cFE8DX
+iYwLvl9dwDjk+tXEYxMUW8wPLkelcGZyd+0KxiTXI8q4NzkGu+musZ76/2v
SP7umvDlyXNeCYxW7zC+F3xdcg1qw5P0Lui68BR9H7oePFV1RO8OX63aofeA
r9Ez0Q3hG0ENdCN4BqiN3he+BTRCN4Pngn3QzeF5YA/0/vBs0ADdFL4L7Ik+
EJ4DGqIPgu8GjdEt4PtUP3QdeLJ6TP0Kvw5WobvBrSheffSh6AWgR3HdtzK2
Ed0ru88HqMjwJ6A/+jfNteYd/afmAT2o+HmfgtfQ3eHD4aOL5/gtrt9G94c7
wW+qX9FHwltAX/RR8DHRH29z/Q76FLgLfBL4XX3Fda/iXnlHaxH9Pfpd9DL0
fupR+EnQAr0f/AQ4AL0PvBIchG4CrwAHag7g58Dhqju8BhymmsJPgVboA+Dj
wU886z2u+6K3oT9A90H/gn4ffT26R3ZjPg0O0TzBg4v74zMwtLhvPte6QVeB
vwCXo1vC28D9MS96t7noVsnftRB9GLoZfB7XdeHvsuvdn/H/Jz9T87sKHBF+
9Xzy98mX1oBroyfVm1dGn1cvXhcanxb9pmctTK6H1u9TWkvcV4frb9Xv8W7z
wQXFffw9GFvciz+Aqehu8J/gGnQX+A9wcczFz2Bi1PlXMCHm7hcwBX0U/Bu4
Ct0R/h28rN7S+8Fng1rob8Dp6Krwl2AEuib8NTgDXR3+CoyPfvgJjEM3gX8E
6+L3WxZ72sl80xvgRPSJ8KtgJroxvDv3jCxew3Xh29RrWq/oUcXrth48W73D
eH10PfQh6PvlU8VeUBtepnWQ3G/q96HqK/mFehauw/hyrY/k/myL7oF+Rj2B
bgMvlk9l+3Mt7hlePLfVwJBiP9oNviM8RHN7frGP7Akvjt/RerkUHCzfgS8p
7rXm6hHQmnselL/Gd90OhnHPLlzXgCtHfWaBEdkeq5yaoufA1YrfSe9wp7wy
O+9qMj6j2Ke03gdk+7lyZFP0dufwj8Fa7+phrrtGDyjz+zC2AayQx0TvT+Zv
R8IHw1eCdugWcHv5CPc8B15EHwe3lw9Ebdugr5MfZftYr+iHjVpj6BP0+4zf
UOyR+rv8bCDjm0GH+M114BH9RrKHqGf7oV/Wt3PdST0BD8rOKfnkMFA9/G1j
3N+Re24q7kX553TQJ9szJ4E26Gbw0OyMk4cPzs5BeelqcHRyb98oL8v23s3x
Xer316KGHcKPB+l/wdPoY+BDi+dD83I6eCD6QV7aOu5ZrXxCt032gTnhIeq3
WZqHZL+amp1fWqfXRz+oL6ZlZ5nW6eTs7JM3jsnOU/n/6OycVQZNAk2SvXRU
di7Lk8dl57KyaTyon5xf07NzVp5wc3ZWysdmZGeuPETzKc9cq29GHwE/llyz
3vD65Nr3hV9SLaJXtQfRPHSAlyavIdXh4fBr1WER2DHW9cxkb+sCr0zu087w
f6N31cMrknu2I7xc3pud6cqaidn7B2XKZdn7CuXvhGwPl5dfGJnYCJ4f/qMc
3D8853E9L75XzxyevRdSnjbN9pxl4F50S7gh/zumeI/SAF4Kt0/OuObxzk+A
iyJbG8Oji/coe8H7xlpYomejuyZ7/hXFtW4KL4gayp8fjfooEzdk72GUrc9G
/ZUj67L9WflyD2iXnDvzYu7k7S9Fn2udvgJOQWd+57Ti/VxVeEnUX7nzUHyL
vmklOD45g0Zm7wO1B3gy+kF5tCjmSFn2Qqxr7a9eyPaZdugHw/vky8+HB8mL
/ldca9VqduwxtJ+/I/YY2sM/FJmrrFlb7C/ytDuL90Xaqz8b2SAfWBXzob67
pfi8obPMq+FpOpssjezTnD4Ta1j1X128D5H/rw9vlUdtyd7nyytuLd536Uwx
DRybXc/FkcXKrIeL9yfKyoWRv8qmR4v3ncrEJcV7COXmPcV7bp137i7p7z2n
zlz/ib5Rv80v3i8pRxYV57sy9LHifFKWvV68B1PNl0evq///HTmlfc7jxdmp
nnygeM+gDLq5+MymM9ojxZmtHJ9VfD7Uuemt4vOkPPmu4j2wzm6bi8+T8s/b
i/eEOovNKd4z65z1RtRKWXNvsReo914p3iMpd14szjWdlRYUZ62y9b7ifFWO
zys+j+lcNrf43Kiz29bic6myclPxWVc5NbP4PKbz6YbiPZj8/LbifJZ3/QV+
spkQ
               "]], Polygon3DBox[CompressedData["
1:eJwtmHv819Mdx8/7oLTYmPsiFYu5hqkkxBISXVWi5VduhWpJWqJ+KaVCurh0
UbpYF0ohl4qSFKWSVDRZm5n7dTObzfZ6/l7nj9fjvM/3fD/fz7m836/X63zr
du/TrndOKbWIlPZUe4A6R6odKzym+DThAsUrhfWKDxbqKr5PmK/4AD33iOJp
wnXqHy+cqXiJsFrxxcJAxfsL3fXdnwvjFN8vLNDYCcJZip8SXlHcQ3hI8THC
MH33TzyT/Bv81m71D1R8h3CJ+jcIjyqeIfRSfIfGD1NcXW039c8W2qr/hvCu
4pOEcxQvFV5VfIhwlOLxwuOKfyWcoXiRsErxYcIvFU8SFipuJLRkrsJmxQ2F
i1irsEnxr4ULeVbYoPgKYbTiu4UuiscIbym+THhNc+wh7K34a6GVxpoKlzAm
bFfcRGileK2wlbmxp8xdeEvxtcJUxcfzDv3WUKGW4p+orWBvhdbMRXhH8bGs
gbUKLyluIJyr+HlhneIKPVdN8RdCS9Ym9FP8M+EqjXVWf1TyO25Wv6+wn+If
WBO5ItyoeF/htxrblxwp5zVDcc3sXOA8H1FcO3vurOEpxZ2EkYrvEjoqrhRe
Unw+4/q9DuqPSD7jPqw1O1fImScV18ieK3OeqrgeOUwuC8+SD+G9ZY+XK66e
PVfmPJm5CzMVn0yOaryN+sMUHyLcoP5OobvizuSmxr5TXCkMFVqrv1PYpLi9
sE3f+an6BykeIjyquI8wW/EsgcJrLwxXfKfQTvFd2WfFmb2o5w8nJxU/LCwm
V8kxxX8QnlPcrdTtp8KF6t8jbFPciZzX2PvlfNgPzvJG5qT4e6Gt+n9V/xfJ
e8re7irj7Adn+Rf1D03eA/biQKGO4nuYg+Jm2WvdLPxR8d/UXivUFLrq2fOy
c52c36X40uy9YE96arw+NaR4PudBrQmnK54nLFP8Z33n4LJ/PMs7efe9wtxs
DiC3yLGr9d2R2bVOza9Wv3n2XrAnnNeV+gy++0hooeB6YbriE1mTxt5Q/+Xk
mn4FbgvzwVFqn8nmwJXJNb5Sn/07nJsvkgMlv5Yrbi6sCNcUtXUe6wnXHLXX
mBoMcwxc04T8DXMS3NSMmizvJxePVttfYzPUnqL+MWoHZOc8uX+s8IA+eyHM
D03UrtXYc+G1NFK7Jvs34a/G5V3/4ByEXuQY+xvmx+P4rWxOhpvPFpaGc5Bc
PI6aC3Mi3FhfGB/m7COo/zCXowFoQVPh6TDHwrVHc4ZhjUFryKnh4ZxnP88N
18Ke4dwjB28P1zS5TE7DPXAIXIJG9A9rDPzyJfuRzTnkB5oxMFyD5BI5NSh8
JvDrmeWsJhf+qqqBMOfBJ58JkzT2VTkPNAftQQPRwnrCaI19U86HGqfWH8qu
h32oi3B9XJOcg+QiOUvufiM8qA+vUP9DxT2opygcqvhjYSLzC9fHEWqXZHMY
XHYWvJbNCXDDXPIn+zzgx33UzsnWB/SshtrZ2RrJeaCBaCcgrqZ2FvWldof6
2zkv1iq8o/hy4c1wPqL39dUu1djgsD/YQ+3M7D3mbKPsfUXJF+bAXK4u+QTH
jQznFPxWq+Ta1LBe1VH7tPpTwnxRO6wXaB76sZ/aefAPnJmsUZ1L/nA+zIm5
XanPxiTn6K1hjoQfWqrdlq2xaO064e1sjUfr17DebE6Cm5jD3JKvcHUzta9r
7GS1T6i/EH5Qv26YX04SppU5o3UnJK8FjeiquG1YO+BAuHAB/KF4QVifT+Rd
2TUI95wers2trEn91mF/s0NtN/U7qH0v22PAvxeo3aL+mjBfN1e7MdujrErm
PLivFetQvF7YwVlTA4ovC/P3dnJS/XZhvn9XbYX6ndS+n62xaC1nODNck9Tm
j+SMxqplawM1QW2Q4+R6F7W7s/ecvSenN/CubL9Yr9T/tvKdDeXsfhfmAbwH
fuH7MNfCubdlc3zPUn/UGxo9tNT/der/K8zVcPbt2RwMF59KLah/lTCh8NUQ
3lfqi/WRq3i22wr/4OVuKWtmrV0K8H7kJGM3Z+dH45IP/cp5Nyz50LXoW53C
T4vUfzC5hieGNQjugYPQBnKS3ITz1xVOmJJcE3DFP8Nagqb8PlsD0cLOyV6G
Gq1M9jeDCx+yf03VDs/mCPxYrVKv5BDv5F3kFnuOV8NDcBZ/L/uHpvUvesP7
z1B7J2sXJpb6Hxf2PHgf+P0m9f/LZ8kajpZPV78B32dv1f8urEVo0q3oV1hb
0Bj0EI7aXta3SWM/CC2SPWRlqR+eb6h2WHYOwMvoILnxH8Vtkj0Y+rOi5Mc5
akdke+JbkvWnoszpyeQ1M9ePhdrJHAPXDBZeSN7TJ8JA9+EJxvDweHk06PXw
nDeG65C1DCv1Sc0zdzRikOIaydoxvPAVzy8rewxfofHs/eJwTpPLQ7I5gr1l
j7eWGsa7dUiu7enMOVmTBpSax7t1TOaCaeoPSNbYfuqPJh/K82vV767+A8l+
oDLsKfAWaFivsEftk6yveFfmtCJ5j5krfrrqmbDfpkbgznqldu4XdiVzEPOd
on7fZI3urf59YV/RM/s+iGZwP8XfoSVjwjrNPZT7KuDuCh8zdo36k5P9zYjw
b8xIngO/PSHsc27K9u8AL0+OMjZB/Q+S7wjU10DmkJxzs8Iafr3iPZK1nZyC
by9NzrVR6m8s57MqfAd8rYyTF+PU35nM+ZzfePV3J3M05zMIDk6uuXlhD9Rf
cfVkb8QdkNwmx7eEPU1vxXslex00n/sI9yu8APd77uljw/6YM4XLapaz3lrq
tU2ZG2dCLrQPnxWe85lkT4kXrfKkyZqGV8WzLFP8m2Qvg4a8nazJaAuaireu
8tjhNbCWr5L/D+grzEn2XJPCnAP34NnhRzhvaXk/3vajsPZzJ+dujgaie3h9
tLFBeD7ULPWJBqKFaPzmsJ7j3xuVfPo0nOt4GrwNmvN8WR/aDUfBVfzHMUf9
l9VfnMp/JOoHGpHsqfBW/IewutTvq+EcIVc+Sb6PDS37Qc1QO3gCfML88Puq
PEOZH5/hAbYkewC8wd2l3vEArJcz5+w/T74f4lkWlv1bGL4D4CMfC+8fMd4S
D8pnaDb+ED+IlmNs4V40hrsoOQl3dCy5WuUns/fyzbLfVe9UuyiswctLPtCn
hvi9y0tt4TFnl/PGe8L5S8p+0ocT4cZvk++GaCq1fWRYa79Ve2pyzpA748v5
HVpq+svCN3g27oZwCdp/UOEUaoH/rvDI1ASek3voqLAX/TrMBTOT/0sYS40k
78H6sGeAWw4Pe4kvyvzwhPyX83kZxxPjjdFE7iHc1dHKz8J3Pe58Pcq7uQvX
TZ4DHgUt3jvsXT4p88fj4/XxUGjtXmFvxZ2AWqAmuCvgOfBGOexFfiz1TM6Q
O9xPyFVy9j3FH4a9AR6B/24+CHMHHMJ/G/8r54+G8N/X/wGEpYhA
               "]], 
              Polygon3DBox[CompressedData["
1:eJwtlnt8z2UUx3/fB2sm6aaYZbkTSXOLCJFrLwkh0kXFjNncZnNJQrMx5rpK
JKy5W1I0ucUsQk2oCBFFCKUQ0fvzOs8f79c5n/M83+/vuZxzvr8KfRI6D3Kh
UGgSFINqiFpBKPQFdiNsghPoy4y9g98Xvx+0xO+OPUH8OMxA30K3he/wd2G/
hmvwKGwllov9GArhW2hKrCN2GvYU9l/e8z5+Iv5g+A3+Izaf2DD84dAM/1ns
T8QPQya6FfQg9gv6FTiEfxVqw2bGVmBXgsM/zXg/iIVZ6DPEQ7AAPxmbAk/h
98SeYugkzEQfRf+OPwCKwkvovyASchmfg83ye9beGxNrh52C/QN7FyzDT8dO
hmL4l3hPCoyELPQV4jVhA/4S7FL4GS4yPgLC4VX0k4w/pzGtA37Af4LYM9hD
6F5wAD/w5/sjdp/uRXvF74D9HrsX+w0c114YGgMR8Dr6HJTUWtHlYbzOF67g
v8ezA/HjoTl+Z+wR4r3hIP5ZiAgsp6JgnO4W6sKXzF+D/UR3q73ozIhtUY7A
dagH24itxX4K9fFbYndj92jdcAx9nncPhjDdO/oGtNCdo1vDZt0Z3AYT0ZEw
Fv9xfzf7sQfgIJxH3wEf4U/QfCiCf5Zn4mEQzEa3gK6MHUMfhenoorpj/KEw
DOagS0Mp5uXoLmEpVIAqxBYxZzF8ho6BZsQ2ojfBLmc1+DCx9eh1yg/0cuUP
VHeW16OwCdhBUNxZ7XT1v1FVdYbOheHobsoXiIAbxLpjc7RXqOIs51KwagTx
EAlliSXoblVvEA7XeLYLtj9jsRDmrC90xGajF0NF/OrYEdjK8JDukDlrIdnZ
mZ7DT4QEaOusFv7EHw2j4Gl/phfwk7QHaI+OgnJaN7ouvOtr+gx+HPTXvaNv
qoaV2/g7sAXwGH5r9R1soeoBVqNXQQ1nPWqMs9p/XvWhulJvQw9FD4ESzvpR
D+xs9Cwo56wHJGIHYOOUb87qpBO2vFAto+urdvB3wlfQyFm/nOwsJ9vjH2DO
/pD1jbHwhs7QWe286awWWmlvzNmrvu1zqLnqSPkDE9HbVGuqOWc1lursDNrg
72NOIaQ7q0PVY01ndTdOuQcN9TxztsJb6Fr6bWJb0G2Ul/jTIRPKMnY/diD2
Qaikc2XOStUEOk45A2XgPsYGYB8Q+EuYk6M6Rj8CjYnlo7er5+heoKnOC10A
E9B1dF7EdqA7QB5+be1PfQPdDtbjR2s92OXoZTDE1+WdxObqLtTr0Knot+Ee
Zz3gNb/W0vgz9Z3QXpz1J/Wper4fTfL9oEtg56lzPYL+G10NstEx8CH+ZagM
C9F14AP803BLPs8kqWYC+751CuxudceHtV7VCLHx2j8sctaf1Kfu9X1G+/gn
sNpbh79QfSawGqyhXoL9HPKc1YPqoqGviXR/9o0C6zfqOwXoXwPrF/Oc5b/q
QLnRILB6Vl3noy8Gdq86o0yfF5cCy4lVxGboHOGC1gsriE3FTgvsfptg83jX
Btjp7Lun719VZ/9FRvoaiAmsp6m36TuyB70bmjj7pmX4swrTGpiTCS+qtwTW
z1Y7q9nZPjeisfOYM1/9yedkVGB5ofxYg+6pfgC3O7urXs7uSfdVEl//HV7A
3q05+Fnq/9AHnYGeonNwtu9YXx8V8RcoL3SG6DTlks7Q2f+Evs56cJnA3qV3
au0nA+vBc531ffV//Q/rFljPUO845td60/fS0T6/SoFTD9H3GBb6NZcglqZe
ANn6fQhXPaBT9Z3yzxYhNhWdAb2dfQ+u+h6e6NekfFPeVfI5l+zfVzywGlIt
vawag0Bng47WOgP7Nl33vT7J51w+8e3QwFk/T8P+Dww1UYo=
               "]]}],
            Lighting->"Neutral"]}, {}, {}, {}, {}, 
          {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
eqI8/T+ZSgTD
              "],
              VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtmHvg19Mdxn/1PeeDUmpJF90vKiqrLJdamBIzWZFQw7IZ6T7DZsPmNpth
k8iSlawbSalUKqmmCypdWStRlqJ7Lql4Xp73H8/vnPM55/P5nvO+PO/n/Br2
HdRjYPmysrILy5WVJbW/1p/bhN8ItwqNc1lZE2G0+mOFB4SHhD8LDwq3CAOF
AUJ/YbrWnlaUlU1VO1jjrLYQrle/rzBIGCoMSZ6/Xfid8FvhDuEYrT1W+JH6
FwjHqV9RuFH9Cmr/ovZvwsPCX4W7hT8JfxTuERpoTUPhafWfESqpX1m4VP1u
wp3CXcIfhN/zruZ6ar91+Yb6n6sdrvZcteexB/VfUPtUqaxshFBT/X/o2Vlq
zxbOFM6JPs/aCe2FHwhnCKcJrYVWQkuhmXCq0EJoLpwutBXaCN8XXhamCqP1
W2OEr9V/Wr93odqu4Zsztd+Z2T6aIEwUntDa4SWf9ycaH5/tj18J/YSbhZvY
l95tLyzV/AiN/y4MEx7nXJxT+Gey/Zh/VhiT7P9/CR2EU/T+ML3/Q/WrqK0q
XKF+T+FT4UTNN2UdNtbcXUINbK72G+2xvPrlCDbOomfthTPYr977RPOfCjuF
HcJcPW+l57Oz/btAbWuN52XH31KteUtYLiwTJiX7a4b6s4RX1L9Eaxeqv0io
QExgH6GisFfPDgj7hX3C//Wsqr5fn1gSCmJQOJbYFD7Tmj3CbmGXUJXzCtWE
7wmzhMuy98KevsSHwiHhK86uuZJwtdb14XvqX8C51e4QXtSzyfhAa0eWbN/L
NT4hOx/f0LPFcRbOVFfP62X7b7gwR8/mYTfhNaGa5k4UesfvvaJnM0u2z3Th
Qc1dpd9vrLkHsnO5ncbTsnO6ttqTs/PtUeED8rDwWTnzS8KU5N97XaiutScJ
P0/O9xrq18rmi5pq2+jdtsLC7Hhjf9dgu+x8fFHfmCK8JEwW3hZWCiuEd/i+
3n0o2xdD1b6MXdWeL0xTv5Oenx+5Sw7fn31GzkZM4outao+ET4jF7UKKmLwn
mxPggvoRK7uwf8QMvt4rnBTn76l1vYQrhf+WHCuDtcf3I2auTY5hYheOgj/2
C3WwrXAr76n9mNgTDgon6P1+ev5FxNrxGt+YHXPYvqJwW7YPeP8YjYeETeCW
o8lcA8cM1vN1+E3vbhHKNK6r9d31rEcy95TL5io46Br1+xAv2evx3YLINXxI
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
An2NltI=
              "],
              VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtlnt4j2UYx3/2Pu/LkKRQDmM2jOWcQ6JQZEotOeaQUxtTm3E5X1KSpBJX
uazMHCPnSkVTlBxriSiHtlltaZiMVCpan+91//74/L73fT/Pe/g9z33fzxs9
Mq1PakQoFJoHPmziJy4Ihd5Dm6AjYJELhfLxf4SW0Bx+htYwjvGf0DNQxrz6
+OU0hj0U+xj2UcjCP4J+C/OxT6FjGY/Xc2AFROHXg+aML8cfCRH4vdGDXii0
H+7C/xo/ByYyrx7allg0moROIXYY+27sWDQZnUXsuN4dex+6X+9NrA6aB80g
hbFc9DS8CLfhv4xWRwfBAOZ/gj8VnQbVsDPQQrRA7wBtYBuxj+Bd3nUtrPFs
PSvp/6Ddna1tAvo+OgYdC5Wx18Ia6I+/Gl0FdQPbGK1lC+IrsaOxPXQY2p7Y
Ouzh2Ft826+taAUogU7wDLEL6DnYyPzNkMl7vQ0Z0JDxgLEn0XsZ24j9K7SH
p4mdRYtgOWPF6C/QETooD4hVZU4R+i/36ov9IfEqei6xbegHsFX/F1YxZwVk
QTb+X4x9qjXB78G157FroOMhEvsJPR+9FS1GI2AA9nb0T65Nxd7EtRugQ2C5
9h3MYLwBugNugUn429GPIVF7hI5H0+Fm7AO+5cZC/L3olzCK+9VGR6PJxPdg
t8KOQp9C04gd1PsrX2Am/k40Gz6HGsolYrvRXfCNb7m7hNhX6CFYBFfw28JC
7Nfhb+za2jO0EcTCf8pbtDfxPfzXYb7ts2o0A32AsW4wDvuI1pU5Kaox3/Yj
nnnL0Ed1D0jDPq77Mi9Ve6X3wx6NnkcvQA7jj2jNnNWf6vBhiOReU9FpcJF4
vuapV+j+gdXtQWLlVKtoInqIeaN86w/K8XdUL856RR1iWb7VfLzeSf8Fe4Py
h+u6YndRfvp2z1HhvqBn9VJ+Me8L5iVg9wzn/f2M/aDnqJaUN9ixxJxy11nt
KMe7BdaX1J8yIRn7MHqJ+yVpn8N12YB5MdDO2bv3gC3Y2czrrvWHa9pnYg+q
BlQL+N2xdzrL7c3EEom9pbnO9kx7twQmwkl8HyZgp8NiuIrfGd7EfgMe4z55
+H3Qc9xvkvIbfwHaEm0FpapF/D1oLz2feYPwK+LPR+PQJnDRWZ8rCddZ4Kzn
9VS/QxPQgcpl4gOxX/KtF85TLyH2EPYQ5QQ6FN1LbDD2DXQI2hhdGq6F5vr/
qiliI5zVTDNi69Ghus5Zrd4ZWO9TD+wL/fBny0dfUO8hNt23/KuKPQWdrH7D
eKGz/nON/ztL66I9DveLMmJztAbYBcQeRy8Tm0HsD9WL+oXOL4jSevhWc6qz
svB/VK5dgd9hNdeu9GyP7mDsebSu6tbZ/tYiNheNwY9WfsIN9RV0l2f7otq/
HZ2J1iRe3dna6sxRDigXPNgHIWIHZHvWA17TNYH9f61DFWdnbUdi98Czzvqg
1qxaYDWuWr/u2fpVIlYZSj2rY/UNH78/eorYCc11Vpuqx6bhPVWelkeHay+Y
UwjPhdd6TvhZ2qv6vvVj9eDpzs7mM+hN+l5Ar3q2B+pDAToYPUMsz7MadMT6
oMfwj0IMdidiDdHZzs71Rtj3aa10VhMbE1i/uqo9hfVctw4+Y+wf/N06Azyr
z1xnfUy9q8SzelKuX/etnlXXO6AmdgvGKqJJzB3tLNeVE+o36ju7oZZv3xf6
pkhxdmboTGmNttH6O/vu6OdbbQ4KP0s1pl5SCpdhGfda6tn3VdfAzgmdF4uh
rm/fP/rmmeDsDNL3S5fAziydXQucnTPt9G0Ak519K6mf/gaXdD/lLZxirIKe
gRbjn4VIxpsSS4eezr5ZDikPtVeQ41k/95nXGC2v93T27fA9egKK9P5QoL1T
XkI+di6c9ix3LxFrBq9iv+Lb95/OAJ1POqcyoTP3jPNtX+cSP4n9P+OdXhw=

              "],
              VertexColors->None]}]}, 
          {GrayLevel[0], Opacity[0.2], EdgeForm[None], 
           GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwt1OVXVFEYxeHxXBAVuxuxu7AbE8FAwARrLEQFEbG7O/5FxUARRUAE87fX
2R+ede8669a8Z+/JTdeUVIdUKrUHGdiVcI692I01KEQR8vEKa7EOr/ECq7Aa
L7HEazpfimeYjzw8x1lU4RRqsR7LsBwbMBeLsBjzMBr3cB9jsMLP1LNWoj+G
YhgGYBwmYwpyMROP8BizfD4eE7z2AGORg4eYiid4imk+n405Xhvue3TtCEzE
SIzCJCzAdMzAQn/7QAzybyhGCUqxA4PRC9kYgo9sxh2Od9GojeF4ARfRDZWo
Rg1O4ihu4TaOoYF73uMD3uEGawdwEDd97XGc8D16V1/08zsrkniPrt2Pa0nM
hLJwHVewDdtxFQVe0/lmbMFGbMJW9EZ3ZKEPyvxMPWtnErO2D+VJzFwPXMJl
9PR5QOK1DPzld/1DJuenk5hJZfFMEn+7ZtjoGSibyrCyq4yex3fWW1HPeRvH
ZnxFO77hHOt1aAlxVpWetWb2M8Rn6N5OX/uJ4+cQ79HeKOO13iNlW5lVVpXx
Kn+zvlUdSHsPtXdHPIsKz77cWSnzrEo92wLPWjMu9Mw16yLvTbGzpT1q4rve
4C2+hJiFQzjsTKjL6qC6p04rq8qksqjMqrvKtLKc59krk8qi9kDdUGfVVXVE
3dV/gLqvDqtr6oi6oc6pK+q0uqzOqHvqrLqqDqo76qy6qg6p2+qcuqaO/+ad
P9CBPyF2XZ1VV9V5ZVn/CfovUKbVLWVQ2cv23rd5r1v9LO1pp5/ZFeI79Oxf
Ic4q7b3RzJqdkRZnRrNtcNc04+CMZjqzyr4yrSxnOStN3gtlRt3u8rvU8f+W
J5EF
             "],
             VertexColors->None]]}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L0ug1EAx+FXldKurKRbrbWy6kq3an0VKRGvCImPxiThDkhHCXdAjE3q
DohFVamP6/CcpMPz/v7JSc6bnGx1rxgPRFFUYpOwl3wyuqXbjNt1ndQLvWTK
bui03uods/ajFrSlTyzYr1rWNyq0eQ//ocMyH3RZ4ZNVvuixxjdVfvhlnT82
wh3uX9QXfWbebuqcPug9M/aN5vVar8jZ5zqhJ3rMWHgHTesZo5yGc0Y4IsUh
BwyzzxAxuyTZYTC8ITUS/ff9B7eGKrk=
            "],
            VertexColors->None]}, 
          {GrayLevel[0.2], 
           Line3DBox[{349, 231, 348, 582, 514, 660, 350, 583, 478, 351, 584, 
            515, 661, 352, 585, 479, 353, 586, 516, 662, 354, 587, 480, 355, 
            588, 517, 663, 356, 589, 481, 357},
            VertexColors->None], 
           Line3DBox[{361, 590, 482, 359, 591, 246, 363, 592, 483, 365, 594, 
            595, 484, 367, 596, 485, 369, 598, 599, 486, 371, 600, 487, 373, 
            602, 603, 488, 375, 604, 489, 377},
            VertexColors->None], 
           Line3DBox[{376, 672, 525, 374, 671, 524, 601, 372, 670, 523, 370, 
            669, 522, 597, 368, 668, 521, 366, 667, 520, 593, 364, 666, 519, 
            362, 665, 245, 358, 664, 518, 360},
            VertexColors->None], 
           Line3DBox[{379, 526, 673, 378, 605, 527, 674, 380, 260, 381, 606, 
            528, 675, 382, 607, 490, 383, 608, 529, 676, 384, 609, 491, 385, 
            610, 530, 677, 386, 611, 492, 387},
            VertexColors->None], 
           Line3DBox[{391, 612, 493, 389, 613, 533, 681, 393, 614, 494, 395, 
            615, 275, 397, 616, 495, 399, 618, 619, 496, 401, 620, 497, 403, 
            622, 623, 498, 405, 624, 499, 407},
            VertexColors->None], 
           Line3DBox[{406, 688, 539, 404, 687, 538, 621, 402, 686, 537, 400, 
            685, 536, 617, 398, 684, 535, 396, 683, 274, 394, 682, 534, 392, 
            680, 679, 532, 388, 678, 531, 390},
            VertexColors->None], 
           Line3DBox[{409, 540, 689, 408, 625, 541, 690, 410, 542, 691, 411, 
            626, 543, 692, 412, 289, 413, 627, 544, 693, 414, 628, 500, 415, 
            629, 545, 694, 416, 630, 501, 417},
            VertexColors->None], 
           Line3DBox[{421, 631, 502, 419, 632, 548, 698, 423, 633, 503, 425, 
            634, 551, 702, 427, 635, 504, 429, 636, 304, 431, 637, 505, 433, 
            639, 640, 506, 435, 641, 507, 437},
            VertexColors->None], 
           Line3DBox[{436, 707, 555, 434, 706, 554, 638, 432, 705, 553, 430, 
            704, 303, 428, 703, 552, 426, 701, 700, 550, 424, 699, 549, 422, 
            697, 696, 547, 418, 695, 546, 420},
            VertexColors->None], 
           Line3DBox[{439, 556, 708, 438, 642, 557, 709, 440, 558, 710, 441, 
            643, 559, 711, 442, 560, 712, 443, 644, 561, 713, 444, 318, 445, 
            645, 562, 714, 446, 646, 508, 447},
            VertexColors->None], 
           Line3DBox[{451, 647, 509, 449, 648, 565, 718, 453, 649, 510, 455, 
            650, 568, 722, 457, 651, 511, 459, 652, 571, 726, 461, 653, 512, 
            463, 654, 333, 465, 655, 513, 467},
            VertexColors->None], 
           Line3DBox[{466, 729, 573, 464, 728, 332, 462, 727, 572, 460, 725, 
            724, 570, 458, 723, 569, 456, 721, 720, 567, 454, 719, 566, 452, 
            717, 716, 564, 448, 715, 563, 450},
            VertexColors->None], 
           Line3DBox[{469, 574, 730, 468, 656, 575, 731, 470, 576, 732, 471, 
            657, 577, 733, 472, 578, 734, 473, 658, 579, 735, 474, 580, 736, 
            475, 659, 581, 737, 476, 347, 477},
            VertexColors->None]}, 
          {GrayLevel[0.2], 
           Line3DBox[{101, 231, 102, 664, 244, 590, 127, 673, 257, 140, 678, 
            270, 612, 153, 689, 283, 166, 695, 296, 631, 179, 708, 309, 192, 
            715, 322, 647, 205, 730, 335, 218},
            VertexColors->None], 
           Line3DBox[{103, 232, 582, 105, 245, 591, 128, 258, 605, 141, 679, 
            271, 613, 154, 284, 625, 167, 696, 297, 632, 180, 310, 642, 193, 
            716, 323, 648, 206, 336, 656, 219},
            VertexColors->None], 
           Line3DBox[{107, 234, 583, 108, 666, 247, 592, 130, 260, 143, 682, 
            273, 614, 156, 691, 286, 169, 699, 299, 633, 182, 710, 312, 195, 
            719, 325, 649, 208, 732, 338, 221},
            VertexColors->None], 
           Line3DBox[{109, 235, 584, 111, 248, 593, 594, 131, 261, 606, 144, 
            274, 615, 157, 287, 626, 170, 700, 300, 634, 183, 313, 643, 196, 
            720, 326, 650, 209, 339, 657, 222},
            VertexColors->None], 
           Line3DBox[{113, 237, 585, 114, 668, 250, 596, 133, 263, 607, 146, 
            684, 276, 616, 159, 289, 172, 703, 302, 635, 185, 712, 315, 198, 
            723, 328, 651, 211, 734, 341, 224},
            VertexColors->None], 
           Line3DBox[{115, 238, 586, 117, 251, 597, 598, 134, 264, 608, 147, 
            277, 617, 618, 160, 290, 627, 173, 303, 636, 186, 316, 644, 199, 
            724, 329, 652, 212, 342, 658, 225},
            VertexColors->None], 
           Line3DBox[{119, 240, 587, 120, 670, 253, 600, 136, 266, 609, 149, 
            686, 279, 620, 162, 292, 628, 175, 705, 305, 637, 188, 318, 201, 
            727, 331, 653, 214, 736, 344, 227},
            VertexColors->None], 
           Line3DBox[{121, 241, 588, 123, 254, 601, 602, 137, 267, 610, 150, 
            280, 621, 622, 163, 293, 629, 176, 306, 638, 639, 189, 319, 645, 
            202, 332, 654, 215, 345, 659, 228},
            VertexColors->None], 
           Line3DBox[{125, 243, 589, 126, 672, 256, 604, 139, 269, 611, 152, 
            688, 282, 624, 165, 295, 630, 178, 707, 308, 641, 191, 321, 646, 
            204, 729, 334, 655, 217, 347, 230},
            VertexColors->None], 
           Line3DBox[{220, 337, 731, 207, 324, 718, 717, 194, 311, 709, 181, 
            298, 698, 697, 168, 285, 690, 155, 272, 681, 680, 142, 259, 674, 
            129, 246, 665, 106, 233, 660, 104},
            VertexColors->None], 
           Line3DBox[{223, 340, 733, 210, 327, 722, 721, 197, 314, 711, 184, 
            301, 702, 701, 171, 288, 692, 158, 275, 683, 145, 262, 675, 132, 
            595, 249, 667, 112, 236, 661, 110},
            VertexColors->None], 
           Line3DBox[{226, 343, 735, 213, 330, 726, 725, 200, 317, 713, 187, 
            304, 704, 174, 291, 693, 161, 619, 278, 685, 148, 265, 676, 135, 
            599, 252, 669, 118, 239, 662, 116},
            VertexColors->None], 
           Line3DBox[{229, 346, 737, 216, 333, 728, 203, 320, 714, 190, 640, 
            307, 706, 177, 294, 694, 164, 623, 281, 687, 151, 268, 677, 138, 
            603, 255, 671, 124, 242, 663, 122},
            VertexColors->None]}, {}, {}}},
        VertexColors->CompressedData["
1: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
259jDiuNrREh24dWIMGNDPrb0ny+bnzXULJ8UKhDhi+h2QbdCkMgf0Ptrhiq
a/IkYl/uMhHw4S6jNieUr7LUDr9A/L+CrKsxF1shJVZP+WV7L/ietxAbFsXB
rreehvXVGHSLWlWY47Ng8/YVZ6owBRZP3ZoyN6bAv1MPLtgNLUDuxidrt3Hg
4Mn9NvJ3DnjCRtyv91FAIIupogHVveYHgS9z5OaQXslIP5JJgQ+S7Cnj5RT4
8rD28M0U5Cudw5NjUDydk0y1PvSSAq1PS30/lc+Cv8WP4eBLFOiXnAq7iXwo
XnyMZQD5VuX7daGtyJ/60/0QWEa4vmXrg4t9szA59nLiLqrH7awZvcvInwqf
YrB/tHMeZm/TPzZH7fnnuUdn5jiF6rldauf6qd2jQo1PbV8TNT61e0uo8amd
I6bGp3bfCzU+tXPEVMeHyr0x1PjUzh1T41O7f4Yan9q5Y2p8avfYUONTO6dM
jU/tPhxqfGrnlKnxqd2rQ41P7VwzNT61+3mo8amda6bGp3bPDzU+tX131PjU
7guixqe2744an9o9PFTHk8p+M2p8avf/UONT24dGjU/tXh1qfGr7xKjxqd3n
Q41PbZ8Y1fihck8ONT61/VHU+NTu56HGp7Zvihqf2r031PjU9jVR41O7b4ca
n9q+Jmp8avfYUONT289DjU/t/hyq40Nlnw81PrV7aajxqe3Docandh8ONT61
fTjU+NTumaHGp7b/hKreoHK/DTU+tfOh1PjU7oehxqe274Uan9q9NFT1DJXz
qtT41O6xocandu6VGp/afTjU+NTOyVKNZyr36lDjUztvS41P7X4eanxq53Op
8and80ONT+2cL9X1S+W+IGp8aueCqfGp3TtEjU9t3xRVvUHlviZqfGrnl6nx
qd2PRI1P7b4janxq9xFR41O7L4gan9p9PtT41M65U+NTO89OjU/t3Do1PrXz
6dT41M6bUONTOwdBjU9t/z/VfE5lXzo1PrX92FTrF5V9wtT41PbHUs23VPZt
UuNv4pv4Jr6Jb+Kb+Ca+iW/im/gmvolv4pv4Jr6Jb+Kb+Ca+iW/im/gmvolv
4pv4Jr6Jb+Kb+Ca+iW/im/gmvolv4pv4Jr6Jb+Kb+Ca+iW/im/gmvolv4pv4
Jr6Jb+Kb+Ca+iW/im/gmvolv4pv4Jr6Jb+Kb+Ca+if+/4f8D2mxrFA==
         "],
        VertexNormals->CompressedData["
1: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
ihVCZ85xz/JKFs4calR+cIsLG1w97x5e0wHDVQW27JBq1IZmjwcPH4NVBDM9
63IlKDn4KuULz6GOu4XVaW8xBOaJF9yO4eD2mpJvi+NT0ISPinK/ieApM6fq
0UkRtsRj5V6lMixMXK9XPZUDbfPT0/SXifF8vvMnGzJZyNuZeNtJ+xQ8s+L/
MTtSBKqycTa+i7ioYNJscUIlFFxsWh/H1AohLC4p12kZD/s1Fbw3xJ2DPa1H
A9WsJfd7rOkR/WMtGGA7d7LOpTxwjmmzTtfphjPRa1cmKLai68F9pT69tRA8
XCNrWCvJT1OznHZ3tOCW/qWz1xk1w3DnxsCsCjZsKuJrGFfwcMomAwaf2QN4
dk7hToYIjyZb+rvI3cbYAUUHzjY2BBg3MNzOS867Zk9+6sL7mHK4Km5H1j5g
PGybM6+4B/b9opHdp/kAOcpVZzhu4XB9wN0tarAL1KzNE1Kv8LHA60Rf0954
SFY1N1xox4eSzJawHLMnGKfiJorMD4egZTue9kjuWwMjw67Wi+0Y6HLFyCQ8
E5bPMxuy5grg0pzVXjmDnagRlVfKLv4Z8kp77zZPF8CxWR0OhrZdOOioleWx
vgSYBUfKjB1ZIL6amju0VIxfyfq071LMAMfEQobxjDZwXx33dcS1Ltzh4Mvt
fsYBO68Llz++3wwhhZ6i4NQuNPHt4Zc7N0H7jR+z2z6/A4PJ3ktONnWin1ff
ARlNARSIuverJP8KxwMyfBLdxfhoZX+ZfFopxC8Msm5i3MBUHluXIerEs7lK
320pFECDWliFdkg3+uvtxKFrrZhxfHmjyZ0KWOtnsb1cXozevoanbL5h4ybB
zRHm7gho9InqZfnwIFVL09ygQohqomLHadwA0A52qNzb1AADFnVctrkIF1ve
FF/X9oNDX944WKFcDaZbP91vZiXGjCLXk/VWAZC7gBPmOpkJghmtZjUvxCh3
4t6wvuQ/dKNBZI+lRQzUy4rmHhgRY7pJpB1jVjCcCbXrX/29OoZs80tgS+7N
hCKn6Vn1QSDPVfAYUY/ARh2nFTYSV+Bl1fhfDgLnlJHoNQVsbHipl7lbRowa
OnrZ03YFgsw/Si/K/Gv521mrwjzPMtvx1fNd/up72/kyk5TVzxVLx98/fnLy
/5/3whveG+V/7U94w/4d5a/a6/a7mvRiVrmplPy94/9Al/Z8UPxvdxTNzX1u
n5Q06jwfJwf7rQ+ndMnyRq2rN/lY45eyj3mcx9hfqce/crH/ikh//qh5GSef
cOM/Npd2O+/f39fyNHiXj2+c5OTS8Imzf1/Lo97pr9UzQfLJD/YJsh7G6lLv
J9X/Vv/P7ZGTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OT
k5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTk5OTj5v/CVpbcZg=
         "]],
       Axes->True,
       AxesLabel->{None, None, None},
       BoxRatios->{1, 1, 0.4},
       DisplayFunction->Identity,
       FaceGridsStyle->Automatic,
       ImagePadding->10,
       ImageSize->400,
       Lighting->"Neutral",
       Method->{"DefaultBoundaryStyle" -> Directive[
           GrayLevel[0.3]], "RotationControl" -> "Globe"},
       PlotLabel->FormBox[
         TemplateBox[{
           StyleBox[
           "\"Energy: \"", Italic, FontSize -> 12, FontFamily -> 
            "Arial Hebrew Scholar", StripOnInput -> False], 
           StyleBox[
           "2.6791536181950173`*^6", FontSize -> 12, StripOnInput -> False]}, 
          "RowDefault"], TraditionalForm],
       PlotRange->{{1., 13.}, {1., 13.}, {0.046850631851702934`, 738.4}},
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}},
       SphericalRegion->True,
       Ticks->{Automatic, Automatic, Automatic}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{3.7521168871009483`*^9},
 CellLabel->"Out[13]=",
 CellID->931283217,ExpressionUUID->"e5456751-3a0b-4879-bfc3-acf92c9cb062"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection",ExpressionUUID->"7bdc28d3-2797-4c8c-a648-a98db1367914"],

Cell[TextData[{
 "A harmonic function is a function satisfying ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Laplacian]", "f"}], " ", "=", " ", "0"}], TraditionalForm]], 
  "InlineMath",
  FormatType->"TraditionalForm",ExpressionUUID->
  "ac222578-5481-4a68-b5fa-8c8069ad9c96"],
 " in the interior of its domain."
}], "DetailNotes",
 CellChangeTimes->{{3.7506351938809023`*^9, 3.750635196297491*^9}, 
   3.751159565025392*^9, {3.751160154171088*^9, 3.751160208817824*^9}},
 CellID->275947578,ExpressionUUID->"ed850329-c225-490c-aa9b-735113d5491e"],

Cell["\<\
The landscape represented by a harmonic function is the flattest in terms of \
the mean square of the gradient.\
\>", "DetailNotes",
 CellChangeTimes->{{3.7506351938809023`*^9, 3.750635196297491*^9}, 
   3.751159565025392*^9, {3.751160154171088*^9, 3.751160217962543*^9}},
 CellID->1937732423,ExpressionUUID->"595671c5-2d31-435a-ae6e-0db5c93951ad"],

Cell["\<\
A harmonic function satisfies the Mean Value property. Every point inside the \
landscape can be calculated as the mean value of the boundary values.\
\>", "DetailNotes",
 CellChangeTimes->{{3.7506351938809023`*^9, 3.750635196297491*^9}, 
   3.751159565025392*^9, {3.751160154171088*^9, 3.751160218180697*^9}},
 CellID->357344046,ExpressionUUID->"d9388a10-b141-4907-9fe0-ac6d0f4e2576"],

Cell["\<\
A discrete harmonic function is a discrete analogue of a harmonic function.\
\>", "DetailNotes",
 CellChangeTimes->{{3.7506351938809023`*^9, 3.750635196297491*^9}, 
   3.751159565025392*^9, {3.751160154171088*^9, 3.751160174460949*^9}, {
   3.751160232288815*^9, 3.751160232296414*^9}},
 CellID->1584451762,ExpressionUUID->"716676f3-2883-4081-839f-17135893f430"],

Cell["\<\
In the demonstration, we have three type of boundary: random, sin, and \
quadratic.\
\>", "DetailNotes",
 CellChangeTimes->{{3.7506351938809023`*^9, 3.750635196297491*^9}, 
   3.751159565025392*^9, {3.751160154171088*^9, 3.751160174460949*^9}, {
   3.751160232815956*^9, 3.751160247846436*^9}, {3.7511603190123863`*^9, 
   3.7511603461783648`*^9}},
 CellID->26428597,ExpressionUUID->"c586a8b8-5a41-47c0-a2b9-008df86d1d8f"],

Cell[TextData[{
 "\"Random\" boundary means both the outer and the inner boundary value is \
random real from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0", ",", " ", "\[Theta]"}], ")"}], "  "}], TraditionalForm]], 
  "InlineMath",
  FormatType->"TraditionalForm",ExpressionUUID->
  "65b9c839-a53d-4a7b-8409-71ac5936f5b1"],
 "\[Theta] is user defined value."
}], "DetailNotes",
 CellChangeTimes->{{3.7506351938809023`*^9, 3.750635196297491*^9}, 
   3.751159565025392*^9, {3.751160154171088*^9, 3.751160174460949*^9}, {
   3.751160232815956*^9, 3.751160247846436*^9}, {3.7511603190123863`*^9, 
   3.751160475386773*^9}, {3.751160532544614*^9, 3.751160540159945*^9}, {
   3.75116065684137*^9, 3.751160694437664*^9}},
 CellID->2018379231,ExpressionUUID->"6151c42f-4783-4761-8f44-49300d5db224"],

Cell[TextData[{
 "\"Sin\" boundary has outer boundary value ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", 
    RowBox[{"(", 
     RowBox[{"\[Alpha]x", "+", "\[Beta]y"}], ")"}]}], TraditionalForm]], 
  "InlineMath",
  FormatType->"TraditionalForm",ExpressionUUID->
  "7922b234-f164-4fce-b9e1-e37b2a17c8a7"],
 " and inner boundary value ",
 Cell[BoxData[
  FormBox[
   RowBox[{"sin", 
    RowBox[{"(", 
     RowBox[{"\[Alpha]x", "-", "\[Beta]y"}], ")"}]}], TraditionalForm]], 
  "InlineMath",
  FormatType->"TraditionalForm",ExpressionUUID->
  "0a97918c-b325-4777-b2f7-fca70b9edb06"],
 ". Both \[Alpha] and \[Beta] are user defined value."
}], "DetailNotes",
 CellChangeTimes->{{3.751160688579661*^9, 3.751160780271639*^9}},
 CellID->1560126935,ExpressionUUID->"6ca25516-b6e8-4f36-875c-6fbe781f2a18"],

Cell[TextData[{
 "\"Quadratic \" boundary has outer boundary value ",
 Cell[BoxData[
  FormBox[Cell[TextData[{
    Cell[BoxData[
     FormBox[
      RowBox[{
       SuperscriptBox["\[Alpha]x", "2"], "+", 
       SuperscriptBox["\[Beta]y", "2"]}], TraditionalForm]], "InlineMath",
     FormatType->"TraditionalForm",ExpressionUUID->
     "4cedd290-f37e-42ed-8caa-6e0feea2e01c"],
    " +c"
   }], "InlineMath",ExpressionUUID->"9e31ae0a-eeb3-481c-a98d-b94741b90e8c"], 
   TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm",ExpressionUUID->
  "91493c95-a812-4a69-951f-bbf28d8f5ebf"],
 " and inner boundary value ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Alpha]x", "2"], "-", 
    SuperscriptBox["\[Beta]y", "2"]}], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm",ExpressionUUID->
  "418114b0-72e0-488b-9282-be75c0cebb7a"],
 " +c. Both \[Alpha] and \[Beta] are user defined value."
}], "DetailNotes",
 CellChangeTimes->{{3.751160688579661*^9, 3.7511607842983513`*^9}, {
  3.751160832276161*^9, 3.751160969855654*^9}, {3.751161018060102*^9, 
  3.751161018060528*^9}},
 CellID->1040532433,ExpressionUUID->"60b3fad5-6f4f-4e92-86f0-0d199fa3efd1"],

Cell["", "DetailNotes",
 CellChangeTimes->{{3.751160688579661*^9, 3.7511607842983513`*^9}, {
  3.751160832276161*^9, 3.751160969855654*^9}},
 CellID->2104939421,ExpressionUUID->"af6daf58-84ea-4e1c-a37b-0beb3b2b6577"],

Cell["Reference:", "DetailNotes",
 CellChangeTimes->{{3.7506351938809023`*^9, 3.750635196297491*^9}, 
   3.751159565025392*^9, {3.751160154171088*^9, 3.751160174460949*^9}, {
   3.7511602335025053`*^9, 3.7511602361756973`*^9}},
 CellID->1184010145,ExpressionUUID->"404e6918-28d4-4040-ad3f-88eb19c2e7ef"],

Cell[TextData[{
 "P. Doyle, & L. Snell,  ",
 StyleBox["Random Walks and Electric Networks",
  FontSlant->"Italic"],
 " (Carus Mathematical Monographs). Mathematical Assn of America, 1984."
}], "DetailNotes",
 CellChangeTimes->{
  3.750634761783216*^9, 3.7506349989923677`*^9, 3.750635064873743*^9, {
   3.7506351108246803`*^9, 3.7506351660647306`*^9}},
 CellID->1184742875,ExpressionUUID->"64158742-eeb5-484a-b428-d8c345ec444e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection",ExpressionUUID->"1d40ab5f-ee43-4d4b-b3c4-8ef7794f13ac"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Resize Images",ExpressionUUID->"8f9ab0a1-e18a-43f9-9eb9-59fea83ebc99"]}],
  
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{{3.75211590470065*^9, 3.7521159048223133`*^9}},
 FontFamily->"Verdana",
 CellTags->
  "ResizeImages",ExpressionUUID->"3be103c9-d269-45a2-99a6-616b2c8993a7"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Rotate and Zoom in 3D",ExpressionUUID->
    "1d6a93f9-54c9-427a-8ccc-822c86d40575"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{{3.750635227240161*^9, 3.7506352272530813`*^9}},
 FontFamily->"Verdana",
 CellTags->
  "RotateAndZoomIn3D",ExpressionUUID->"410c64af-2bc7-4fea-afa4-922e83d9ac0f"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Drag Locators",ExpressionUUID->"e3d7c77a-c5be-4951-9308-0c5b9163f9e0"]}],
  
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "DragLocators",ExpressionUUID->"41d6121b-4916-405b-a816-cdf11ab4b14c"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Create and Delete Locators",ExpressionUUID->
    "3248b5b3-45ab-404b-9b38-6156151500c0"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "CreateAndDeleteLocators",ExpressionUUID->"aec6adbf-ba7b-4bf3-85d3-\
1aa5a98a1a09"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Slider Zoom",ExpressionUUID->"1cb23a88-bceb-4e6d-a730-64b325121d74"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "SliderZoom",ExpressionUUID->"1ead6bdf-67c3-4042-9670-c3d18fb1a603"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Gamepad Controls",ExpressionUUID->
    "99e94a82-8ab4-49ed-a38a-ba60fcb8b79d"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->
  "GamepadControls",ExpressionUUID->"451059a5-a3ab-4dd5-9315-a8ae00c41627"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Automatic Animation",ExpressionUUID->
    "1ab352de-dd81-407b-ae3d-d70762abbaa5"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{{3.750635224943946*^9, 3.7506352249543047`*^9}},
 FontFamily->"Verdana",
 CellTags->
  "AutomaticAnimation",ExpressionUUID->"7933282d-92c6-45a3-ba79-879fd8598544"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Bookmark Animation",ExpressionUUID->
    "de92b270-3985-4d30-b99f-6d82b2cc4cdd"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{{3.751160003634556*^9, 3.751160003778255*^9}},
 FontFamily->"Verdana",
 CellTags->
  "BookmarkAnimation",ExpressionUUID->"ea2c38b1-fc1c-4683-aec6-f16f4887df5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection",ExpressionUUID->"30360f96-ca2c-43d4-8255-4b226a18cf14"],

Cell["Laplace equations", "SearchTerms",
 CellChangeTimes->{{3.751159604896248*^9, 3.751159605835191*^9}},
 CellID->77209804,ExpressionUUID->"325181f5-6c06-44f0-a158-52f2572a4e59"],

Cell["Harmonic functions", "SearchTerms",
 CellChangeTimes->{{3.751159604896248*^9, 3.751159608001131*^9}},
 CellID->757093818,ExpressionUUID->"d18ddac3-0009-4241-81c6-10a3888fd9e7"],

Cell["Dirichlet Problem", "SearchTerms",
 CellChangeTimes->{{3.751159604896248*^9, 3.7511596127638493`*^9}},
 CellID->1884828433,ExpressionUUID->"f5036032-8703-4e61-897d-0cb3cffcb066"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection",ExpressionUUID->"eeea711a-da8e-43b1-9e71-2627ea9c0f33"],

Cell["Wolfram Demonstrations: ", "RelatedLinks",
 CellChangeTimes->{{3.750634303487619*^9, 3.750634326860317*^9}, {
  3.750634364374133*^9, 3.750634364374403*^9}},
 CellID->696282730,ExpressionUUID->"1e93ab7a-4a58-4711-b64f-5f07db4489ad"],

Cell[TextData[ButtonBox["Solutions of the Finite Difference Discretized \
Laplace Equation",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
SolutionsOfTheFiniteDifferenceDiscretizedLaplaceEquation/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/\
SolutionsOfTheFiniteDifferenceDiscretizedLaplaceEquation/"]], "RelatedLinks",
 CellChangeTimes->{{3.750634303487619*^9, 3.750634326860317*^9}, 
   3.750634365081356*^9, {3.750634417302692*^9, 3.750634418549396*^9}, {
   3.750634716489533*^9, 3.7506347164898357`*^9}, {3.7511598683703737`*^9, 
   3.751159868373199*^9}},
 CellID->1951787316,ExpressionUUID->"cec5b70c-d203-49a5-97b8-efa6deac3343"],

Cell[TextData[ButtonBox["Laplace equation on Square",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/LaplacesEquationOnASquare/"], None},
 
 ButtonNote->
  "http://demonstrations.wolfram.com/LaplacesEquationOnASquare/"]], \
"RelatedLinks",
 CellChangeTimes->{{3.750634303487619*^9, 3.750634326860317*^9}, 
   3.750634365081356*^9, {3.750634417302692*^9, 3.750634418549396*^9}, {
   3.750634717922997*^9, 3.75063473910223*^9}, {3.751159739477681*^9, 
   3.751159767289501*^9}},
 CellID->149904852,ExpressionUUID->"a55572b6-154d-42e7-9dc7-4a7b8de756d7"],

Cell[TextData[StyleBox["Wolfram Math World Links:", "SearchTerms"]], \
"RelatedLinks",
 CellChangeTimes->{{3.750634303487619*^9, 3.750634326860317*^9}, 
   3.750634365081356*^9, {3.750634417302692*^9, 3.750634430006061*^9}, {
   3.7511598185062857`*^9, 3.751159836184067*^9}},
 CellID->776170488,ExpressionUUID->"5fd4fee1-51af-4491-9616-018ea3e2a9af"],

Cell[TextData[ButtonBox["Laplace equations",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/LaplacesEquation.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/LaplacesEquation.html"]], "RelatedLinks",
 CellChangeTimes->{{3.750634303487619*^9, 3.750634326860317*^9}, 
   3.750634365081356*^9, {3.750634417302692*^9, 3.750634447015522*^9}, {
   3.751159775457745*^9, 3.751159798925928*^9}},
 CellID->1488147725,ExpressionUUID->"d6801393-69e1-4b0b-915e-4334e0484822"],

Cell[TextData[ButtonBox["Harmonic functions",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/HarmonicFunction.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/HarmonicFunction.html"]], "RelatedLinks",
 CellChangeTimes->{{3.750634303487619*^9, 3.750634326860317*^9}, 
   3.750634365081356*^9, {3.750634417302692*^9, 3.7506345148147087`*^9}, {
   3.751159789004572*^9, 3.7511597979559603`*^9}},
 CellID->1626480984,ExpressionUUID->"255355fa-1efd-4952-bd65-c5db2afcea6d"],

Cell[TextData[ButtonBox["Dirichlet Problem",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/DirichletProblem.html"], None},
 ButtonNote->
  "http://mathworld.wolfram.com/DirichletProblem.html"]], "RelatedLinks",
 CellChangeTimes->{{3.750634303487619*^9, 3.750634326860317*^9}, 
   3.750634365081356*^9, {3.750634417302692*^9, 3.750634469955619*^9}, {
   3.7506345129026737`*^9, 3.750634513240399*^9}, {3.7511598032999277`*^9, 
   3.751159811586545*^9}},
 CellID->1268070585,ExpressionUUID->"a57e3110-f367-467c-88c2-4326efe8874e"],

Cell["", "RelatedLinks",
 CellChangeTimes->{{3.750634303487619*^9, 3.750634324598715*^9}, 
   3.7506343563168917`*^9, 3.750634708896104*^9},
 CellID->1143740809,ExpressionUUID->"a3bf0754-1f28-479d-b8ae-712014dd9405"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection",ExpressionUUID->"6dd1fa27-147b-41f1-a2b4-b2df789cd517"],

Cell["Contributed by: XXXX", "Author",ExpressionUUID->"05b8b213-0b6f-4b6d-8b63-9cdd1b54f0fb"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[552930, 10501, 498, 12, 4657, "ControlSuggestions",ExpressionUUID->"3be103c9-d269-45a2-99a6-616b2c8993a7",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[553431, 10515, 867, 20, 4657, "ControlSuggestions",ExpressionUUID->"410c64af-2bc7-4fea-afa4-922e83d9ac0f",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[554301, 10537, 460, 14, 4657, "ControlSuggestions",ExpressionUUID->"41d6121b-4916-405b-a816-cdf11ab4b14c",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[554764, 10553, 761, 19, 4657, "ControlSuggestions",ExpressionUUID->"aec6adbf-ba7b-4bf3-85d3-1aa5a98a1a09",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[555528, 10574, 961, 23, 4657, "ControlSuggestions",ExpressionUUID->"1ead6bdf-67c3-4042-9670-c3d18fb1a603",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[556492, 10599, 491, 12, 4657, "ControlSuggestions",ExpressionUUID->"451059a5-a3ab-4dd5-9315-a8ae00c41627",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[556986, 10613, 1653, 35, 4657, "ControlSuggestions",ExpressionUUID->"7933282d-92c6-45a3-ba79-879fd8598544",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[558642, 10650, 1095, 25, 4657, "ControlSuggestions",ExpressionUUID->"ea2c38b1-fc1c-4683-aec6-f16f4887df5c",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 564869, 10801},
 {"RotateAndZoomIn3D", 565038, 10804},
 {"DragLocators", 565207, 10807},
 {"CreateAndDeleteLocators", 565382, 10810},
 {"SliderZoom", 565555, 10813},
 {"GamepadControls", 565720, 10816},
 {"AutomaticAnimation", 565893, 10819},
 {"BookmarkAnimation", 566069, 10822}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 267, 6, 160, "DemoTitle",ExpressionUUID->"fca3b871-6391-41c1-a677-6dd10825a8ab"],
Cell[CellGroupData[{
Cell[872, 32, 88, 0, 442, "InitializationSection",ExpressionUUID->"9c60944b-1fc6-432d-8bf3-698c5a77df14"],
Cell[963, 34, 93017, 2068, 978509, "Input",ExpressionUUID->"763c3394-1fa3-4b6b-8359-6c0fc0a986b9",
 InitializationCell->True,
 CellID->1948118278]
}, Closed]],
Cell[CellGroupData[{
Cell[94017, 2107, 84, 0, 283, "ManipulateSection",ExpressionUUID->"e6336013-1021-4057-9849-deca4ccb430d"],
Cell[CellGroupData[{
Cell[94126, 2111, 49941, 1040, 4272, "Input",ExpressionUUID->"87e8e0d7-1c9d-4616-8085-9b97e2ea08b2"],
Cell[144070, 3153, 130261, 2549, 815, "Output",ExpressionUUID->"6480a5c8-3b57-4399-bc2a-8b04127f1e46",
 CellID->178688869]
}, {2}]],
Cell[274343, 5705, 220, 4, 41, "Input",ExpressionUUID->"e641808a-6555-4ee4-a382-d4690a4fd148",
 CellID->1675318850],
Cell[274566, 5711, 220, 4, 41, "Input",ExpressionUUID->"5b862f96-1dae-4384-94a1-1b8f48cfb91d",
 CellID->1111114527],
Cell[274789, 5717, 216, 4, 41, "Input",ExpressionUUID->"75f34492-7df6-419e-848e-8f39cf32408c",
 CellID->870547683]
}, Open  ]],
Cell[CellGroupData[{
Cell[275042, 5726, 91, 0, 264, "ManipulateCaptionSection",ExpressionUUID->"499bd43a-0913-4dd4-bd0f-fc22e1436df5"],
Cell[275136, 5728, 1315, 36, 60, "ManipulateCaption",ExpressionUUID->"9da8be27-dfab-4553-bc23-83437f1cd9ef"],
Cell[276454, 5766, 600, 10, 58, "ManipulateCaption",ExpressionUUID->"1ac8d8a4-c0d7-4eb1-968a-6906a5016465",
 CellID->130159530],
Cell[277057, 5778, 1565, 40, 83, "ManipulateCaption",ExpressionUUID->"fe17e479-3108-46f4-aaec-cad6e0445048",
 CellID->1393866021]
}, Open  ]],
Cell[CellGroupData[{
Cell[278659, 5823, 83, 0, 265, "ThumbnailSection",ExpressionUUID->"b1d7a709-ba55-45dd-918e-5b3b93854d9f"],
Cell[278745, 5825, 88784, 1495, 667, "Output",ExpressionUUID->"aa80c88a-fe6e-4152-bb7a-266ffd011f43",
 CellID->1537816196]
}, Open  ]],
Cell[CellGroupData[{
Cell[367566, 7325, 83, 0, 220, "SnapshotsSection",ExpressionUUID->"bd8e3ac3-cbfc-44d1-806e-00755048364b"],
Cell[367652, 7327, 90161, 1518, 665, "Output",ExpressionUUID->"2e2120c7-38d2-432c-a3ef-539060986fa4",
 CellID->838830638],
Cell[457816, 8847, 88962, 1496, 673, "Output",ExpressionUUID->"e5456751-3a0b-4879-bfc3-acf92c9cb062",
 CellID->931283217]
}, Open  ]],
Cell[CellGroupData[{
Cell[546815, 10348, 81, 0, 521, "DetailsSection",ExpressionUUID->"7bdc28d3-2797-4c8c-a648-a98db1367914"],
Cell[546899, 10350, 557, 13, 36, "DetailNotes",ExpressionUUID->"ed850329-c225-490c-aa9b-735113d5491e",
 CellID->275947578],
Cell[547459, 10365, 358, 6, 34, "DetailNotes",ExpressionUUID->"595671c5-2d31-435a-ae6e-0db5c93951ad",
 CellID->1937732423],
Cell[547820, 10373, 395, 6, 58, "DetailNotes",ExpressionUUID->"d9388a10-b141-4907-9fe0-ac6d0f4e2576",
 CellID->357344046],
Cell[548218, 10381, 372, 6, 34, "DetailNotes",ExpressionUUID->"716676f3-2883-4081-839f-17135893f430",
 CellID->1584451762],
Cell[548593, 10389, 432, 8, 34, "DetailNotes",ExpressionUUID->"c586a8b8-5a41-47c0-a2b9-008df86d1d8f",
 CellID->26428597],
Cell[549028, 10399, 820, 18, 36, "DetailNotes",ExpressionUUID->"6151c42f-4783-4761-8f44-49300d5db224",
 CellID->2018379231],
Cell[549851, 10419, 799, 22, 61, "DetailNotes",ExpressionUUID->"6ca25516-b6e8-4f36-875c-6fbe781f2a18",
 CellID->1560126935],
Cell[550653, 10443, 1189, 29, 90, "DetailNotes",ExpressionUUID->"60b3fad5-6f4f-4e92-86f0-0d199fa3efd1",
 CellID->1040532433],
Cell[551845, 10474, 216, 3, 76, "DetailNotes",ExpressionUUID->"af6daf58-84ea-4e1c-a37b-0beb3b2b6577",
 CellID->2104939421],
Cell[552064, 10479, 303, 4, 76, "DetailNotes",ExpressionUUID->"404e6918-28d4-4040-ad3f-88eb19c2e7ef",
 CellID->1184010145],
Cell[552370, 10485, 428, 9, 76, "DetailNotes",ExpressionUUID->"64158742-eeb5-484a-b428-d8c345ec444e",
 CellID->1184742875]
}, Open  ]],
Cell[CellGroupData[{
Cell[552835, 10499, 92, 0, 436, "ControlSuggestionsSection",ExpressionUUID->"1d40ab5f-ee43-4d4b-b3c4-8ef7794f13ac"],
Cell[552930, 10501, 498, 12, 4657, "ControlSuggestions",ExpressionUUID->"3be103c9-d269-45a2-99a6-616b2c8993a7",
 CellTags->"ResizeImages"],
Cell[553431, 10515, 867, 20, 4657, "ControlSuggestions",ExpressionUUID->"410c64af-2bc7-4fea-afa4-922e83d9ac0f",
 CellTags->"RotateAndZoomIn3D"],
Cell[554301, 10537, 460, 14, 4657, "ControlSuggestions",ExpressionUUID->"41d6121b-4916-405b-a816-cdf11ab4b14c",
 CellTags->"DragLocators"],
Cell[554764, 10553, 761, 19, 4657, "ControlSuggestions",ExpressionUUID->"aec6adbf-ba7b-4bf3-85d3-1aa5a98a1a09",
 CellTags->"CreateAndDeleteLocators"],
Cell[555528, 10574, 961, 23, 4657, "ControlSuggestions",ExpressionUUID->"1ead6bdf-67c3-4042-9670-c3d18fb1a603",
 CellTags->"SliderZoom"],
Cell[556492, 10599, 491, 12, 4657, "ControlSuggestions",ExpressionUUID->"451059a5-a3ab-4dd5-9315-a8ae00c41627",
 CellTags->"GamepadControls"],
Cell[556986, 10613, 1653, 35, 4657, "ControlSuggestions",ExpressionUUID->"7933282d-92c6-45a3-ba79-879fd8598544",
 CellTags->"AutomaticAnimation"],
Cell[558642, 10650, 1095, 25, 4657, "ControlSuggestions",ExpressionUUID->"ea2c38b1-fc1c-4683-aec6-f16f4887df5c",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559774, 10680, 85, 0, 31128, "SearchTermsSection",ExpressionUUID->"30360f96-ca2c-43d4-8255-4b226a18cf14"],
Cell[559862, 10682, 180, 2, 4374, "SearchTerms",ExpressionUUID->"325181f5-6c06-44f0-a158-52f2572a4e59",
 CellID->77209804],
Cell[560045, 10686, 182, 2, 4374, "SearchTerms",ExpressionUUID->"d18ddac3-0009-4241-81c6-10a3888fd9e7",
 CellID->757093818],
Cell[560230, 10690, 184, 2, 4374, "SearchTerms",ExpressionUUID->"f5036032-8703-4e61-897d-0cb3cffcb066",
 CellID->1884828433]
}, Open  ]],
Cell[CellGroupData[{
Cell[560451, 10697, 86, 0, 28233, "RelatedLinksSection",ExpressionUUID->"eeea711a-da8e-43b1-9e71-2627ea9c0f33"],
Cell[560540, 10699, 238, 3, 4374, "RelatedLinks",ExpressionUUID->"1e93ab7a-4a58-4711-b64f-5f07db4489ad",
 CellID->696282730],
Cell[560781, 10704, 693, 13, 4374, "RelatedLinks",ExpressionUUID->"cec5b70c-d203-49a5-97b8-efa6deac3343",
 CellID->1951787316],
Cell[561477, 10719, 586, 12, 4374, "RelatedLinks",ExpressionUUID->"a55572b6-154d-42e7-9dc7-4a7b8de756d7",
 CellID->149904852],
Cell[562066, 10733, 351, 5, 6970, "RelatedLinks",ExpressionUUID->"5fd4fee1-51af-4491-9616-018ea3e2a9af",
 CellID->776170488],
Cell[562420, 10740, 505, 9, 6970, "RelatedLinks",ExpressionUUID->"d6801393-69e1-4b0b-915e-4334e0484822",
 CellID->1488147725],
Cell[562928, 10751, 510, 9, 6970, "RelatedLinks",ExpressionUUID->"255355fa-1efd-4952-bd65-c5db2afcea6d",
 CellID->1626480984],
Cell[563441, 10762, 559, 10, 6970, "RelatedLinks",ExpressionUUID->"a57e3110-f367-467c-88c2-4326efe8874e",
 CellID->1268070585],
Cell[564003, 10774, 216, 3, 6970, "RelatedLinks",ExpressionUUID->"a3bf0754-1f28-479d-b8ae-712014dd9405",
 CellID->1143740809]
}, Open  ]],
Cell[CellGroupData[{
Cell[564256, 10782, 80, 0, 43692, "AuthorSection",ExpressionUUID->"6dd1fa27-147b-41f1-a2b4-b2df789cd517"],
Cell[564339, 10784, 93, 0, 6970, "Author",ExpressionUUID->"05b8b213-0b6f-4b6d-8b63-9cdd1b54f0fb"]
}, Open  ]]
}, Open  ]]
}
]
*)

